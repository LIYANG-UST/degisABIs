{
  "contractName": "NaughtyFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "INIT_CODE_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "_nextId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "policyCore",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getLatestTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllPairs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress2",
          "type": "address"
        }
      ],
      "name": "getPairAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policyCore",
          "type": "address"
        }
      ],
      "name": "setPolicyCoreAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policyTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stablecoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "deployPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_policyTokenName",
          "type": "string"
        }
      ],
      "name": "deployPolicyToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"INIT_CODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_nextId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_policyTokenName\",\"type\":\"string\"}],\"name\":\"deployPolicyToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"deployPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPairs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress2\",\"type\":\"address\"}],\"name\":\"getPairAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policyCore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyCore\",\"type\":\"address\"}],\"name\":\"setPolicyCoreAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory contract to deploy new pools periodically      Each pool(product) will have a unique naughtyId      Each pool will have its pool token      PolicyToken - Stablecoin      Token 0 may change but Token 1 is always stablecoin.\",\"kind\":\"dev\",\"methods\":{\"deployPolicyToken(string)\":{\"params\":{\"_policyTokenName\":\": Name of the policyToken\"},\"returns\":{\"_0\":\"PolicyToken address\"}},\"deployPool(address,address,uint256)\":{\"params\":{\"_policyTokenAddress\":\": Address of policy token\",\"_stablecoin\":\": Address of the stable coin\"},\"returns\":{\"_0\":\"Address of the pool\"}},\"getLatestTokenAddress()\":{\"returns\":{\"_0\":\"Latest token address\"}},\"getPairAddress(address,address)\":{\"params\":{\"_tokenAddress1\":\"Address of token1\",\"_tokenAddress2\":\"Address of toekn2\"},\"returns\":{\"_0\":\"Pool address of the two tokens\"}},\"setFeeTo(address)\":{\"params\":{\"_feeTo\":\"Address to receive the fee\"}},\"setFeeToSetter(address)\":{\"params\":{\"_feeToSetter\":\"Address to control the feeTo\"}},\"setPolicyCoreAddress(address)\":{\"params\":{\"_policyCore\":\": Address of policyCore contract\"}}},\"title\":\"Naughty Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deployPolicyToken(string)\":{\"notice\":\"For each round we need to first create the policytoken(ERC20)\"},\"deployPool(address,address,uint256)\":{\"notice\":\"After deploy the policytoken and get the address,         we deploy the policyToken - stablecoin pool contract\"},\"getAllPairs()\":{\"notice\":\"Get all pair addresses\"},\"getAllTokens()\":{\"notice\":\"Get all token addresses\"},\"getLatestTokenAddress()\":{\"notice\":\"Next token to be deployed\"},\"getPairAddress(address,address)\":{\"notice\":\"Get the pair address deployed by the factory         PolicyToken address first, and then stablecoin address         The order of the tokens will be sorted inside the function\"},\"setFeeTo(address)\":{\"notice\":\"Set feeTo address\"},\"setFeeToSetter(address)\":{\"notice\":\"Set feeToSetter address\"},\"setPolicyCoreAddress(address)\":{\"notice\":\"Remember to call this function to set the policyCore address         < PolicyCore should be the owner of policyToken >\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NaughtyFactory.sol\":\"NaughtyFactory\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"prb-math/contracts/PRBMath.sol\":{\"keccak256\":\"0x62cbabae4910e168e99b9c2c3e3b5c9c7ad5e7abd961dcc63b7ea3d83d8ea87e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4b964fe2e49911c7b4b3c2ce230f606fd0ce8b7edc9dc7d0145ba2fb76bf2e71\",\"dweb:/ipfs/QmcEfVW9EfV3JCYavF1L3LxtqivHXWFTtWpkwNEsgzxG1r\"]},\"project:/contracts/NPPolicyToken.sol\":{\"keccak256\":\"0x92ce282c39ad70a848ec9bd4fa370af0686224f42bdeb2ffcda54c5d6c738a27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc9ab7284b787be30903f85fea4146e04d6513493fc01b555b06e9979aeb0a75\",\"dweb:/ipfs/QmP2Y1m6TK5mNZcBVTx9F8QjAvhPfHMxb4WH7W6cXgGmRn\"]},\"project:/contracts/NaughtyFactory.sol\":{\"keccak256\":\"0x4168540b2317d577a97dcf4dcdf8d43f1e5c11901c139a8e90635136197b855a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://913ec40ae13392a80cae5414b99fe7515ce9b5100b39570a19bc3950f280e22e\",\"dweb:/ipfs/QmXYgeVKjst3LBxv5eYDXPDwKvEzqnTs8MxwcsgboqQgGT\"]},\"project:/contracts/NaughtyPair.sol\":{\"keccak256\":\"0x1f02491d01ae1cf278307af3a9253c20715de74600f85e4518eeafb8d3d46f6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4047670d9c587874f20b29ef7c16002d443e417fcb94ffa397c35becc4375279\",\"dweb:/ipfs/QmbJqsB5diYHstoXpBAyohi4Be3DcULK55EV5VsW5qfggd\"]},\"project:/contracts/PoolLPToken.sol\":{\"keccak256\":\"0x0bc47743d4b70e39cac20c5bee62f1cc51e2cb65db888bed996a962131fd23fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973adaa2b881681fe7438382430465e68fcc1dfd652929149e1ab0716cd560cb\",\"dweb:/ipfs/QmTVvffkG4LM53ssg6qoGzD9ozvZf4oZhQ4iHXVvRfzpg8\"]},\"project:/contracts/interfaces/INPPolicyToken.sol\":{\"keccak256\":\"0xdb54fa69a031d2297cfcfddb47a2cdd667a5af0c2dabdf8a6fd1ac7c49a050d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11acf01e7cd8e9d30e01740e93f9fbf2059f66d2010768f5ec33eb6a0ea4375d\",\"dweb:/ipfs/QmRuA9WQRNrKwJiJrScouhybdjJ5H4MVWbELfqQKpq2iww\"]},\"project:/contracts/interfaces/INaughtyFactory.sol\":{\"keccak256\":\"0x3276124a18f123b75c58067c84ac2c77fad8292ace0410698f60052be7a995fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d58d20fe1564468704508d023f07de64d1d0e5dedd97c67e557c5b034ecbc5b0\",\"dweb:/ipfs/QmTb8jLzCQFKWWk4Hx6bsLhdPiJdjfWFEGTSgk1hdhrK81\"]},\"project:/contracts/interfaces/INaughtyPair.sol\":{\"keccak256\":\"0xd91067a8b5d7f29c9e9ced0d80a88abde455f7c91c1473e9abfcc6b3aa3d207f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd75fabb00aea740da2d2a3d56f3ab42c1a6dbaf39783b2c6c18307ee4fddf6f\",\"dweb:/ipfs/QmNpJpAjacEZF812LSPsUXu372AsAk6rxFdvpMbAD3mVvh\"]},\"project:/contracts/interfaces/IPolicyCore.sol\":{\"keccak256\":\"0xaf90170521dac969fbcd7d019385d45060a3a3f34f6045e6a5f4d7bc4a9fcd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6423aa761031f2ace34638ac0664f3d8831eb10e41a10c00ea66d50718fa9ce\",\"dweb:/ipfs/QmbN2VFuSgta76LmyLLfb7tL6FHYDcNPC4Go7UGufAywi1\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161416d38038061416d83398101604081905261002f91610054565b600680546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6140da806100936000396000f3fe60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c8063a3232bf31162000097578063f03c6132116200006e578063f03c61321462000211578063f2f2fff51462000228578063f46901ed1462000232578063f800ece9146200024957600080fd5b8063a3232bf314620001cf578063b4f69a2f14620001e6578063e30145e014620001fd57600080fd5b80632a5c792a11620000d85780632a5c792a146200016057806361c8f99d14620001795780639fd2650e14620001ae578063a2e74af614620001b857600080fd5b8063017e7e581462000102578063094b74151462000133578063257671f51462000147575b600080fd5b60055462000116906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60065462000116906001600160a01b031681565b6200015162000253565b6040519081526020016200012a565b6200016a620002a1565b6040516200012a919062000acb565b620001ac6200018a36600462000b37565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b005b6200011662000305565b620001ac620001c936600462000b37565b6200034c565b62000116620001e036600462000b55565b620003a4565b62000116620001f736600462000b96565b62000603565b60045462000116906001600160a01b031681565b620001166200022236600462000be4565b620006cd565b6200015160035481565b620001ac6200024336600462000b37565b62000783565b6200016a620007d2565b604051620002646020820162000aaf565b601f1982820381018352601f90910116604081905262000288919060200162000cd2565b6040516020818303038152906040528051906020012081565b60606002805480602002602001604051908101604052809291908181526020018280548015620002fb57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620002dc575b5050505050905090565b600080600160035462000319919062000d06565b90506002818154811062000331576200033162000d20565b6000918252602090912001546001600160a01b031692915050565b6006546001600160a01b03163314620003825760405162461bcd60e51b8152600401620003799062000d36565b60405180910390fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6004805460405163237dd6ed60e11b81526001600160a01b0385811693820193909352600092909116906346fbadda9060240160206040518083038186803b158015620003f057600080fd5b505afa15801562000405573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200042b919062000d7d565b15156001146200049d5760405162461bcd60e51b815260206004820152603660248201527f596f752067697665207468652077726f6e67206f72646572206f6620706f6c6960448201527531bcaa37b5b2b71030b7321039ba30b13632b1b7b4b760511b606482015260840162000379565b600060405180602001620004b19062000aaf565b601f1982820381018352601f9091011660405290506000620004d38662000834565b620004de8662000834565b604051602001620004f192919062000da1565b60405160208183030381529060405280519060200120905060006200051783836200084c565b6040516305e52ecf60e21b81526001600160a01b03898116600483015288811660248301526044820188905291925090821690631794bb3c90606401600060405180830381600087803b1580156200056e57600080fd5b505af115801562000583573d6000803e3d6000fd5b5050506001600160a01b038089166000908152602081815260408083208b85168452909152812080549285166001600160a01b0319938416811790915560018054808201825592527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909101805490921617905550925050509392505050565b6004805460405163237dd6ed60e11b81526001600160a01b0384811693820193909352600092839283929116906346fbadda9060240160206040518083038186803b1580156200065257600080fd5b505afa15801562000667573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200068d919062000d7d565b6200069a5783856200069d565b84845b6001600160a01b039182166000908152602081815260408083209385168352929052205416925050505b92915050565b60008082604051602001620006e3919062000cd2565b6040516020818303038152906040528051906020012090506000620007088462000866565b905060006200071882846200084c565b6002805460018101825560009182527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384161790556003805492935090620007758362000dd4565b909155509095945050505050565b6006546001600160a01b03163314620007b05760405162461bcd60e51b8152600401620003799062000d36565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b60606001805480602002602001604051908101604052809291908181526020018280548015620002fb576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620002dc575050505050905090565b6060620006c76001600160a01b0383166014620008ee565b6000818351602085016000f59050803b620006c757600080fd5b60606000604051806020016200087c9062000abd565b601f1982820381018352601f9091011660408190526004549192508291620008b791869182916001600160a01b039091169060200162000e20565b60408051601f1981840301815290829052620008d7929160200162000da1565b604051602081830303815290604052915050919050565b60606000620008ff83600262000e62565b6200090c90600262000e84565b67ffffffffffffffff81111562000927576200092762000bce565b6040519080825280601f01601f19166020018201604052801562000952576020820181803683370190505b509050600360fc1b8160008151811062000970576200097062000d20565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110620009a257620009a262000d20565b60200101906001600160f81b031916908160001a9053506000620009c884600262000e62565b620009d590600162000e84565b90505b600181111562000a57576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811062000a0d5762000a0d62000d20565b1a60f81b82828151811062000a265762000a2662000d20565b60200101906001600160f81b031916908160001a90535060049490941c9362000a4f8162000e9f565b9050620009d8565b50831562000aa85760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640162000379565b9392505050565b6121868062000eba83390190565b611065806200304083390190565b6020808252825182820181905260009190848201906040850190845b8181101562000b0e5783516001600160a01b03168352928401929184019160010162000ae7565b50909695505050505050565b80356001600160a01b038116811462000b3257600080fd5b919050565b60006020828403121562000b4a57600080fd5b62000aa88262000b1a565b60008060006060848603121562000b6b57600080fd5b62000b768462000b1a565b925062000b866020850162000b1a565b9150604084013590509250925092565b6000806040838503121562000baa57600080fd5b62000bb58362000b1a565b915062000bc56020840162000b1a565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121562000bf757600080fd5b813567ffffffffffffffff8082111562000c1057600080fd5b818401915084601f83011262000c2557600080fd5b81358181111562000c3a5762000c3a62000bce565b604051601f8201601f19908116603f0116810190838211818310171562000c655762000c6562000bce565b8160405282815287602084870101111562000c7f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b8381101562000cbc57818101518382015260200162000ca2565b8381111562000ccc576000848401525b50505050565b6000825162000ce681846020870162000c9f565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b60008282101562000d1b5762000d1b62000cf0565b500390565b634e487b7160e01b600052603260045260246000fd5b60208082526027908201527f4f6e6c7920666565546f5365747465722063616e2063616c6c207468697320666040820152663ab731ba34b7b760c91b606082015260800190565b60006020828403121562000d9057600080fd5b8151801515811462000aa857600080fd5b6000835162000db581846020880162000c9f565b83519083019062000dcb81836020880162000c9f565b01949350505050565b600060001982141562000deb5762000deb62000cf0565b5060010190565b6000815180845262000e0c81602086016020860162000c9f565b601f01601f19169290920160200192915050565b60608152600062000e35606083018662000df2565b828103602084015262000e49818662000df2565b91505060018060a01b0383166040830152949350505050565b600081600019048311821515161562000e7f5762000e7f62000cf0565b500290565b6000821982111562000e9a5762000e9a62000cf0565b500190565b60008162000eb15762000eb162000cf0565b50600019019056fe60806040526008805460ff60e01b19167c01000000000000000000000000000000000000000000000000000000001790553480156200003d57600080fd5b506040518060400160405280600f81526020017f4e61756768747920506f6f6c204c5000000000000000000000000000000000008152506040518060400160405280600381526020017f4e4c5000000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000c2929190620000f3565b508051620000d8906004906020840190620000f3565b5050600580546001600160a01b0319163317905550620001ef565b828054620001019062000199565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600181811c90821680620001ae57607f821691505b60208210811415620001e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b611f8780620001ff6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80636d9a640a116100c3578063ba9a7a561161007c578063ba9a7a5614610311578063c45a01551461031a578063d21220a71461032d578063dd62ed3e14610340578063f952f01a14610292578063fff6cae91461037957600080fd5b80636d9a640a1461027f57806370a082311461029257806389afcb44146102bb57806395d89b41146102e3578063a457c2d7146102eb578063a9059cbb146102fe57600080fd5b806323b872dd1161011557806323b872dd1461021a57806329dcb0cf1461022d578063313ce5671461023657806339509351146102455780636a5e2650146102585780636a6278421461026c57600080fd5b806306fdde031461015d5780630902f1ac1461017b578063095ea7b3146101a55780630dfe1681146101c85780631794bb3c146101f357806318160ddd14610208575b600080fd5b610165610381565b6040516101729190611ccb565b60405180910390f35b600854604080516001600160701b038084168252600160701b909304909216602083015201610172565b6101b86101b3366004611d1a565b610413565b6040519015158152602001610172565b6006546101db906001600160a01b031681565b6040516001600160a01b039091168152602001610172565b610206610201366004611d44565b610429565b005b6002545b604051908152602001610172565b6101b8610228366004611d44565b6104d5565b61020c60095481565b60405160128152602001610172565b6101b8610253366004611d1a565b610581565b6008546101b890600160e01b900460ff1681565b61020c61027a366004611d80565b6105bd565b61020661028d366004611d9b565b61084b565b61020c6102a0366004611d80565b6001600160a01b031660009081526020819052604090205490565b6102ce6102c9366004611d80565b610d4c565b60408051928352602083019190915201610172565b6101656110cd565b6101b86102f9366004611d1a565b6110dc565b6101b861030c366004611d1a565b611175565b61020c6103e881565b6005546101db906001600160a01b031681565b6007546101db906001600160a01b031681565b61020c61034e366004611dd0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610206611182565b60606003805461039090611e03565b80601f01602080910402602001604051908101604052809291908181526020018280546103bc90611e03565b80156104095780601f106103de57610100808354040283529160200191610409565b820191906000526020600020905b8154815290600101906020018083116103ec57829003601f168201915b5050505050905090565b60006104203384846112cf565b50600192915050565b6005546001600160a01b031633146104a05760405162461bcd60e51b815260206004820152602f60248201527f63616e206f6e6c7920626520696e697469616c697a656420627920746865206660448201526e1858dd1bdc9e4818dbdb9d1c9858dd608a1b60648201526084015b60405180910390fd5b600680546001600160a01b039485166001600160a01b0319918216179091556007805493909416921691909117909155600955565b60006104e28484846113f3565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105675760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610497565b61057485338584036112cf565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104209185906105b8908690611e54565b6112cf565b60008060006105e06008546001600160701b0380821692600160701b9092041690565b6006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561062c57600080fd5b505afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106649190611e6c565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156106ad57600080fd5b505afa1580156106c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e59190611e6c565b905060006106fc6001600160701b03861684611e85565b905060006107136001600160701b03861684611e85565b9050600061072060025490565b905080610759576103e861073c6107378486611e9c565b6115c3565b6107469190611e85565b9750610754306103e861173e565b6107a0565b61079d6001600160701b0388166107708386611e9c565b61077a9190611ed1565b6001600160701b03881661078e8486611e9c565b6107989190611ed1565b61174c565b97505b600088116107f05760405162461bcd60e51b815260206004820152601d60248201527f696e73756666696369656e74206c6971756964697479206d696e7465640000006044820152606401610497565b6107fa898961173e565b6108048585611762565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250505050505050919050565b60095442111561089d5760405162461bcd60e51b815260206004820152601b60248201527f43616e206e6f74207377617020616674657220646561646c696e6500000000006044820152606401610497565b600854600160e01b900460ff1615156001146108cb5760405162461bcd60e51b815260040161049790611ef3565b6008805460ff60e01b19169055821515806108e65750600082115b6109325760405162461bcd60e51b815260206004820152601b60248201527f4f757470757420616d6f756e74206e65656420746f206265203e3000000000006044820152606401610497565b6000806109536008546001600160701b0380821692600160701b9092041690565b6001600160701b031691506001600160701b03169150818510801561097757508084105b6109ba5760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b6044820152606401610497565b60065460075460009182916001600160a01b039182169190811690871682148015906109f85750806001600160a01b0316876001600160a01b031614155b610a315760405162461bcd60e51b815260206004820152600a602482015269494e56414c49445f544f60b01b6044820152606401610497565b8815610a4b57610a4b6001600160a01b038316888b611834565b8715610a6557610a656001600160a01b038216888a611834565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015610aa457600080fd5b505afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc9190611e6c565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a082319060240160206040518083038186803b158015610b1e57600080fd5b505afa158015610b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b569190611e6c565b9250505060008785610b689190611e85565b8311610b75576000610b89565b610b7f8886611e85565b610b899084611e85565b90506000610b978886611e85565b8311610ba4576000610bb8565b610bae8886611e85565b610bb89084611e85565b90506000821180610bc95750600081115b610c155760405162461bcd60e51b815260206004820152601960248201527f494e53554646494349454e545f494e5055545f414d4f554e54000000000000006044820152606401610497565b6000610c22836014611e9c565b610c2e866103e8611e9c565b610c389190611e85565b90506000610c47836014611e9c565b610c53866103e8611e9c565b610c5d9190611e85565b9050610c698789611e9c565b610c7590612710611e9c565b610c7f8284611e9c565b1015610ccd5760405162461bcd60e51b815260206004820181905260248201527f5468652072656d61696e696e6720782a79206973206c657373207468616e204b6044820152606401610497565b5050610cd98484611762565b60408051838152602081018390529081018a9052606081018990526001600160a01b0388169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506008805460ff60e01b1916600160e01b17905550505050505050565b6000806008601c9054906101000a900460ff1615156001151514610d825760405162461bcd60e51b815260040161049790611ef3565b6008805460ff60e01b191690556006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610dd357600080fd5b505afa158015610de7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0b9190611e6c565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610e5457600080fd5b505afa158015610e68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8c9190611e6c565b306000908152602081905260409020546002549192509080610eae8584611e9c565b610eb89190611ed1565b955080610ec58484611e9c565b610ecf9190611ed1565b9450600086118015610ee15750600085115b610f2d5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e74206c6971756964697479206275726e65640000006044820152606401610497565b610f37308361188b565b600654610f4e906001600160a01b03168888611834565b600754610f65906001600160a01b03168887611834565b6006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610fa857600080fd5b505afa158015610fbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe09190611e6c565b6007546040516370a0823160e01b81523060048201529195506001600160a01b0316906370a082319060240160206040518083038186803b15801561102457600080fd5b505afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190611e6c565b92506110688484611762565b60408051878152602081018790526001600160a01b0389169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a350506008805460ff60e01b1916600160e01b1790555091939092509050565b60606004805461039090611e03565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561115e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610497565b61116b33858584036112cf565b5060019392505050565b60006104203384846113f3565b600854600160e01b900460ff1615156001146111b05760405162461bcd60e51b815260040161049790611ef3565b6008805460ff60e01b191690556006546040516370a0823160e01b81523060048201526112ba916001600160a01b0316906370a082319060240160206040518083038186803b15801561120257600080fd5b505afa158015611216573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123a9190611e6c565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561127d57600080fd5b505afa158015611291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b59190611e6c565b611762565b6008805460ff60e01b1916600160e01b179055565b6001600160a01b0383166113315760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610497565b6001600160a01b0382166113925760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610497565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166114575760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610497565b6001600160a01b0382166114b95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610497565b6001600160a01b038316600090815260208190526040902054818110156115315760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610497565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611568908490611e54565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115b491815260200190565b60405180910390a35b50505050565b6000816115d257506000919050565b50600181600160801b81106115ec5760409190911b9060801c5b6801000000000000000081106116075760209190911b9060401c5b640100000000811061161e5760109190911b9060201c5b6201000081106116335760089190911b9060101c5b61010081106116475760049190911b9060081c5b6010811061165a5760029190911b9060041c5b6008811061166a57600182901b91505b600182848161167b5761167b611ebb565b048301901c9150600182848161169357611693611ebb565b048301901c915060018284816116ab576116ab611ebb565b048301901c915060018284816116c3576116c3611ebb565b048301901c915060018284816116db576116db611ebb565b048301901c915060018284816116f3576116f3611ebb565b048301901c9150600182848161170b5761170b611ebb565b048301901c9150600082848161172357611723611ebb565b049050808310156117345782611736565b805b949350505050565b6117488282611895565b5050565b600081831061175b578161057a565b5090919050565b6001600160701b038083118015906117835750806001600160701b03168211155b6117c25760405162461bcd60e51b815260206004820152601060248201526f55696e74313132204f564552464c4f5760801b6044820152606401610497565b600880546001600160701b03848116600160701b9081026001600160e01b0319909316878316179290921792839055604080518483168152929093041660208201527f32dc813d3f262a05478ad1165d5701040e411d9a6e1684c8c2da1c8e6f3b8022910160405180910390a1505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611886908490611974565b505050565b6117488282611a46565b6001600160a01b0382166118eb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610497565b80600260008282546118fd9190611e54565b90915550506001600160a01b0382166000908152602081905260408120805483929061192a908490611e54565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60006119c9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b949092919063ffffffff16565b80519091501561188657808060200190518101906119e79190611f13565b6118865760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610497565b6001600160a01b038216611aa65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610497565b6001600160a01b03821660009081526020819052604090205481811015611b1a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610497565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611b49908490611e85565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6060611736848460008585843b611bed5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610497565b600080866001600160a01b03168587604051611c099190611f35565b60006040518083038185875af1925050503d8060008114611c46576040519150601f19603f3d011682016040523d82523d6000602084013e611c4b565b606091505b5091509150611c5b828286611c66565b979650505050505050565b60608315611c7557508161057a565b825115611c855782518084602001fd5b8160405162461bcd60e51b81526004016104979190611ccb565b60005b83811015611cba578181015183820152602001611ca2565b838111156115bd5750506000910152565b6020815260008251806020840152611cea816040850160208701611c9f565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611d1557600080fd5b919050565b60008060408385031215611d2d57600080fd5b611d3683611cfe565b946020939093013593505050565b600080600060608486031215611d5957600080fd5b611d6284611cfe565b9250611d7060208501611cfe565b9150604084013590509250925092565b600060208284031215611d9257600080fd5b61057a82611cfe565b600080600060608486031215611db057600080fd5b8335925060208401359150611dc760408501611cfe565b90509250925092565b60008060408385031215611de357600080fd5b611dec83611cfe565b9150611dfa60208401611cfe565b90509250929050565b600181811c90821680611e1757607f821691505b60208210811415611e3857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611e6757611e67611e3e565b500190565b600060208284031215611e7e57600080fd5b5051919050565b600082821015611e9757611e97611e3e565b500390565b6000816000190483118215151615611eb657611eb6611e3e565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611eee57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600690820152651313d0d2d15160d21b604082015260600190565b600060208284031215611f2557600080fd5b8151801515811461057a57600080fd5b60008251611f47818460208701611c9f565b919091019291505056fea264697066735822122004c749ef2d6a6c632914b7ef014227a9038de97b64a9d30873854e9d7ef6b51b64736f6c6343000809003360806040523480156200001157600080fd5b506040516200106538038062001065833981016040819052620000349162000226565b8251839083906200004d9060039060208501906200009a565b508051620000639060049060208401906200009a565b5050600580546001600160a01b039093166001600160a01b0319938416811790915560068054909316179091555062000309915050565b828054620000a890620002b3565b90600052602060002090601f016020900481019282620000cc576000855562000117565b82601f10620000e757805160ff191683800117855562000117565b8280016001018555821562000117579182015b8281111562000117578251825591602001919060010190620000fa565b506200012592915062000129565b5090565b5b808211156200012557600081556001016200012a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126200018157600080fd5b81516001600160401b03808211156200019e576200019e62000140565b604051601f8301601f19908116603f01168101908282118183101715620001c957620001c962000140565b81604052838152602092508683858801011115620001e657600080fd5b600091505b838210156200020a5785820183015181830184015290820190620001eb565b838211156200021c5760008385830101525b9695505050505050565b6000806000606084860312156200023c57600080fd5b83516001600160401b03808211156200025457600080fd5b62000262878388016200016f565b945060208601519150808211156200027957600080fd5b5062000288868287016200016f565b604086015190935090506001600160a01b0381168114620002a857600080fd5b809150509250925092565b600181811c90821680620002c857607f821691505b6020821081141562000303577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b610d4c80620003196000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610224578063a9059cbb14610237578063d7fc5b151461024a578063dd62ed3e1461025d57600080fd5b806370a08231146101cd5780638da5cb5b146101f657806395d89b41146102095780639dc29fac1461021157600080fd5b806323b872dd116100d357806323b872dd14610183578063313ce5671461019657806339509351146101a557806340c10f19146101b857600080fd5b806306fdde03146101055780630754617214610123578063095ea7b31461014e57806318160ddd14610171575b600080fd5b61010d610296565b60405161011a9190610b28565b60405180910390f35b600654610136906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61016161015c366004610b99565b610328565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610161610191366004610bc3565b61033e565b6040516012815260200161011a565b6101616101b3366004610b99565b6103ed565b6101cb6101c6366004610b99565b610429565b005b6101756101db366004610bff565b6001600160a01b031660009081526020819052604090205490565b600554610136906001600160a01b031681565b61010d610461565b6101cb61021f366004610b99565b610470565b610161610232366004610b99565b6104a4565b610161610245366004610b99565b61053d565b6101cb610258366004610bff565b61054a565b61017561026b366004610c21565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102a590610c54565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190610c54565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050505050905090565b600061033533848461060f565b50600192915050565b600061034b848484610734565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103d55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103e2853385840361060f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610335918590610424908690610ca5565b61060f565b6006546001600160a01b031633146104535760405162461bcd60e51b81526004016103cc90610cbd565b61045d8282610903565b5050565b6060600480546102a590610c54565b6006546001600160a01b0316331461049a5760405162461bcd60e51b81526004016103cc90610cbd565b61045d82826109e2565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105265760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103cc565b610533338585840361060f565b5060019392505050565b6000610335338484610734565b6005546001600160a01b031633146105ae5760405162461bcd60e51b815260206004820152602160248201527f6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b60648201526084016103cc565b600680546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f7d18367aacbd671e57a27b568d6e1afbcc4c28b30a1b898aacf1e3a4b7d19cd1910160405180910390a15050565b6001600160a01b0383166106715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103cc565b6001600160a01b0382166106d25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103cc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166107985760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103cc565b6001600160a01b0382166107fa5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103cc565b6001600160a01b038316600090815260208190526040902054818110156108725760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103cc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108a9908490610ca5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108f591815260200190565b60405180910390a350505050565b6001600160a01b0382166109595760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103cc565b806002600082825461096b9190610ca5565b90915550506001600160a01b03821660009081526020819052604081208054839290610998908490610ca5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610a425760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103cc565b6001600160a01b03821660009081526020819052604090205481811015610ab65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103cc565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ae5908490610cff565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610727565b600060208083528351808285015260005b81811015610b5557858101830151858201604001528201610b39565b81811115610b67576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b9457600080fd5b919050565b60008060408385031215610bac57600080fd5b610bb583610b7d565b946020939093013593505050565b600080600060608486031215610bd857600080fd5b610be184610b7d565b9250610bef60208501610b7d565b9150604084013590509250925092565b600060208284031215610c1157600080fd5b610c1a82610b7d565b9392505050565b60008060408385031215610c3457600080fd5b610c3d83610b7d565b9150610c4b60208401610b7d565b90509250929050565b600181811c90821680610c6857607f821691505b60208210811415610c8957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610cb857610cb8610c8f565b500190565b60208082526022908201527f6f6e6c79206d696e7465722063616e2063616c6c20746869732066756e63746960408201526137b760f11b606082015260800190565b600082821015610d1157610d11610c8f565b50039056fea26469706673582212206c56203f2a38e7f35d74c3435cd98e0bbfe769a2ce5195584c57470907148ae064736f6c63430008090033a264697066735822122060ba3c72acdb9b49b45e2559071a8ed3025e43439f883c54a9908b4c681a967b64736f6c63430008090033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c8063a3232bf31162000097578063f03c6132116200006e578063f03c61321462000211578063f2f2fff51462000228578063f46901ed1462000232578063f800ece9146200024957600080fd5b8063a3232bf314620001cf578063b4f69a2f14620001e6578063e30145e014620001fd57600080fd5b80632a5c792a11620000d85780632a5c792a146200016057806361c8f99d14620001795780639fd2650e14620001ae578063a2e74af614620001b857600080fd5b8063017e7e581462000102578063094b74151462000133578063257671f51462000147575b600080fd5b60055462000116906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60065462000116906001600160a01b031681565b6200015162000253565b6040519081526020016200012a565b6200016a620002a1565b6040516200012a919062000acb565b620001ac6200018a36600462000b37565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b005b6200011662000305565b620001ac620001c936600462000b37565b6200034c565b62000116620001e036600462000b55565b620003a4565b62000116620001f736600462000b96565b62000603565b60045462000116906001600160a01b031681565b620001166200022236600462000be4565b620006cd565b6200015160035481565b620001ac6200024336600462000b37565b62000783565b6200016a620007d2565b604051620002646020820162000aaf565b601f1982820381018352601f90910116604081905262000288919060200162000cd2565b6040516020818303038152906040528051906020012081565b60606002805480602002602001604051908101604052809291908181526020018280548015620002fb57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620002dc575b5050505050905090565b600080600160035462000319919062000d06565b90506002818154811062000331576200033162000d20565b6000918252602090912001546001600160a01b031692915050565b6006546001600160a01b03163314620003825760405162461bcd60e51b8152600401620003799062000d36565b60405180910390fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6004805460405163237dd6ed60e11b81526001600160a01b0385811693820193909352600092909116906346fbadda9060240160206040518083038186803b158015620003f057600080fd5b505afa15801562000405573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200042b919062000d7d565b15156001146200049d5760405162461bcd60e51b815260206004820152603660248201527f596f752067697665207468652077726f6e67206f72646572206f6620706f6c6960448201527531bcaa37b5b2b71030b7321039ba30b13632b1b7b4b760511b606482015260840162000379565b600060405180602001620004b19062000aaf565b601f1982820381018352601f9091011660405290506000620004d38662000834565b620004de8662000834565b604051602001620004f192919062000da1565b60405160208183030381529060405280519060200120905060006200051783836200084c565b6040516305e52ecf60e21b81526001600160a01b03898116600483015288811660248301526044820188905291925090821690631794bb3c90606401600060405180830381600087803b1580156200056e57600080fd5b505af115801562000583573d6000803e3d6000fd5b5050506001600160a01b038089166000908152602081815260408083208b85168452909152812080549285166001600160a01b0319938416811790915560018054808201825592527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909101805490921617905550925050509392505050565b6004805460405163237dd6ed60e11b81526001600160a01b0384811693820193909352600092839283929116906346fbadda9060240160206040518083038186803b1580156200065257600080fd5b505afa15801562000667573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200068d919062000d7d565b6200069a5783856200069d565b84845b6001600160a01b039182166000908152602081815260408083209385168352929052205416925050505b92915050565b60008082604051602001620006e3919062000cd2565b6040516020818303038152906040528051906020012090506000620007088462000866565b905060006200071882846200084c565b6002805460018101825560009182527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384161790556003805492935090620007758362000dd4565b909155509095945050505050565b6006546001600160a01b03163314620007b05760405162461bcd60e51b8152600401620003799062000d36565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b60606001805480602002602001604051908101604052809291908181526020018280548015620002fb576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620002dc575050505050905090565b6060620006c76001600160a01b0383166014620008ee565b6000818351602085016000f59050803b620006c757600080fd5b60606000604051806020016200087c9062000abd565b601f1982820381018352601f9091011660408190526004549192508291620008b791869182916001600160a01b039091169060200162000e20565b60408051601f1981840301815290829052620008d7929160200162000da1565b604051602081830303815290604052915050919050565b60606000620008ff83600262000e62565b6200090c90600262000e84565b67ffffffffffffffff81111562000927576200092762000bce565b6040519080825280601f01601f19166020018201604052801562000952576020820181803683370190505b509050600360fc1b8160008151811062000970576200097062000d20565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110620009a257620009a262000d20565b60200101906001600160f81b031916908160001a9053506000620009c884600262000e62565b620009d590600162000e84565b90505b600181111562000a57576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811062000a0d5762000a0d62000d20565b1a60f81b82828151811062000a265762000a2662000d20565b60200101906001600160f81b031916908160001a90535060049490941c9362000a4f8162000e9f565b9050620009d8565b50831562000aa85760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640162000379565b9392505050565b6121868062000eba83390190565b611065806200304083390190565b6020808252825182820181905260009190848201906040850190845b8181101562000b0e5783516001600160a01b03168352928401929184019160010162000ae7565b50909695505050505050565b80356001600160a01b038116811462000b3257600080fd5b919050565b60006020828403121562000b4a57600080fd5b62000aa88262000b1a565b60008060006060848603121562000b6b57600080fd5b62000b768462000b1a565b925062000b866020850162000b1a565b9150604084013590509250925092565b6000806040838503121562000baa57600080fd5b62000bb58362000b1a565b915062000bc56020840162000b1a565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121562000bf757600080fd5b813567ffffffffffffffff8082111562000c1057600080fd5b818401915084601f83011262000c2557600080fd5b81358181111562000c3a5762000c3a62000bce565b604051601f8201601f19908116603f0116810190838211818310171562000c655762000c6562000bce565b8160405282815287602084870101111562000c7f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b8381101562000cbc57818101518382015260200162000ca2565b8381111562000ccc576000848401525b50505050565b6000825162000ce681846020870162000c9f565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b60008282101562000d1b5762000d1b62000cf0565b500390565b634e487b7160e01b600052603260045260246000fd5b60208082526027908201527f4f6e6c7920666565546f5365747465722063616e2063616c6c207468697320666040820152663ab731ba34b7b760c91b606082015260800190565b60006020828403121562000d9057600080fd5b8151801515811462000aa857600080fd5b6000835162000db581846020880162000c9f565b83519083019062000dcb81836020880162000c9f565b01949350505050565b600060001982141562000deb5762000deb62000cf0565b5060010190565b6000815180845262000e0c81602086016020860162000c9f565b601f01601f19169290920160200192915050565b60608152600062000e35606083018662000df2565b828103602084015262000e49818662000df2565b91505060018060a01b0383166040830152949350505050565b600081600019048311821515161562000e7f5762000e7f62000cf0565b500290565b6000821982111562000e9a5762000e9a62000cf0565b500190565b60008162000eb15762000eb162000cf0565b50600019019056fe60806040526008805460ff60e01b19167c01000000000000000000000000000000000000000000000000000000001790553480156200003d57600080fd5b506040518060400160405280600f81526020017f4e61756768747920506f6f6c204c5000000000000000000000000000000000008152506040518060400160405280600381526020017f4e4c5000000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000c2929190620000f3565b508051620000d8906004906020840190620000f3565b5050600580546001600160a01b0319163317905550620001ef565b828054620001019062000199565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600181811c90821680620001ae57607f821691505b60208210811415620001e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b611f8780620001ff6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80636d9a640a116100c3578063ba9a7a561161007c578063ba9a7a5614610311578063c45a01551461031a578063d21220a71461032d578063dd62ed3e14610340578063f952f01a14610292578063fff6cae91461037957600080fd5b80636d9a640a1461027f57806370a082311461029257806389afcb44146102bb57806395d89b41146102e3578063a457c2d7146102eb578063a9059cbb146102fe57600080fd5b806323b872dd1161011557806323b872dd1461021a57806329dcb0cf1461022d578063313ce5671461023657806339509351146102455780636a5e2650146102585780636a6278421461026c57600080fd5b806306fdde031461015d5780630902f1ac1461017b578063095ea7b3146101a55780630dfe1681146101c85780631794bb3c146101f357806318160ddd14610208575b600080fd5b610165610381565b6040516101729190611ccb565b60405180910390f35b600854604080516001600160701b038084168252600160701b909304909216602083015201610172565b6101b86101b3366004611d1a565b610413565b6040519015158152602001610172565b6006546101db906001600160a01b031681565b6040516001600160a01b039091168152602001610172565b610206610201366004611d44565b610429565b005b6002545b604051908152602001610172565b6101b8610228366004611d44565b6104d5565b61020c60095481565b60405160128152602001610172565b6101b8610253366004611d1a565b610581565b6008546101b890600160e01b900460ff1681565b61020c61027a366004611d80565b6105bd565b61020661028d366004611d9b565b61084b565b61020c6102a0366004611d80565b6001600160a01b031660009081526020819052604090205490565b6102ce6102c9366004611d80565b610d4c565b60408051928352602083019190915201610172565b6101656110cd565b6101b86102f9366004611d1a565b6110dc565b6101b861030c366004611d1a565b611175565b61020c6103e881565b6005546101db906001600160a01b031681565b6007546101db906001600160a01b031681565b61020c61034e366004611dd0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610206611182565b60606003805461039090611e03565b80601f01602080910402602001604051908101604052809291908181526020018280546103bc90611e03565b80156104095780601f106103de57610100808354040283529160200191610409565b820191906000526020600020905b8154815290600101906020018083116103ec57829003601f168201915b5050505050905090565b60006104203384846112cf565b50600192915050565b6005546001600160a01b031633146104a05760405162461bcd60e51b815260206004820152602f60248201527f63616e206f6e6c7920626520696e697469616c697a656420627920746865206660448201526e1858dd1bdc9e4818dbdb9d1c9858dd608a1b60648201526084015b60405180910390fd5b600680546001600160a01b039485166001600160a01b0319918216179091556007805493909416921691909117909155600955565b60006104e28484846113f3565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105675760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610497565b61057485338584036112cf565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104209185906105b8908690611e54565b6112cf565b60008060006105e06008546001600160701b0380821692600160701b9092041690565b6006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561062c57600080fd5b505afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106649190611e6c565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156106ad57600080fd5b505afa1580156106c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e59190611e6c565b905060006106fc6001600160701b03861684611e85565b905060006107136001600160701b03861684611e85565b9050600061072060025490565b905080610759576103e861073c6107378486611e9c565b6115c3565b6107469190611e85565b9750610754306103e861173e565b6107a0565b61079d6001600160701b0388166107708386611e9c565b61077a9190611ed1565b6001600160701b03881661078e8486611e9c565b6107989190611ed1565b61174c565b97505b600088116107f05760405162461bcd60e51b815260206004820152601d60248201527f696e73756666696369656e74206c6971756964697479206d696e7465640000006044820152606401610497565b6107fa898961173e565b6108048585611762565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250505050505050919050565b60095442111561089d5760405162461bcd60e51b815260206004820152601b60248201527f43616e206e6f74207377617020616674657220646561646c696e6500000000006044820152606401610497565b600854600160e01b900460ff1615156001146108cb5760405162461bcd60e51b815260040161049790611ef3565b6008805460ff60e01b19169055821515806108e65750600082115b6109325760405162461bcd60e51b815260206004820152601b60248201527f4f757470757420616d6f756e74206e65656420746f206265203e3000000000006044820152606401610497565b6000806109536008546001600160701b0380821692600160701b9092041690565b6001600160701b031691506001600160701b03169150818510801561097757508084105b6109ba5760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b6044820152606401610497565b60065460075460009182916001600160a01b039182169190811690871682148015906109f85750806001600160a01b0316876001600160a01b031614155b610a315760405162461bcd60e51b815260206004820152600a602482015269494e56414c49445f544f60b01b6044820152606401610497565b8815610a4b57610a4b6001600160a01b038316888b611834565b8715610a6557610a656001600160a01b038216888a611834565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015610aa457600080fd5b505afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc9190611e6c565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a082319060240160206040518083038186803b158015610b1e57600080fd5b505afa158015610b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b569190611e6c565b9250505060008785610b689190611e85565b8311610b75576000610b89565b610b7f8886611e85565b610b899084611e85565b90506000610b978886611e85565b8311610ba4576000610bb8565b610bae8886611e85565b610bb89084611e85565b90506000821180610bc95750600081115b610c155760405162461bcd60e51b815260206004820152601960248201527f494e53554646494349454e545f494e5055545f414d4f554e54000000000000006044820152606401610497565b6000610c22836014611e9c565b610c2e866103e8611e9c565b610c389190611e85565b90506000610c47836014611e9c565b610c53866103e8611e9c565b610c5d9190611e85565b9050610c698789611e9c565b610c7590612710611e9c565b610c7f8284611e9c565b1015610ccd5760405162461bcd60e51b815260206004820181905260248201527f5468652072656d61696e696e6720782a79206973206c657373207468616e204b6044820152606401610497565b5050610cd98484611762565b60408051838152602081018390529081018a9052606081018990526001600160a01b0388169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506008805460ff60e01b1916600160e01b17905550505050505050565b6000806008601c9054906101000a900460ff1615156001151514610d825760405162461bcd60e51b815260040161049790611ef3565b6008805460ff60e01b191690556006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610dd357600080fd5b505afa158015610de7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0b9190611e6c565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610e5457600080fd5b505afa158015610e68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8c9190611e6c565b306000908152602081905260409020546002549192509080610eae8584611e9c565b610eb89190611ed1565b955080610ec58484611e9c565b610ecf9190611ed1565b9450600086118015610ee15750600085115b610f2d5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e74206c6971756964697479206275726e65640000006044820152606401610497565b610f37308361188b565b600654610f4e906001600160a01b03168888611834565b600754610f65906001600160a01b03168887611834565b6006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610fa857600080fd5b505afa158015610fbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe09190611e6c565b6007546040516370a0823160e01b81523060048201529195506001600160a01b0316906370a082319060240160206040518083038186803b15801561102457600080fd5b505afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190611e6c565b92506110688484611762565b60408051878152602081018790526001600160a01b0389169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a350506008805460ff60e01b1916600160e01b1790555091939092509050565b60606004805461039090611e03565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561115e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610497565b61116b33858584036112cf565b5060019392505050565b60006104203384846113f3565b600854600160e01b900460ff1615156001146111b05760405162461bcd60e51b815260040161049790611ef3565b6008805460ff60e01b191690556006546040516370a0823160e01b81523060048201526112ba916001600160a01b0316906370a082319060240160206040518083038186803b15801561120257600080fd5b505afa158015611216573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123a9190611e6c565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561127d57600080fd5b505afa158015611291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b59190611e6c565b611762565b6008805460ff60e01b1916600160e01b179055565b6001600160a01b0383166113315760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610497565b6001600160a01b0382166113925760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610497565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166114575760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610497565b6001600160a01b0382166114b95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610497565b6001600160a01b038316600090815260208190526040902054818110156115315760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610497565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611568908490611e54565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115b491815260200190565b60405180910390a35b50505050565b6000816115d257506000919050565b50600181600160801b81106115ec5760409190911b9060801c5b6801000000000000000081106116075760209190911b9060401c5b640100000000811061161e5760109190911b9060201c5b6201000081106116335760089190911b9060101c5b61010081106116475760049190911b9060081c5b6010811061165a5760029190911b9060041c5b6008811061166a57600182901b91505b600182848161167b5761167b611ebb565b048301901c9150600182848161169357611693611ebb565b048301901c915060018284816116ab576116ab611ebb565b048301901c915060018284816116c3576116c3611ebb565b048301901c915060018284816116db576116db611ebb565b048301901c915060018284816116f3576116f3611ebb565b048301901c9150600182848161170b5761170b611ebb565b048301901c9150600082848161172357611723611ebb565b049050808310156117345782611736565b805b949350505050565b6117488282611895565b5050565b600081831061175b578161057a565b5090919050565b6001600160701b038083118015906117835750806001600160701b03168211155b6117c25760405162461bcd60e51b815260206004820152601060248201526f55696e74313132204f564552464c4f5760801b6044820152606401610497565b600880546001600160701b03848116600160701b9081026001600160e01b0319909316878316179290921792839055604080518483168152929093041660208201527f32dc813d3f262a05478ad1165d5701040e411d9a6e1684c8c2da1c8e6f3b8022910160405180910390a1505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611886908490611974565b505050565b6117488282611a46565b6001600160a01b0382166118eb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610497565b80600260008282546118fd9190611e54565b90915550506001600160a01b0382166000908152602081905260408120805483929061192a908490611e54565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60006119c9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b949092919063ffffffff16565b80519091501561188657808060200190518101906119e79190611f13565b6118865760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610497565b6001600160a01b038216611aa65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610497565b6001600160a01b03821660009081526020819052604090205481811015611b1a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610497565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611b49908490611e85565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6060611736848460008585843b611bed5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610497565b600080866001600160a01b03168587604051611c099190611f35565b60006040518083038185875af1925050503d8060008114611c46576040519150601f19603f3d011682016040523d82523d6000602084013e611c4b565b606091505b5091509150611c5b828286611c66565b979650505050505050565b60608315611c7557508161057a565b825115611c855782518084602001fd5b8160405162461bcd60e51b81526004016104979190611ccb565b60005b83811015611cba578181015183820152602001611ca2565b838111156115bd5750506000910152565b6020815260008251806020840152611cea816040850160208701611c9f565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611d1557600080fd5b919050565b60008060408385031215611d2d57600080fd5b611d3683611cfe565b946020939093013593505050565b600080600060608486031215611d5957600080fd5b611d6284611cfe565b9250611d7060208501611cfe565b9150604084013590509250925092565b600060208284031215611d9257600080fd5b61057a82611cfe565b600080600060608486031215611db057600080fd5b8335925060208401359150611dc760408501611cfe565b90509250925092565b60008060408385031215611de357600080fd5b611dec83611cfe565b9150611dfa60208401611cfe565b90509250929050565b600181811c90821680611e1757607f821691505b60208210811415611e3857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611e6757611e67611e3e565b500190565b600060208284031215611e7e57600080fd5b5051919050565b600082821015611e9757611e97611e3e565b500390565b6000816000190483118215151615611eb657611eb6611e3e565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611eee57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600690820152651313d0d2d15160d21b604082015260600190565b600060208284031215611f2557600080fd5b8151801515811461057a57600080fd5b60008251611f47818460208701611c9f565b919091019291505056fea264697066735822122004c749ef2d6a6c632914b7ef014227a9038de97b64a9d30873854e9d7ef6b51b64736f6c6343000809003360806040523480156200001157600080fd5b506040516200106538038062001065833981016040819052620000349162000226565b8251839083906200004d9060039060208501906200009a565b508051620000639060049060208401906200009a565b5050600580546001600160a01b039093166001600160a01b0319938416811790915560068054909316179091555062000309915050565b828054620000a890620002b3565b90600052602060002090601f016020900481019282620000cc576000855562000117565b82601f10620000e757805160ff191683800117855562000117565b8280016001018555821562000117579182015b8281111562000117578251825591602001919060010190620000fa565b506200012592915062000129565b5090565b5b808211156200012557600081556001016200012a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126200018157600080fd5b81516001600160401b03808211156200019e576200019e62000140565b604051601f8301601f19908116603f01168101908282118183101715620001c957620001c962000140565b81604052838152602092508683858801011115620001e657600080fd5b600091505b838210156200020a5785820183015181830184015290820190620001eb565b838211156200021c5760008385830101525b9695505050505050565b6000806000606084860312156200023c57600080fd5b83516001600160401b03808211156200025457600080fd5b62000262878388016200016f565b945060208601519150808211156200027957600080fd5b5062000288868287016200016f565b604086015190935090506001600160a01b0381168114620002a857600080fd5b809150509250925092565b600181811c90821680620002c857607f821691505b6020821081141562000303577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b610d4c80620003196000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610224578063a9059cbb14610237578063d7fc5b151461024a578063dd62ed3e1461025d57600080fd5b806370a08231146101cd5780638da5cb5b146101f657806395d89b41146102095780639dc29fac1461021157600080fd5b806323b872dd116100d357806323b872dd14610183578063313ce5671461019657806339509351146101a557806340c10f19146101b857600080fd5b806306fdde03146101055780630754617214610123578063095ea7b31461014e57806318160ddd14610171575b600080fd5b61010d610296565b60405161011a9190610b28565b60405180910390f35b600654610136906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61016161015c366004610b99565b610328565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610161610191366004610bc3565b61033e565b6040516012815260200161011a565b6101616101b3366004610b99565b6103ed565b6101cb6101c6366004610b99565b610429565b005b6101756101db366004610bff565b6001600160a01b031660009081526020819052604090205490565b600554610136906001600160a01b031681565b61010d610461565b6101cb61021f366004610b99565b610470565b610161610232366004610b99565b6104a4565b610161610245366004610b99565b61053d565b6101cb610258366004610bff565b61054a565b61017561026b366004610c21565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102a590610c54565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190610c54565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050505050905090565b600061033533848461060f565b50600192915050565b600061034b848484610734565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103d55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103e2853385840361060f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610335918590610424908690610ca5565b61060f565b6006546001600160a01b031633146104535760405162461bcd60e51b81526004016103cc90610cbd565b61045d8282610903565b5050565b6060600480546102a590610c54565b6006546001600160a01b0316331461049a5760405162461bcd60e51b81526004016103cc90610cbd565b61045d82826109e2565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105265760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103cc565b610533338585840361060f565b5060019392505050565b6000610335338484610734565b6005546001600160a01b031633146105ae5760405162461bcd60e51b815260206004820152602160248201527f6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b60648201526084016103cc565b600680546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f7d18367aacbd671e57a27b568d6e1afbcc4c28b30a1b898aacf1e3a4b7d19cd1910160405180910390a15050565b6001600160a01b0383166106715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103cc565b6001600160a01b0382166106d25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103cc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166107985760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103cc565b6001600160a01b0382166107fa5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103cc565b6001600160a01b038316600090815260208190526040902054818110156108725760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103cc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108a9908490610ca5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108f591815260200190565b60405180910390a350505050565b6001600160a01b0382166109595760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103cc565b806002600082825461096b9190610ca5565b90915550506001600160a01b03821660009081526020819052604081208054839290610998908490610ca5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610a425760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103cc565b6001600160a01b03821660009081526020819052604090205481811015610ab65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103cc565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ae5908490610cff565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610727565b600060208083528351808285015260005b81811015610b5557858101830151858201604001528201610b39565b81811115610b67576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b9457600080fd5b919050565b60008060408385031215610bac57600080fd5b610bb583610b7d565b946020939093013593505050565b600080600060608486031215610bd857600080fd5b610be184610b7d565b9250610bef60208501610b7d565b9150604084013590509250925092565b600060208284031215610c1157600080fd5b610c1a82610b7d565b9392505050565b60008060408385031215610c3457600080fd5b610c3d83610b7d565b9150610c4b60208401610b7d565b90509250929050565b600181811c90821680610c6857607f821691505b60208210811415610c8957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610cb857610cb8610c8f565b500190565b60208082526022908201527f6f6e6c79206d696e7465722063616e2063616c6c20746869732066756e63746960408201526137b760f11b606082015260800190565b600082821015610d1157610d11610c8f565b50039056fea26469706673582212206c56203f2a38e7f35d74c3435cd98e0bbfe769a2ce5195584c57470907148ae064736f6c63430008090033a264697066735822122060ba3c72acdb9b49b45e2559071a8ed3025e43439f883c54a9908b4c681a967b64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:27",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:27",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:27",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:27",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:27"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:27",
                "type": ""
              }
            ],
            "src": "14:290:27"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8624:27",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:27",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:27",
                "type": ""
              }
            ],
            "src": "14:203:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "323:76:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "333:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "345:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "356:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "341:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "341:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "333:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "375:9:27"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "386:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "368:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "368:25:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "368:25:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "292:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "303:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "314:4:27",
                "type": ""
              }
            ],
            "src": "222:177:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "555:507:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "565:12:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "575:2:27",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "569:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "586:32:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "604:9:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "615:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "600:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:18:27"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "590:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "634:9:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "645:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "627:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "627:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "627:21:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "657:17:27",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "668:6:27"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "661:3:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "683:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "703:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "697:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "697:13:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "687:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "726:6:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "734:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "719:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "719:22:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "719:22:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "750:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "761:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "772:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "757:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "757:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "750:3:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "784:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "802:6:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "810:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "798:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "798:15:27"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "788:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "822:10:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "831:1:27",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "826:1:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "890:146:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "911:3:27"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "926:6:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "920:5:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "920:13:27"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "943:3:27",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "948:1:27",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "939:3:27"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "939:11:27"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "952:1:27",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "935:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "935:19:27"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "916:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "916:39:27"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "904:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "904:52:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "904:52:27"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "969:19:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "980:3:27"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "985:2:27"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "976:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "976:12:27"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "969:3:27"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1001:25:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1015:6:27"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1023:2:27"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1011:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1011:15:27"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1001:6:27"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "852:1:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "855:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "849:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "849:13:27"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "863:18:27",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "865:14:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "874:1:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "877:1:27",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "870:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "870:9:27"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "865:1:27"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "845:3:27",
                    "statements": []
                  },
                  "src": "841:195:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1045:11:27",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1053:3:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1045:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "524:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "535:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "546:4:27",
                "type": ""
              }
            ],
            "src": "404:658:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1116:124:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1126:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1148:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1135:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1135:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1126:5:27"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1218:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1227:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1230:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1220:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1220:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1220:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1177:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1188:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1203:3:27",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1208:1:27",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1199:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1199:11:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1212:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1195:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1195:19:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1184:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1184:31:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1174:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1174:42:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1167:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1167:50:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1164:70:27"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1095:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1106:5:27",
                "type": ""
              }
            ],
            "src": "1067:173:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1315:116:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1361:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1370:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1373:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1363:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1363:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1363:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1336:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1345:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1332:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1332:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1357:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1328:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1328:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1325:52:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1386:39:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1415:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1396:18:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1396:29:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1386:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1281:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1292:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1304:6:27",
                "type": ""
              }
            ],
            "src": "1245:186:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1540:224:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1586:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1595:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1598:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1588:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1588:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1588:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1561:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1570:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1557:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1557:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1582:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1553:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1553:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1550:52:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1611:39:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1640:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1621:18:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1621:29:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1611:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1659:48:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1692:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1703:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1688:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1688:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1669:18:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1669:38:27"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1659:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1716:42:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1743:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1754:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1739:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1739:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1726:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1726:32:27"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1716:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1490:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1501:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1513:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1521:6:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1529:6:27",
                "type": ""
              }
            ],
            "src": "1436:328:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1856:173:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1902:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1911:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1914:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1904:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1904:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1904:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1877:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1886:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1873:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1873:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1898:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1869:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1869:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1866:52:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1927:39:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1956:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1937:18:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1937:29:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1927:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1975:48:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2008:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2019:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2004:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2004:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1985:18:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1985:38:27"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1975:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1814:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1825:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1837:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1845:6:27",
                "type": ""
              }
            ],
            "src": "1769:260:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2066:95:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2083:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2090:3:27",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2095:10:27",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2086:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2086:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2076:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2076:31:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2076:31:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2123:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2126:4:27",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2116:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2116:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2116:15:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2147:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2150:4:27",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2140:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2140:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2140:15:27"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2034:127:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2246:842:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2292:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2301:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2304:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2294:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2294:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2294:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2267:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2276:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2263:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2263:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2288:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2259:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2259:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2256:52:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2317:37:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2344:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2331:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2331:23:27"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2321:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2363:28:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2373:18:27",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2367:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2418:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2427:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2430:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2420:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2420:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2420:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2406:6:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2414:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2403:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2403:14:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2400:34:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2443:32:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2457:9:27"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2468:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2453:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2453:22:27"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2447:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2523:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2532:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2535:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2525:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2525:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2525:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2502:2:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2506:4:27",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2498:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2498:13:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2513:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2494:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2494:27:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2487:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2487:35:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2484:55:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2548:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2571:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2558:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2558:16:27"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2552:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2597:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2599:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2599:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2599:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2589:2:27"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2593:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2586:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2586:10:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2583:36:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2628:17:27",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2642:2:27",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2638:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2638:7:27"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2632:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2654:23:27",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2674:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2668:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2668:9:27"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2658:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2686:71:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2708:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "2732:2:27"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2736:4:27",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2728:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2728:13:27"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "2743:2:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2724:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2724:22:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2748:2:27",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2720:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2720:31:27"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2753:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2716:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2716:40:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2704:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2704:53:27"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2690:10:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2816:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2818:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2818:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2818:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2775:10:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2787:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2772:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2772:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2795:10:27"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2807:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2792:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2792:22:27"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2769:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2769:46:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2766:72:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2854:2:27",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2858:10:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2847:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2847:22:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2847:22:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2885:6:27"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2893:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2878:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2878:18:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2878:18:27"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2942:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2951:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2954:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2944:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2944:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2944:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2919:2:27"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2923:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2915:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2915:11:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2928:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2911:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2911:20:27"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2933:7:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2908:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2908:33:27"
                  },
                  "nodeType": "YulIf",
                  "src": "2905:53:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2984:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2992:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2980:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2980:15:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3001:2:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3005:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2997:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2997:11:27"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3010:2:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2967:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2967:46:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2967:46:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3037:6:27"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3045:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3033:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3033:15:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3050:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3029:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3029:24:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3055:1:27",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3022:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3022:35:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3022:35:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3066:16:27",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3076:6:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3066:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2212:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2223:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2235:6:27",
                "type": ""
              }
            ],
            "src": "2166:922:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3194:76:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3204:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3216:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3227:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3212:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3212:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3204:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3246:9:27"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3257:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3239:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3239:25:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3239:25:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3163:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3174:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3185:4:27",
                "type": ""
              }
            ],
            "src": "3093:177:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3328:205:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3338:10:27",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3347:1:27",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3342:1:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3407:63:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3432:3:27"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3437:1:27"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3428:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3428:11:27"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3451:3:27"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3456:1:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3447:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3447:11:27"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3441:5:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3441:18:27"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3421:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3421:39:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3421:39:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3368:1:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3371:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3365:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3365:13:27"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3379:19:27",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3381:15:27",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3390:1:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3393:2:27",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3386:3:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3386:10:27"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3381:1:27"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3361:3:27",
                    "statements": []
                  },
                  "src": "3357:113:27"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3496:31:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3509:3:27"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3514:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3505:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3505:16:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3523:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3498:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3498:27:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3498:27:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3485:1:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3488:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3482:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3482:13:27"
                  },
                  "nodeType": "YulIf",
                  "src": "3479:48:27"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3306:3:27",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3311:3:27",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3316:6:27",
                "type": ""
              }
            ],
            "src": "3275:258:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3675:137:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3685:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3705:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3699:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3699:13:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3689:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3747:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3755:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3743:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3743:17:27"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3762:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3767:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3721:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3721:53:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3721:53:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3783:23:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3794:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3799:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3790:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3790:16:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3783:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3651:3:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3656:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3667:3:27",
                "type": ""
              }
            ],
            "src": "3538:274:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3849:95:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3866:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3873:3:27",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3878:10:27",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3869:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3869:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3859:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3859:31:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3859:31:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3906:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3909:4:27",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3899:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3899:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3899:15:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3930:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3933:4:27",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3923:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3923:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3923:15:27"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3817:127:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3998:76:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4020:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4022:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4022:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4022:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4014:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4017:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4011:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4011:8:27"
                  },
                  "nodeType": "YulIf",
                  "src": "4008:34:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4051:17:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4063:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4066:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4059:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4059:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4051:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3980:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3983:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3989:4:27",
                "type": ""
              }
            ],
            "src": "3949:125:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4111:95:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4128:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4135:3:27",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4140:10:27",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4131:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4131:20:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4121:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4121:31:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4121:31:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4168:1:27",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4171:4:27",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4161:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4161:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4161:15:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4192:1:27",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4195:4:27",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4185:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4185:15:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4185:15:27"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "4079:127:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4385:229:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4402:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4413:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4395:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4395:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4395:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4436:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4447:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4432:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4432:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4452:2:27",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4425:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4425:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4425:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4475:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4486:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4471:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4471:18:27"
                      },
                      {
                        "hexValue": "4f6e6c7920666565546f5365747465722063616e2063616c6c20746869732066",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4491:34:27",
                        "type": "",
                        "value": "Only feeToSetter can call this f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4464:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4464:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4464:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4546:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4557:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4542:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4542:18:27"
                      },
                      {
                        "hexValue": "756e6374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4562:9:27",
                        "type": "",
                        "value": "unction"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4535:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4535:37:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4535:37:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4581:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4593:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4604:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4589:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4589:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4581:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4362:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4376:4:27",
                "type": ""
              }
            ],
            "src": "4211:403:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4697:199:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4743:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4752:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4755:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4745:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4745:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4745:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4718:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4727:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4714:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4714:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4739:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4710:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4710:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "4707:52:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4768:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4787:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4781:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4781:16:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4772:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4850:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4859:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4862:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4852:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4852:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4852:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4819:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4840:5:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4833:6:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4833:13:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4826:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4826:21:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4816:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4816:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4809:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4809:40:27"
                  },
                  "nodeType": "YulIf",
                  "src": "4806:60:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4875:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4885:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4875:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4663:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4674:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4686:6:27",
                "type": ""
              }
            ],
            "src": "4619:277:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5075:244:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5092:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5103:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5085:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5085:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5085:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5126:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5137:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5122:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5122:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5142:2:27",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5115:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5115:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5115:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5165:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5176:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5161:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5161:18:27"
                      },
                      {
                        "hexValue": "596f752067697665207468652077726f6e67206f72646572206f6620706f6c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5181:34:27",
                        "type": "",
                        "value": "You give the wrong order of poli"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5154:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5154:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5154:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5236:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5247:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5232:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5232:18:27"
                      },
                      {
                        "hexValue": "6379546f6b656e20616e6420737461626c65636f696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5252:24:27",
                        "type": "",
                        "value": "cyToken and stablecoin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5225:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5225:52:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5225:52:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5286:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5298:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5309:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5294:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5294:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5286:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5052:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5066:4:27",
                "type": ""
              }
            ],
            "src": "4901:418:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5511:283:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5521:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5541:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5535:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5535:13:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5525:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5583:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5591:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5579:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5579:17:27"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5598:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5603:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5557:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5557:53:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5557:53:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5619:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5636:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5641:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5632:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5632:16:27"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "5623:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5657:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5679:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5673:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5673:13:27"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "5661:8:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5721:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5729:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5717:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5717:17:27"
                      },
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "5736:5:27"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "5743:8:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5695:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5695:57:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5695:57:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5761:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "5772:5:27"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "5779:8:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5768:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5768:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5761:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5479:3:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5484:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5492:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5503:3:27",
                "type": ""
              }
            ],
            "src": "5324:470:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5956:218:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5966:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5978:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5989:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5974:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5974:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5966:4:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6001:29:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6019:3:27",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6024:1:27",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6015:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6015:11:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6028:1:27",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6011:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6011:19:27"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6005:2:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6046:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6061:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6069:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6057:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6057:15:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6039:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6039:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6039:34:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6093:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6104:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6089:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6089:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6113:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6121:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6109:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6109:15:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6082:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6082:43:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6082:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6145:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6156:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6141:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6141:18:27"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6161:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6134:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6134:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6134:34:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5909:9:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5920:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5928:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5936:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5947:4:27",
                "type": ""
              }
            ],
            "src": "5799:375:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6318:137:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6328:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6348:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6342:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6342:13:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6332:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6390:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6398:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6386:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6386:17:27"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6405:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6410:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6364:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6364:53:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6364:53:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6426:23:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6437:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6442:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6433:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6433:16:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6426:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6294:3:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6299:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6310:3:27",
                "type": ""
              }
            ],
            "src": "6179:276:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6507:88:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6538:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6540:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6540:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6540:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6523:5:27"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6534:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6530:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6530:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6520:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6520:17:27"
                  },
                  "nodeType": "YulIf",
                  "src": "6517:43:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6569:20:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6580:5:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6587:1:27",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6576:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6576:13:27"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6569:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6489:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6499:3:27",
                "type": ""
              }
            ],
            "src": "6460:135:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6650:208:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6660:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6680:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6674:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6674:12:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6664:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6702:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6707:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6695:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6695:19:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6695:19:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6749:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6756:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6745:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6745:16:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6767:3:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6772:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6763:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6763:14:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6779:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6723:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6723:63:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6723:63:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6795:57:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6810:3:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6823:6:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6831:2:27",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6819:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6819:15:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6840:2:27",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6836:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6836:7:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6815:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6815:29:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6806:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6806:39:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6847:4:27",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6802:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6802:50:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6795:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6627:5:27",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6634:3:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6642:3:27",
                "type": ""
              }
            ],
            "src": "6600:258:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7060:283:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7077:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7088:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7070:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7070:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7070:21:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7100:59:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7132:6:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7144:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7155:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7140:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7140:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "7114:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7114:45:27"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "7104:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7179:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7190:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7175:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7175:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "7199:6:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7207:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7195:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7195:22:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7168:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7168:50:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7168:50:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7227:41:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7253:6:27"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "7261:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "7235:17:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7235:33:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7227:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7288:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7299:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7284:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7284:18:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "7308:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7324:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7329:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7320:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7320:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7333:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7316:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7316:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7304:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7304:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7277:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7277:60:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7277:60:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7013:9:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7024:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7032:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7040:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7051:4:27",
                "type": ""
              }
            ],
            "src": "6863:480:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7531:283:27",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7541:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7561:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7555:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7555:13:27"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7545:6:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7603:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7611:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7599:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7599:17:27"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7618:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7623:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7577:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7577:53:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7577:53:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7639:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7656:3:27"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7661:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7652:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7652:16:27"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "7643:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7677:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7699:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7693:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7693:13:27"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "7681:8:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7741:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7749:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7737:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7737:17:27"
                      },
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "7756:5:27"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "7763:8:27"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7715:21:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7715:57:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7715:57:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7781:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "7792:5:27"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "7799:8:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7788:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7788:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7781:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7499:3:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7504:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7512:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7523:3:27",
                "type": ""
              }
            ],
            "src": "7348:466:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7871:116:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7930:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7932:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7932:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7932:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7902:1:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7895:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7895:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7888:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7888:17:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7910:1:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7921:1:27",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7917:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7917:6:27"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7925:1:27"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7913:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7913:14:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7907:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7907:21:27"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7884:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7884:45:27"
                  },
                  "nodeType": "YulIf",
                  "src": "7881:71:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7961:20:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7976:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7979:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7972:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7972:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7961:7:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7850:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7853:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7859:7:27",
                "type": ""
              }
            ],
            "src": "7819:168:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8040:80:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8067:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8069:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8069:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8069:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8056:1:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8063:1:27"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8059:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8059:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8053:2:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8053:13:27"
                  },
                  "nodeType": "YulIf",
                  "src": "8050:39:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8098:16:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8109:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8112:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8105:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8105:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8098:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8023:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8026:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8032:3:27",
                "type": ""
              }
            ],
            "src": "7992:128:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8172:89:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8199:22:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8201:16:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8201:18:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8201:18:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8192:5:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8185:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8185:13:27"
                  },
                  "nodeType": "YulIf",
                  "src": "8182:39:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8230:25:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8241:5:27"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8252:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8248:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8248:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8237:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8237:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8230:3:27"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8154:5:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8164:3:27",
                "type": ""
              }
            ],
            "src": "8125:136:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8440:182:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8457:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8468:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8450:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8450:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8450:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8491:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8502:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8487:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8487:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8507:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8480:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8480:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8480:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8530:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8541:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8526:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8526:18:27"
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8546:34:27",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8519:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8519:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8519:62:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8590:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8602:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8613:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8598:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8598:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8590:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8417:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8431:4:27",
                "type": ""
              }
            ],
            "src": "8266:356:27"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Only feeToSetter can call this f\")\n        mstore(add(headStart, 96), \"unction\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"You give the wrong order of poli\")\n        mstore(add(headStart, 96), \"cyToken and stablecoin\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "634:7461:11:-:0;;;1348:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1392:11;:26;;-1:-1:-1;;;;;;1392:26:11;-1:-1:-1;;;;;1392:26:11;;;;;;;;;;634:7461;;14:290:27;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:27;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:27:o;:::-;634:7461:11;;;;;;",
  "deployedSourceMap": "634:7461:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1117:20;;;;;-1:-1:-1;;;;;1117:20:11;;;;;;-1:-1:-1;;;;;178:32:27;;;160:51;;148:2;133:18;1117:20:11;;;;;;;;1143:26;;;;;-1:-1:-1;;;;;1143:26:11;;;1233:108;;;:::i;:::-;;;368:25:27;;;356:2;341:18;1233:108:11;222:177:27;2735:98:11;;;:::i;:::-;;;;;;;:::i;4204:101::-;;;;;;:::i;:::-;4274:10;:24;;-1:-1:-1;;;;;;4274:24:11;-1:-1:-1;;;;;4274:24:11;;;;;;;;;;4204:101;;;2364:154;;;:::i;4615:114::-;;;;;;:::i;:::-;;:::i;5330:911::-;;;;;;:::i;:::-;;:::i;3199:486::-;;;;;;:::i;:::-;;:::i;1029:25::-;;;;;-1:-1:-1;;;;;1029:25:11;;;6431:420;;;;;;:::i;:::-;;:::i;971:22::-;;;;;;4408:90;;;;;;:::i;:::-;;:::i;2578:96::-;;;:::i;1233:108::-;1309:30;;;;;;;:::i;:::-;-1:-1:-1;;1309:30:11;;;;;;;;;;;;;;;;1292:48;;1309:30;;1292:48;;:::i;:::-;;;;;;;;;;;;;1282:59;;;;;;1233:108;:::o;2735:98::-;2782:16;2817:9;2810:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2810:16:11;;;;;;;;;;;;;;;;;;;;;;;2735:98;:::o;2364:154::-;2418:7;2437:20;2470:1;2460:7;;:11;;;;:::i;:::-;2437:34;;2488:9;2498:12;2488:23;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2488:23:11;;2364:154;-1:-1:-1;;2364:154:11:o;4615:114::-;1873:11;;-1:-1:-1;;;;;1873:11:11;1859:10;:25;1838:111;;;;-1:-1:-1;;;1838:111:11;;;;;;;:::i;:::-;;;;;;;;;4696:11:::1;:26:::0;;-1:-1:-1;;;;;;4696:26:11::1;-1:-1:-1::0;;;;;4696:26:11;;;::::1;::::0;;;::::1;::::0;;4615:114::o;5330:911::-;5517:10;;;5505:56;;-1:-1:-1;;;5505:56:11;;-1:-1:-1;;;;;178:32:27;;;5505:56:11;;;160:51:27;;;;5465:7:11;;5517:10;;;;5505:43;;133:18:27;;5505:56:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;5565:4;5505:64;5484:165;;;;-1:-1:-1;;;5484:165:11;;5103:2:27;5484:165:11;;;5085:21:27;5142:2;5122:18;;;5115:30;5181:34;5161:18;;;5154:62;-1:-1:-1;;;5232:18:27;;;5225:52;5294:19;;5484:165:11;4901:418:27;5484:165:11;5660:21;5684:30;;;;;;;;:::i;:::-;-1:-1:-1;;5684:30:11;;;;;;;;;;;;;;;-1:-1:-1;5725:12:11;5797:36;5813:19;5797:15;:36::i;:::-;5851:28;5867:11;5851:15;:28::i;:::-;5763:130;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5740:163;;;;;;5725:178;;5914:20;5937:23;5945:8;5955:4;5937:7;:23::i;:::-;5971:128;;-1:-1:-1;;;5971:128:11;;-1:-1:-1;;;;;6057:15:27;;;5971:128:11;;;6039:34:27;6109:15;;;6089:18;;;6082:43;6141:18;;;6134:34;;;5914:46:11;;-1:-1:-1;5971:37:11;;;;;;5974:18:27;;5971:128:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;6110:28:11;;;:7;:28;;;;;;;;;;;:41;;;;;;;;;;:56;;;;;-1:-1:-1;;;;;;6110:56:11;;;;;;;;;6177:27;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6154:12:11;-1:-1:-1;;;5330:911:11;;;;;:::o;3199:486::-;3437:10;;;3425:72;;-1:-1:-1;;;3425:72:11;;-1:-1:-1;;;;;178:32:27;;;3425:72:11;;;160:51:27;;;;3316:7:11;;;;;;3437:10;;;3425:56;;133:18:27;;3425:72:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:166;;3560:14;3576;3425:166;;;3513:14;3529;3425:166;-1:-1:-1;;;;;3625:15:11;;;3602:20;3625:15;;;;;;;;;;;:23;;;;;;;;;;;;-1:-1:-1;;;3199:486:11;;;;;:::o;6431:420::-;6522:7;6545:12;6587:16;6570:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;6560:45;;;;;;6545:60;;6616:21;6640:40;6663:16;6640:22;:40::i;:::-;6616:64;;6691:26;6720:23;6728:8;6738:4;6720:7;:23::i;:::-;6754:9;:34;;;;;;;-1:-1:-1;6754:34:11;;;;;;;-1:-1:-1;;;;;;6754:34:11;-1:-1:-1;;;;;6754:34:11;;;;;6799:7;:9;;6754:34;;-1:-1:-1;6799:7:11;:9;;;:::i;:::-;;;;-1:-1:-1;6826:18:11;;6431:420;-1:-1:-1;;;;;6431:420:11:o;4408:90::-;1873:11;;-1:-1:-1;;;;;1873:11:11;1859:10;:25;1838:111;;;;-1:-1:-1;;;1838:111:11;;;;;;;:::i;:::-;4477:5:::1;:14:::0;;-1:-1:-1;;;;;;4477:14:11::1;-1:-1:-1::0;;;;;4477:14:11;;;::::1;::::0;;;::::1;::::0;;4408:90::o;2578:96::-;2624:16;2659:8;2652:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2652:15:11;;;;;;;;;;;;;;;;;;;;;;2578:96;:::o;7341:171::-;7428:13;7464:41;-1:-1:-1;;;;;7465:23:11;;7502:2;7464:37;:41::i;6917:291::-;7001:12;7101:4;7094;7088:11;7081:4;7075;7071:15;7068:1;7060:46;7052:54;;7141:4;7129:17;7119:73;;7176:1;7173;7166:12;7642:451;7747:12;7775:21;7799:32;;;;;;;;:::i;:::-;-1:-1:-1;;7799:32:11;;;;;;;;;;;;;;;;8061:10;;7799:32;;-1:-1:-1;7799:32:11;;8026:46;;8037:10;;;;-1:-1:-1;;;;;8061:10:11;;;;7799:32;8026:46;;:::i;:::-;;;;-1:-1:-1;;8026:46:11;;;;;;;;;;7966:120;;;8026:46;7966:120;;:::i;:::-;;;;;;;;;;;;;7947:139;;;7642:451;;;:::o;1535:441:7:-;1610:13;1635:19;1667:10;1671:6;1667:1;:10;:::i;:::-;:14;;1680:1;1667:14;:::i;:::-;1657:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1657:25:7;;1635:47;;-1:-1:-1;;;1692:6:7;1699:1;1692:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1692:15:7;;;;;;;;;-1:-1:-1;;;1717:6:7;1724:1;1717:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1717:15:7;;;;;;;;-1:-1:-1;1747:9:7;1759:10;1763:6;1759:1;:10;:::i;:::-;:14;;1772:1;1759:14;:::i;:::-;1747:26;;1742:132;1779:1;1775;:5;1742:132;;;-1:-1:-1;;;1826:5:7;1834:3;1826:11;1813:25;;;;;;;:::i;:::-;;;;1801:6;1808:1;1801:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1801:37:7;;;;;;;;-1:-1:-1;1862:1:7;1852:11;;;;;1782:3;;;:::i;:::-;;;1742:132;;;-1:-1:-1;1891:10:7;;1883:55;;;;-1:-1:-1;;;1883:55:7;;8468:2:27;1883:55:7;;;8450:21:27;;;8487:18;;;8480:30;8546:34;8526:18;;;8519:62;8598:18;;1883:55:7;8266:356:27;1883:55:7;1962:6;1535:441;-1:-1:-1;;;1535:441:7:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;404:658:27:-;575:2;627:21;;;697:13;;600:18;;;719:22;;;546:4;;575:2;798:15;;;;772:2;757:18;;;546:4;841:195;855:6;852:1;849:13;841:195;;;920:13;;-1:-1:-1;;;;;916:39:27;904:52;;1011:15;;;;976:12;;;;952:1;870:9;841:195;;;-1:-1:-1;1053:3:27;;404:658;-1:-1:-1;;;;;;404:658:27:o;1067:173::-;1135:20;;-1:-1:-1;;;;;1184:31:27;;1174:42;;1164:70;;1230:1;1227;1220:12;1164:70;1067:173;;;:::o;1245:186::-;1304:6;1357:2;1345:9;1336:7;1332:23;1328:32;1325:52;;;1373:1;1370;1363:12;1325:52;1396:29;1415:9;1396:29;:::i;1436:328::-;1513:6;1521;1529;1582:2;1570:9;1561:7;1557:23;1553:32;1550:52;;;1598:1;1595;1588:12;1550:52;1621:29;1640:9;1621:29;:::i;:::-;1611:39;;1669:38;1703:2;1692:9;1688:18;1669:38;:::i;:::-;1659:48;;1754:2;1743:9;1739:18;1726:32;1716:42;;1436:328;;;;;:::o;1769:260::-;1837:6;1845;1898:2;1886:9;1877:7;1873:23;1869:32;1866:52;;;1914:1;1911;1904:12;1866:52;1937:29;1956:9;1937:29;:::i;:::-;1927:39;;1985:38;2019:2;2008:9;2004:18;1985:38;:::i;:::-;1975:48;;1769:260;;;;;:::o;2034:127::-;2095:10;2090:3;2086:20;2083:1;2076:31;2126:4;2123:1;2116:15;2150:4;2147:1;2140:15;2166:922;2235:6;2288:2;2276:9;2267:7;2263:23;2259:32;2256:52;;;2304:1;2301;2294:12;2256:52;2344:9;2331:23;2373:18;2414:2;2406:6;2403:14;2400:34;;;2430:1;2427;2420:12;2400:34;2468:6;2457:9;2453:22;2443:32;;2513:7;2506:4;2502:2;2498:13;2494:27;2484:55;;2535:1;2532;2525:12;2484:55;2571:2;2558:16;2593:2;2589;2586:10;2583:36;;;2599:18;;:::i;:::-;2674:2;2668:9;2642:2;2728:13;;-1:-1:-1;;2724:22:27;;;2748:2;2720:31;2716:40;2704:53;;;2772:18;;;2792:22;;;2769:46;2766:72;;;2818:18;;:::i;:::-;2858:10;2854:2;2847:22;2893:2;2885:6;2878:18;2933:7;2928:2;2923;2919;2915:11;2911:20;2908:33;2905:53;;;2954:1;2951;2944:12;2905:53;3010:2;3005;3001;2997:11;2992:2;2984:6;2980:15;2967:46;3055:1;3033:15;;;3050:2;3029:24;3022:35;;;;-1:-1:-1;3037:6:27;2166:922;-1:-1:-1;;;;;2166:922:27:o;3275:258::-;3347:1;3357:113;3371:6;3368:1;3365:13;3357:113;;;3447:11;;;3441:18;3428:11;;;3421:39;3393:2;3386:10;3357:113;;;3488:6;3485:1;3482:13;3479:48;;;3523:1;3514:6;3509:3;3505:16;3498:27;3479:48;;3275:258;;;:::o;3538:274::-;3667:3;3705:6;3699:13;3721:53;3767:6;3762:3;3755:4;3747:6;3743:17;3721:53;:::i;:::-;3790:16;;;;;3538:274;-1:-1:-1;;3538:274:27:o;3817:127::-;3878:10;3873:3;3869:20;3866:1;3859:31;3909:4;3906:1;3899:15;3933:4;3930:1;3923:15;3949:125;3989:4;4017:1;4014;4011:8;4008:34;;;4022:18;;:::i;:::-;-1:-1:-1;4059:9:27;;3949:125::o;4079:127::-;4140:10;4135:3;4131:20;4128:1;4121:31;4171:4;4168:1;4161:15;4195:4;4192:1;4185:15;4211:403;4413:2;4395:21;;;4452:2;4432:18;;;4425:30;4491:34;4486:2;4471:18;;4464:62;-1:-1:-1;;;4557:2:27;4542:18;;4535:37;4604:3;4589:19;;4211:403::o;4619:277::-;4686:6;4739:2;4727:9;4718:7;4714:23;4710:32;4707:52;;;4755:1;4752;4745:12;4707:52;4787:9;4781:16;4840:5;4833:13;4826:21;4819:5;4816:32;4806:60;;4862:1;4859;4852:12;5324:470;5503:3;5541:6;5535:13;5557:53;5603:6;5598:3;5591:4;5583:6;5579:17;5557:53;:::i;:::-;5673:13;;5632:16;;;;5695:57;5673:13;5632:16;5729:4;5717:17;;5695:57;:::i;:::-;5768:20;;5324:470;-1:-1:-1;;;;5324:470:27:o;6460:135::-;6499:3;-1:-1:-1;;6520:17:27;;6517:43;;;6540:18;;:::i;:::-;-1:-1:-1;6587:1:27;6576:13;;6460:135::o;6600:258::-;6642:3;6680:5;6674:12;6707:6;6702:3;6695:19;6723:63;6779:6;6772:4;6767:3;6763:14;6756:4;6749:5;6745:16;6723:63;:::i;:::-;6840:2;6819:15;-1:-1:-1;;6815:29:27;6806:39;;;;6847:4;6802:50;;6600:258;-1:-1:-1;;6600:258:27:o;6863:480::-;7088:2;7077:9;7070:21;7051:4;7114:45;7155:2;7144:9;7140:18;7132:6;7114:45;:::i;:::-;7207:9;7199:6;7195:22;7190:2;7179:9;7175:18;7168:50;7235:33;7261:6;7253;7235:33;:::i;:::-;7227:41;;;7333:1;7329;7324:3;7320:11;7316:19;7308:6;7304:32;7299:2;7288:9;7284:18;7277:60;6863:480;;;;;;:::o;7819:168::-;7859:7;7925:1;7921;7917:6;7913:14;7910:1;7907:21;7902:1;7895:9;7888:17;7884:45;7881:71;;;7932:18;;:::i;:::-;-1:-1:-1;7972:9:27;;7819:168::o;7992:128::-;8032:3;8063:1;8059:6;8056:1;8053:13;8050:39;;;8069:18;;:::i;:::-;-1:-1:-1;8105:9:27;;7992:128::o;8125:136::-;8164:3;8192:5;8182:39;;8201:18;;:::i;:::-;-1:-1:-1;;;8237:18:27;;8125:136::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\nimport \"./NPPolicyToken.sol\";\nimport \"./NaughtyPair.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./interfaces/INaughtyPair.sol\";\nimport \"./interfaces/INaughtyFactory.sol\";\nimport \"./interfaces/IPolicyCore.sol\";\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/**\n * @title Naughty Factory\n * @dev Factory contract to deploy new pools periodically\n *      Each pool(product) will have a unique naughtyId\n *      Each pool will have its pool token\n *      PolicyToken - Stablecoin\n *      Token 0 may change but Token 1 is always stablecoin.\n */\n\ncontract NaughtyFactory is INaughtyFactory {\n    using Strings for uint256;\n\n    // PolicyToken Address => StableCoin Address => Pool Address\n    mapping(address => mapping(address => address)) getPair;\n\n    // Store all the pairs' addresses\n    address[] allPairs;\n\n    // Store all policy token addresses\n    address[] allTokens;\n\n    uint256 public _nextId;\n\n    // Address of policyCore\n    address public policyCore;\n\n    // Used for the management fee (currently not open)\n    address public feeTo;\n    address public feeToSetter;\n\n    // INIT_CODE_HASH, we do not use it, but put it here\n    bytes32 public constant INIT_CODE_HASH =\n        keccak256(abi.encodePacked(type(NaughtyPair).creationCode));\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    // ---------------------------------------------------------------------------------------- //\n    // *************************************** Modifiers ************************************** //\n    // ---------------------------------------------------------------------------------------- //\n\n    /**\n     * @notice Only feeToSetter can call some functions\n     */\n    modifier onlyFeeToSetter() {\n        require(\n            msg.sender == feeToSetter,\n            \"Only feeToSetter can call this function\"\n        );\n        _;\n    }\n\n    // ---------------------------------------------------------------------------------------- //\n    // ************************************ View Functions ************************************ //\n    // ---------------------------------------------------------------------------------------- //\n\n    /**\n     * @notice Next token to be deployed\n     * @return Latest token address\n     */\n    function getLatestTokenAddress() public view returns (address) {\n        uint256 currentToken = _nextId - 1;\n        return allTokens[currentToken];\n    }\n\n    /**\n     * @notice Get all pair addresses\n     */\n    function getAllPairs() external view returns (address[] memory) {\n        return allPairs;\n    }\n\n    /**\n     * @notice Get all token addresses\n     */\n    function getAllTokens() external view returns (address[] memory) {\n        return allTokens;\n    }\n\n    /**\n     * @notice Get the pair address deployed by the factory\n     *         PolicyToken address first, and then stablecoin address\n     *         The order of the tokens will be sorted inside the function\n     * @param _tokenAddress1 Address of token1\n     * @param _tokenAddress2 Address of toekn2\n     * @return Pool address of the two tokens\n     */\n    function getPairAddress(address _tokenAddress1, address _tokenAddress2)\n        public\n        view\n        returns (address)\n    {\n        // Policy token address at the first place\n        (address token0, address token1) = IPolicyCore(policyCore)\n            .isStablecoinAddress(_tokenAddress2)\n            ? (_tokenAddress1, _tokenAddress2)\n            : (_tokenAddress2, _tokenAddress1);\n\n        address _pairAddress = getPair[token0][token1];\n\n        return _pairAddress;\n    }\n\n    // ---------------------------------------------------------------------------------------- //\n    // ************************************* Set Functions ************************************ //\n    // ---------------------------------------------------------------------------------------- //\n\n    /**\n     * @notice Remember to call this function to set the policyCore address\n     *         < PolicyCore should be the owner of policyToken >\n     * @param _policyCore: Address of policyCore contract\n     */\n    function setPolicyCoreAddress(address _policyCore) external {\n        policyCore = _policyCore;\n    }\n\n    /**\n     * @notice Set feeTo address\n     * @param _feeTo Address to receive the fee\n     */\n    function setFeeTo(address _feeTo) external onlyFeeToSetter {\n        feeTo = _feeTo;\n    }\n\n    /**\n     * @notice Set feeToSetter address\n     * @param _feeToSetter Address to control the feeTo\n     */\n    function setFeeToSetter(address _feeToSetter) external onlyFeeToSetter {\n        feeToSetter = _feeToSetter;\n    }\n\n    // ---------------------------------------------------------------------------------------- //\n    // ************************************* Main Functions *********************************** //\n    // ---------------------------------------------------------------------------------------- //\n\n    /**\n     * @notice After deploy the policytoken and get the address,\n     *         we deploy the policyToken - stablecoin pool contract\n     * @param _policyTokenAddress: Address of policy token\n     * @param _stablecoin: Address of the stable coin\n     * @return Address of the pool\n     */\n    function deployPool(\n        address _policyTokenAddress,\n        address _stablecoin,\n        uint256 _deadline\n    ) public returns (address) {\n        require(\n            IPolicyCore(policyCore).isStablecoinAddress(_stablecoin) == true,\n            \"You give the wrong order of policyToken and stablecoin\"\n        );\n\n        bytes memory bytecode = type(NaughtyPair).creationCode;\n\n        bytes32 salt = keccak256(\n            abi.encodePacked(\n                addressToString(_policyTokenAddress),\n                addressToString(_stablecoin)\n            )\n        );\n\n        address _poolAddress = _deploy(bytecode, salt);\n\n        INaughtyPair(_poolAddress).initialize(\n            _policyTokenAddress,\n            _stablecoin,\n            _deadline\n        );\n\n        getPair[_policyTokenAddress][_stablecoin] = _poolAddress;\n\n        allPairs.push(_poolAddress);\n\n        return _poolAddress;\n    }\n\n    /**\n     * @notice For each round we need to first create the policytoken(ERC20)\n     * @param _policyTokenName: Name of the policyToken\n     * @return PolicyToken address\n     */\n    function deployPolicyToken(string memory _policyTokenName)\n        public\n        returns (address)\n    {\n        bytes32 salt = keccak256(abi.encodePacked(_policyTokenName));\n\n        bytes memory bytecode = getPolicyTokenBytecode(_policyTokenName);\n\n        address _policTokenAddress = _deploy(bytecode, salt);\n\n        allTokens.push(_policTokenAddress);\n\n        _nextId++;\n\n        return _policTokenAddress;\n    }\n\n    /**\n     * @notice Deploy function with create2\n     */\n    function _deploy(bytes memory code, bytes32 salt)\n        internal\n        returns (address addr)\n    {\n        assembly {\n            addr := create2(0, add(code, 0x20), mload(code), salt)\n            if iszero(extcodesize(addr)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    /**\n     * @notice Transfer address to string\n     * @param _addr: Input address\n     * @return Output string form\n     */\n    function addressToString(address _addr)\n        internal\n        pure\n        returns (string memory)\n    {\n        return (uint256(uint160(_addr))).toHexString(20);\n    }\n\n    /**\n     * @notice Get the policyToken bytecode (with parameters)\n     * @param _tokenName: Name of policyToken\n     */\n    function getPolicyTokenBytecode(string memory _tokenName)\n        internal\n        view\n        returns (bytes memory)\n    {\n        bytes memory bytecode = type(NPPolicyToken).creationCode;\n\n        // Encodepacked the parameters\n        // The owner & minter is set to be the policyCore address\n        return\n            abi.encodePacked(\n                bytecode,\n                abi.encode(_tokenName, _tokenName, policyCore)\n            );\n    }\n}\n",
  "sourcePath": "/Volumes/Store/Degis/naughty-price/contracts/NaughtyFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/NaughtyFactory.sol",
    "exportedSymbols": {
      "Address": [
        1215
      ],
      "Context": [
        1237
      ],
      "ERC20": [
        591
      ],
      "IERC20": [
        669
      ],
      "IERC20Metadata": [
        694
      ],
      "INPPolicyToken": [
        7126
      ],
      "INaughtyFactory": [
        7173
      ],
      "INaughtyPair": [
        7281
      ],
      "IPolicyCore": [
        7576
      ],
      "NPPolicyToken": [
        3483
      ],
      "NaughtyFactory": [
        3846
      ],
      "NaughtyPair": [
        4546
      ],
      "PRBMath": [
        3334
      ],
      "PRBMathSD59x18__AbsInputTooSmall": [
        1465
      ],
      "PRBMathSD59x18__CeilOverflow": [
        1470
      ],
      "PRBMathSD59x18__DivInputTooSmall": [
        1473
      ],
      "PRBMathSD59x18__DivOverflow": [
        1478
      ],
      "PRBMathSD59x18__Exp2InputTooBig": [
        1488
      ],
      "PRBMathSD59x18__ExpInputTooBig": [
        1483
      ],
      "PRBMathSD59x18__FloorUnderflow": [
        1493
      ],
      "PRBMathSD59x18__FromIntOverflow": [
        1498
      ],
      "PRBMathSD59x18__FromIntUnderflow": [
        1503
      ],
      "PRBMathSD59x18__GmNegativeProduct": [
        1510
      ],
      "PRBMathSD59x18__GmOverflow": [
        1517
      ],
      "PRBMathSD59x18__LogInputTooSmall": [
        1522
      ],
      "PRBMathSD59x18__MulInputTooSmall": [
        1525
      ],
      "PRBMathSD59x18__MulOverflow": [
        1530
      ],
      "PRBMathSD59x18__PowuOverflow": [
        1535
      ],
      "PRBMathSD59x18__SqrtNegativeInput": [
        1540
      ],
      "PRBMathSD59x18__SqrtOverflow": [
        1545
      ],
      "PRBMathUD60x18__AddOverflow": [
        1552
      ],
      "PRBMathUD60x18__CeilOverflow": [
        1557
      ],
      "PRBMathUD60x18__Exp2InputTooBig": [
        1567
      ],
      "PRBMathUD60x18__ExpInputTooBig": [
        1562
      ],
      "PRBMathUD60x18__FromUintOverflow": [
        1572
      ],
      "PRBMathUD60x18__GmOverflow": [
        1579
      ],
      "PRBMathUD60x18__LogInputTooSmall": [
        1584
      ],
      "PRBMathUD60x18__SqrtOverflow": [
        1589
      ],
      "PRBMathUD60x18__SubUnderflow": [
        1596
      ],
      "PRBMath__MulDivFixedPointOverflow": [
        1447
      ],
      "PRBMath__MulDivOverflow": [
        1454
      ],
      "PRBMath__MulDivSignedInputTooSmall": [
        1457
      ],
      "PRBMath__MulDivSignedOverflow": [
        1462
      ],
      "PoolLPToken": [
        6751
      ],
      "SafeERC20": [
        918
      ],
      "Strings": [
        1440
      ]
    },
    "id": 3847,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3485,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:11"
      },
      {
        "absolutePath": "project:/contracts/NPPolicyToken.sol",
        "file": "./NPPolicyToken.sol",
        "id": 3486,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 3484,
        "src": "56:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NaughtyPair.sol",
        "file": "./NaughtyPair.sol",
        "id": 3487,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 4547,
        "src": "86:27:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3488,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 670,
        "src": "115:56:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/INaughtyPair.sol",
        "file": "./interfaces/INaughtyPair.sol",
        "id": 3489,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 7282,
        "src": "172:39:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/INaughtyFactory.sol",
        "file": "./interfaces/INaughtyFactory.sol",
        "id": 3490,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 7174,
        "src": "212:42:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IPolicyCore.sol",
        "file": "./interfaces/IPolicyCore.sol",
        "id": 3491,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 7577,
        "src": "255:38:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 3492,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 1441,
        "src": "295:51:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3494,
              "name": "INaughtyFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7173,
              "src": "661:15:11"
            },
            "id": 3495,
            "nodeType": "InheritanceSpecifier",
            "src": "661:15:11"
          }
        ],
        "canonicalName": "NaughtyFactory",
        "contractDependencies": [
          3483,
          4546
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3493,
          "nodeType": "StructuredDocumentation",
          "src": "348:284:11",
          "text": " @title Naughty Factory\n @dev Factory contract to deploy new pools periodically\n      Each pool(product) will have a unique naughtyId\n      Each pool will have its pool token\n      PolicyToken - Stablecoin\n      Token 0 may change but Token 1 is always stablecoin."
        },
        "fullyImplemented": true,
        "id": 3846,
        "linearizedBaseContracts": [
          3846,
          7173
        ],
        "name": "NaughtyFactory",
        "nameLocation": "643:14:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3498,
            "libraryName": {
              "id": 3496,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1440,
              "src": "689:7:11"
            },
            "nodeType": "UsingForDirective",
            "src": "683:26:11",
            "typeName": {
              "id": 3497,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "701:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3504,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "828:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "780:55:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 3503,
              "keyType": {
                "id": 3499,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "788:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "780:47:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 3502,
                "keyType": {
                  "id": 3500,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "807:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "799:27:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 3501,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "818:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3507,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "890:8:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "880:18:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3505,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "880:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3506,
              "nodeType": "ArrayTypeName",
              "src": "880:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3510,
            "mutability": "mutable",
            "name": "allTokens",
            "nameLocation": "955:9:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "945:19:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3508,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "945:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3509,
              "nodeType": "ArrayTypeName",
              "src": "945:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f2f2fff5",
            "id": 3512,
            "mutability": "mutable",
            "name": "_nextId",
            "nameLocation": "986:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "971:22:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3511,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "971:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e30145e0",
            "id": 3514,
            "mutability": "mutable",
            "name": "policyCore",
            "nameLocation": "1044:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "1029:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3513,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1029:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7133
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 3516,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "1132:5:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "1117:20:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3515,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1117:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "094b7415",
            "id": 3518,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "1158:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "1143:26:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3517,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1143:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "257671f5",
            "id": 3529,
            "mutability": "constant",
            "name": "INIT_CODE_HASH",
            "nameLocation": "1257:14:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "1233:108:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3519,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1233:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 3524,
                            "name": "NaughtyPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4546,
                            "src": "1314:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4546_$",
                              "typeString": "type(contract NaughtyPair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4546_$",
                              "typeString": "type(contract NaughtyPair)"
                            }
                          ],
                          "id": 3523,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "1309:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 3525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1309:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_NaughtyPair_$4546",
                          "typeString": "type(contract NaughtyPair)"
                        }
                      },
                      "id": 3526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "1309:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 3521,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "1292:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 3522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "1292:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 3527,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1292:48:11",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 3520,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1282:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3528,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1282:59:11",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3538,
              "nodeType": "Block",
              "src": "1382:43:11",
              "statements": [
                {
                  "expression": {
                    "id": 3536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3534,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3518,
                      "src": "1392:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3535,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3531,
                      "src": "1406:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1392:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3537,
                  "nodeType": "ExpressionStatement",
                  "src": "1392:26:11"
                }
              ]
            },
            "id": 3539,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3531,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1368:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3539,
                  "src": "1360:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1359:22:11"
            },
            "returnParameters": {
              "id": 3533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:0:11"
            },
            "scope": 3846,
            "src": "1348:77:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3551,
              "nodeType": "Block",
              "src": "1828:139:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3543,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1859:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1859:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3545,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3518,
                          "src": "1873:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1859:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920666565546f5365747465722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 3547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1898:41:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84",
                          "typeString": "literal_string \"Only feeToSetter can call this function\""
                        },
                        "value": "Only feeToSetter can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84",
                          "typeString": "literal_string \"Only feeToSetter can call this function\""
                        }
                      ],
                      "id": 3542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1838:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1838:111:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3549,
                  "nodeType": "ExpressionStatement",
                  "src": "1838:111:11"
                },
                {
                  "id": 3550,
                  "nodeType": "PlaceholderStatement",
                  "src": "1959:1:11"
                }
              ]
            },
            "documentation": {
              "id": 3540,
              "nodeType": "StructuredDocumentation",
              "src": "1729:67:11",
              "text": " @notice Only feeToSetter can call some functions"
            },
            "id": 3552,
            "name": "onlyFeeToSetter",
            "nameLocation": "1810:15:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:2:11"
            },
            "src": "1801:166:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3568,
              "nodeType": "Block",
              "src": "2427:91:11",
              "statements": [
                {
                  "assignments": [
                    3559
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3559,
                      "mutability": "mutable",
                      "name": "currentToken",
                      "nameLocation": "2445:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3568,
                      "src": "2437:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3558,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2437:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3563,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3560,
                      "name": "_nextId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3512,
                      "src": "2460:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 3561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2470:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2460:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2437:34:11"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3564,
                      "name": "allTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3510,
                      "src": "2488:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 3566,
                    "indexExpression": {
                      "id": 3565,
                      "name": "currentToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3559,
                      "src": "2498:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2488:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3557,
                  "id": 3567,
                  "nodeType": "Return",
                  "src": "2481:30:11"
                }
              ]
            },
            "documentation": {
              "id": 3553,
              "nodeType": "StructuredDocumentation",
              "src": "2271:88:11",
              "text": " @notice Next token to be deployed\n @return Latest token address"
            },
            "functionSelector": "9fd2650e",
            "id": 3569,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestTokenAddress",
            "nameLocation": "2373:21:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2394:2:11"
            },
            "returnParameters": {
              "id": 3557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3556,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3569,
                  "src": "2418:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2418:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2417:9:11"
            },
            "scope": 3846,
            "src": "2364:154:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7145
            ],
            "body": {
              "id": 3578,
              "nodeType": "Block",
              "src": "2642:32:11",
              "statements": [
                {
                  "expression": {
                    "id": 3576,
                    "name": "allPairs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3507,
                    "src": "2659:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3575,
                  "id": 3577,
                  "nodeType": "Return",
                  "src": "2652:15:11"
                }
              ]
            },
            "documentation": {
              "id": 3570,
              "nodeType": "StructuredDocumentation",
              "src": "2524:49:11",
              "text": " @notice Get all pair addresses"
            },
            "functionSelector": "f800ece9",
            "id": 3579,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllPairs",
            "nameLocation": "2587:11:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2598:2:11"
            },
            "returnParameters": {
              "id": 3575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3574,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3579,
                  "src": "2624:16:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3572,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2624:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3573,
                    "nodeType": "ArrayTypeName",
                    "src": "2624:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2623:18:11"
            },
            "scope": 3846,
            "src": "2578:96:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7139
            ],
            "body": {
              "id": 3588,
              "nodeType": "Block",
              "src": "2800:33:11",
              "statements": [
                {
                  "expression": {
                    "id": 3586,
                    "name": "allTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3510,
                    "src": "2817:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3585,
                  "id": 3587,
                  "nodeType": "Return",
                  "src": "2810:16:11"
                }
              ]
            },
            "documentation": {
              "id": 3580,
              "nodeType": "StructuredDocumentation",
              "src": "2680:50:11",
              "text": " @notice Get all token addresses"
            },
            "functionSelector": "2a5c792a",
            "id": 3589,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTokens",
            "nameLocation": "2744:12:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2756:2:11"
            },
            "returnParameters": {
              "id": 3585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3584,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3589,
                  "src": "2782:16:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3582,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2782:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3583,
                    "nodeType": "ArrayTypeName",
                    "src": "2782:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2781:18:11"
            },
            "scope": 3846,
            "src": "2735:98:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7154
            ],
            "body": {
              "id": 3627,
              "nodeType": "Block",
              "src": "3329:356:11",
              "statements": [
                {
                  "assignments": [
                    3600,
                    3602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3600,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "3399:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3627,
                      "src": "3391:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3599,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3391:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3602,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "3415:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3627,
                      "src": "3407:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3601,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3407:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3616,
                  "initialValue": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 3607,
                          "name": "_tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3594,
                          "src": "3482:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3604,
                              "name": "policyCore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3514,
                              "src": "3437:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3603,
                            "name": "IPolicyCore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7576,
                            "src": "3425:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPolicyCore_$7576_$",
                              "typeString": "type(contract IPolicyCore)"
                            }
                          },
                          "id": 3605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3425:23:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPolicyCore_$7576",
                            "typeString": "contract IPolicyCore"
                          }
                        },
                        "id": 3606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isStablecoinAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7494,
                        "src": "3425:56:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 3608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3425:72:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 3612,
                          "name": "_tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3594,
                          "src": "3560:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3613,
                          "name": "_tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3592,
                          "src": "3576:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3614,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3559:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 3615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3425:166:11",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 3609,
                          "name": "_tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3592,
                          "src": "3513:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3610,
                          "name": "_tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3594,
                          "src": "3529:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3611,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3512:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3390:201:11"
                },
                {
                  "assignments": [
                    3618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3618,
                      "mutability": "mutable",
                      "name": "_pairAddress",
                      "nameLocation": "3610:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3627,
                      "src": "3602:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3617,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3602:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3624,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3619,
                        "name": "getPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3504,
                        "src": "3625:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                          "typeString": "mapping(address => mapping(address => address))"
                        }
                      },
                      "id": 3621,
                      "indexExpression": {
                        "id": 3620,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3600,
                        "src": "3633:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3625:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 3623,
                    "indexExpression": {
                      "id": 3622,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3602,
                      "src": "3641:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3625:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3602:46:11"
                },
                {
                  "expression": {
                    "id": 3625,
                    "name": "_pairAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3618,
                    "src": "3666:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3598,
                  "id": 3626,
                  "nodeType": "Return",
                  "src": "3659:19:11"
                }
              ]
            },
            "documentation": {
              "id": 3590,
              "nodeType": "StructuredDocumentation",
              "src": "2839:355:11",
              "text": " @notice Get the pair address deployed by the factory\n         PolicyToken address first, and then stablecoin address\n         The order of the tokens will be sorted inside the function\n @param _tokenAddress1 Address of token1\n @param _tokenAddress2 Address of toekn2\n @return Pool address of the two tokens"
            },
            "functionSelector": "b4f69a2f",
            "id": 3628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPairAddress",
            "nameLocation": "3208:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3592,
                  "mutability": "mutable",
                  "name": "_tokenAddress1",
                  "nameLocation": "3231:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3628,
                  "src": "3223:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3223:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3594,
                  "mutability": "mutable",
                  "name": "_tokenAddress2",
                  "nameLocation": "3255:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3628,
                  "src": "3247:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3247:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3222:48:11"
            },
            "returnParameters": {
              "id": 3598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3628,
                  "src": "3316:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3316:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3315:9:11"
            },
            "scope": 3846,
            "src": "3199:486:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3638,
              "nodeType": "Block",
              "src": "4264:41:11",
              "statements": [
                {
                  "expression": {
                    "id": 3636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3634,
                      "name": "policyCore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3514,
                      "src": "4274:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3635,
                      "name": "_policyCore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3631,
                      "src": "4287:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4274:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3637,
                  "nodeType": "ExpressionStatement",
                  "src": "4274:24:11"
                }
              ]
            },
            "documentation": {
              "id": 3629,
              "nodeType": "StructuredDocumentation",
              "src": "3989:210:11",
              "text": " @notice Remember to call this function to set the policyCore address\n         < PolicyCore should be the owner of policyToken >\n @param _policyCore: Address of policyCore contract"
            },
            "functionSelector": "61c8f99d",
            "id": 3639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPolicyCoreAddress",
            "nameLocation": "4213:20:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3631,
                  "mutability": "mutable",
                  "name": "_policyCore",
                  "nameLocation": "4242:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3639,
                  "src": "4234:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4234:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4233:21:11"
            },
            "returnParameters": {
              "id": 3633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4264:0:11"
            },
            "scope": 3846,
            "src": "4204:101:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3651,
              "nodeType": "Block",
              "src": "4467:31:11",
              "statements": [
                {
                  "expression": {
                    "id": 3649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3647,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3516,
                      "src": "4477:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3648,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3642,
                      "src": "4485:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4477:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3650,
                  "nodeType": "ExpressionStatement",
                  "src": "4477:14:11"
                }
              ]
            },
            "documentation": {
              "id": 3640,
              "nodeType": "StructuredDocumentation",
              "src": "4311:92:11",
              "text": " @notice Set feeTo address\n @param _feeTo Address to receive the fee"
            },
            "functionSelector": "f46901ed",
            "id": 3652,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3645,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3644,
                  "name": "onlyFeeToSetter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3552,
                  "src": "4451:15:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4451:15:11"
              }
            ],
            "name": "setFeeTo",
            "nameLocation": "4417:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3642,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "4434:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3652,
                  "src": "4426:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4426:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4425:16:11"
            },
            "returnParameters": {
              "id": 3646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4467:0:11"
            },
            "scope": 3846,
            "src": "4408:90:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3664,
              "nodeType": "Block",
              "src": "4686:43:11",
              "statements": [
                {
                  "expression": {
                    "id": 3662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3660,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3518,
                      "src": "4696:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3661,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3655,
                      "src": "4710:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4696:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3663,
                  "nodeType": "ExpressionStatement",
                  "src": "4696:26:11"
                }
              ]
            },
            "documentation": {
              "id": 3653,
              "nodeType": "StructuredDocumentation",
              "src": "4504:106:11",
              "text": " @notice Set feeToSetter address\n @param _feeToSetter Address to control the feeTo"
            },
            "functionSelector": "a2e74af6",
            "id": 3665,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3658,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3657,
                  "name": "onlyFeeToSetter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3552,
                  "src": "4670:15:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4670:15:11"
              }
            ],
            "name": "setFeeToSetter",
            "nameLocation": "4624:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3655,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "4647:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4639:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4639:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4638:22:11"
            },
            "returnParameters": {
              "id": 3659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4686:0:11"
            },
            "scope": 3846,
            "src": "4615:114:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7172
            ],
            "body": {
              "id": 3742,
              "nodeType": "Block",
              "src": "5474:767:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3682,
                              "name": "_stablecoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3670,
                              "src": "5549:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3679,
                                  "name": "policyCore",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3514,
                                  "src": "5517:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3678,
                                "name": "IPolicyCore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7576,
                                "src": "5505:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPolicyCore_$7576_$",
                                  "typeString": "type(contract IPolicyCore)"
                                }
                              },
                              "id": 3680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5505:23:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPolicyCore_$7576",
                                "typeString": "contract IPolicyCore"
                              }
                            },
                            "id": 3681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isStablecoinAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7494,
                            "src": "5505:43:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 3683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5505:56:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 3684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5565:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "5505:64:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752067697665207468652077726f6e67206f72646572206f6620706f6c696379546f6b656e20616e6420737461626c65636f696e",
                        "id": 3686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5583:56:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f",
                          "typeString": "literal_string \"You give the wrong order of policyToken and stablecoin\""
                        },
                        "value": "You give the wrong order of policyToken and stablecoin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f",
                          "typeString": "literal_string \"You give the wrong order of policyToken and stablecoin\""
                        }
                      ],
                      "id": 3677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5484:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5484:165:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3688,
                  "nodeType": "ExpressionStatement",
                  "src": "5484:165:11"
                },
                {
                  "assignments": [
                    3690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3690,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "5673:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3742,
                      "src": "5660:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3689,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5660:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3695,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3692,
                          "name": "NaughtyPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4546,
                          "src": "5689:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4546_$",
                            "typeString": "type(contract NaughtyPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4546_$",
                            "typeString": "type(contract NaughtyPair)"
                          }
                        ],
                        "id": 3691,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "5684:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5684:17:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_NaughtyPair_$4546",
                        "typeString": "type(contract NaughtyPair)"
                      }
                    },
                    "id": 3694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "5684:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5660:54:11"
                },
                {
                  "assignments": [
                    3697
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3697,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "5733:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3742,
                      "src": "5725:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3696,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5725:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3709,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 3702,
                                "name": "_policyTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3668,
                                "src": "5813:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3701,
                              "name": "addressToString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3818,
                              "src": "5797:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) pure returns (string memory)"
                              }
                            },
                            "id": 3703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5797:36:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3705,
                                "name": "_stablecoin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3670,
                                "src": "5867:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3704,
                              "name": "addressToString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3818,
                              "src": "5851:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) pure returns (string memory)"
                              }
                            },
                            "id": 3706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5851:28:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3699,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "5763:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5763:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5763:130:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3698,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "5740:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5740:163:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5725:178:11"
                },
                {
                  "assignments": [
                    3711
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3711,
                      "mutability": "mutable",
                      "name": "_poolAddress",
                      "nameLocation": "5922:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3742,
                      "src": "5914:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3710,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5914:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3716,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3713,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3690,
                        "src": "5945:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 3714,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3697,
                        "src": "5955:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3712,
                      "name": "_deploy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3797,
                      "src": "5937:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes memory,bytes32) returns (address)"
                      }
                    },
                    "id": 3715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5937:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5914:46:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3721,
                        "name": "_policyTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3668,
                        "src": "6022:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3722,
                        "name": "_stablecoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3670,
                        "src": "6055:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3723,
                        "name": "_deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3672,
                        "src": "6080:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3718,
                            "name": "_poolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3711,
                            "src": "5984:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3717,
                          "name": "INaughtyPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7281,
                          "src": "5971:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INaughtyPair_$7281_$",
                            "typeString": "type(contract INaughtyPair)"
                          }
                        },
                        "id": 3719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5971:26:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INaughtyPair_$7281",
                          "typeString": "contract INaughtyPair"
                        }
                      },
                      "id": 3720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7280,
                      "src": "5971:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5971:128:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3725,
                  "nodeType": "ExpressionStatement",
                  "src": "5971:128:11"
                },
                {
                  "expression": {
                    "id": 3732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3726,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3504,
                          "src": "6110:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 3729,
                        "indexExpression": {
                          "id": 3727,
                          "name": "_policyTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3668,
                          "src": "6118:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6110:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 3730,
                      "indexExpression": {
                        "id": 3728,
                        "name": "_stablecoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3670,
                        "src": "6139:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6110:41:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3731,
                      "name": "_poolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "6154:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6110:56:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3733,
                  "nodeType": "ExpressionStatement",
                  "src": "6110:56:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3737,
                        "name": "_poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3711,
                        "src": "6191:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3734,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3507,
                        "src": "6177:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6177:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6177:27:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3739,
                  "nodeType": "ExpressionStatement",
                  "src": "6177:27:11"
                },
                {
                  "expression": {
                    "id": 3740,
                    "name": "_poolAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3711,
                    "src": "6222:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3676,
                  "id": 3741,
                  "nodeType": "Return",
                  "src": "6215:19:11"
                }
              ]
            },
            "documentation": {
              "id": 3666,
              "nodeType": "StructuredDocumentation",
              "src": "5033:292:11",
              "text": " @notice After deploy the policytoken and get the address,\n         we deploy the policyToken - stablecoin pool contract\n @param _policyTokenAddress: Address of policy token\n @param _stablecoin: Address of the stable coin\n @return Address of the pool"
            },
            "functionSelector": "a3232bf3",
            "id": 3743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployPool",
            "nameLocation": "5339:10:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3668,
                  "mutability": "mutable",
                  "name": "_policyTokenAddress",
                  "nameLocation": "5367:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3743,
                  "src": "5359:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5359:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3670,
                  "mutability": "mutable",
                  "name": "_stablecoin",
                  "nameLocation": "5404:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3743,
                  "src": "5396:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5396:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3672,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "5433:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3743,
                  "src": "5425:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5425:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5349:99:11"
            },
            "returnParameters": {
              "id": 3676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3675,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3743,
                  "src": "5465:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5465:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5464:9:11"
            },
            "scope": 3846,
            "src": "5330:911:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7161
            ],
            "body": {
              "id": 3784,
              "nodeType": "Block",
              "src": "6535:316:11",
              "statements": [
                {
                  "assignments": [
                    3752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3752,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "6553:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3784,
                      "src": "6545:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3751,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6545:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3759,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3756,
                            "name": "_policyTokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3746,
                            "src": "6587:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3754,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "6570:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6570:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6570:34:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3753,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "6560:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6560:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6545:60:11"
                },
                {
                  "assignments": [
                    3761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3761,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "6629:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3784,
                      "src": "6616:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3760,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6616:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3765,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3763,
                        "name": "_policyTokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3746,
                        "src": "6663:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3762,
                      "name": "getPolicyTokenBytecode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3845,
                      "src": "6640:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) view returns (bytes memory)"
                      }
                    },
                    "id": 3764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6640:40:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6616:64:11"
                },
                {
                  "assignments": [
                    3767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3767,
                      "mutability": "mutable",
                      "name": "_policTokenAddress",
                      "nameLocation": "6699:18:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3784,
                      "src": "6691:26:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3766,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6691:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3772,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3769,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3761,
                        "src": "6728:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 3770,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3752,
                        "src": "6738:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3768,
                      "name": "_deploy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3797,
                      "src": "6720:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes memory,bytes32) returns (address)"
                      }
                    },
                    "id": 3771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6720:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6691:52:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3776,
                        "name": "_policTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3767,
                        "src": "6769:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3773,
                        "name": "allTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3510,
                        "src": "6754:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6754:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6754:34:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3778,
                  "nodeType": "ExpressionStatement",
                  "src": "6754:34:11"
                },
                {
                  "expression": {
                    "id": 3780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6799:9:11",
                    "subExpression": {
                      "id": 3779,
                      "name": "_nextId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3512,
                      "src": "6799:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3781,
                  "nodeType": "ExpressionStatement",
                  "src": "6799:9:11"
                },
                {
                  "expression": {
                    "id": 3782,
                    "name": "_policTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3767,
                    "src": "6826:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3750,
                  "id": 3783,
                  "nodeType": "Return",
                  "src": "6819:25:11"
                }
              ]
            },
            "documentation": {
              "id": 3744,
              "nodeType": "StructuredDocumentation",
              "src": "6247:179:11",
              "text": " @notice For each round we need to first create the policytoken(ERC20)\n @param _policyTokenName: Name of the policyToken\n @return PolicyToken address"
            },
            "functionSelector": "f03c6132",
            "id": 3785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployPolicyToken",
            "nameLocation": "6440:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3746,
                  "mutability": "mutable",
                  "name": "_policyTokenName",
                  "nameLocation": "6472:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3785,
                  "src": "6458:30:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3745,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6458:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6457:32:11"
            },
            "returnParameters": {
              "id": 3750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3749,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3785,
                  "src": "6522:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6522:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6521:9:11"
            },
            "scope": 3846,
            "src": "6431:420:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3796,
              "nodeType": "Block",
              "src": "7019:189:11",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "7038:164:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7052:54:11",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7068:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "code",
                                  "nodeType": "YulIdentifier",
                                  "src": "7075:4:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7081:4:11",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7071:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7071:15:11"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "code",
                                  "nodeType": "YulIdentifier",
                                  "src": "7094:4:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7088:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7088:11:11"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "7101:4:11"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "7060:7:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7060:46:11"
                        },
                        "variableNames": [
                          {
                            "name": "addr",
                            "nodeType": "YulIdentifier",
                            "src": "7052:4:11"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7148:44:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7173:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7176:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7166:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7166:12:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7166:12:11"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7141:4:11"
                                }
                              ],
                              "functionName": {
                                "name": "extcodesize",
                                "nodeType": "YulIdentifier",
                                "src": "7129:11:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7129:17:11"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "7122:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7122:25:11"
                        },
                        "nodeType": "YulIf",
                        "src": "7119:73:11"
                      }
                    ]
                  },
                  "evmVersion": "constantinople",
                  "externalReferences": [
                    {
                      "declaration": 3793,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7052:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3793,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7141:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3788,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7075:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3788,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7094:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3790,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7101:4:11",
                      "valueSize": 1
                    }
                  ],
                  "id": 3795,
                  "nodeType": "InlineAssembly",
                  "src": "7029:173:11"
                }
              ]
            },
            "documentation": {
              "id": 3786,
              "nodeType": "StructuredDocumentation",
              "src": "6857:55:11",
              "text": " @notice Deploy function with create2"
            },
            "id": 3797,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deploy",
            "nameLocation": "6926:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3788,
                  "mutability": "mutable",
                  "name": "code",
                  "nameLocation": "6947:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3797,
                  "src": "6934:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3787,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6934:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3790,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "6961:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3797,
                  "src": "6953:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3789,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6953:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6933:33:11"
            },
            "returnParameters": {
              "id": 3794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3793,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "7009:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3797,
                  "src": "7001:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7001:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7000:14:11"
            },
            "scope": 3846,
            "src": "6917:291:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3817,
              "nodeType": "Block",
              "src": "7447:65:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3230",
                        "id": 3814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7502:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3809,
                                    "name": "_addr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3800,
                                    "src": "7481:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3808,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7473:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 3807,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7473:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7473:14:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 3806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7465:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 3805,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7465:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7465:23:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3812,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7464:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toHexString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1439,
                      "src": "7464:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (string memory)"
                      }
                    },
                    "id": 3815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7464:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3804,
                  "id": 3816,
                  "nodeType": "Return",
                  "src": "7457:48:11"
                }
              ]
            },
            "documentation": {
              "id": 3798,
              "nodeType": "StructuredDocumentation",
              "src": "7214:122:11",
              "text": " @notice Transfer address to string\n @param _addr: Input address\n @return Output string form"
            },
            "id": 3818,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addressToString",
            "nameLocation": "7350:15:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3800,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "7374:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3818,
                  "src": "7366:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7366:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7365:15:11"
            },
            "returnParameters": {
              "id": 3804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3803,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3818,
                  "src": "7428:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3802,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7428:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7427:15:11"
            },
            "scope": 3846,
            "src": "7341:171:11",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3844,
              "nodeType": "Block",
              "src": "7765:328:11",
              "statements": [
                {
                  "assignments": [
                    3827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3827,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "7788:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3844,
                      "src": "7775:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3826,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7775:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3832,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3829,
                          "name": "NPPolicyToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3483,
                          "src": "7804:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NPPolicyToken_$3483_$",
                            "typeString": "type(contract NPPolicyToken)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_NPPolicyToken_$3483_$",
                            "typeString": "type(contract NPPolicyToken)"
                          }
                        ],
                        "id": 3828,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "7799:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7799:19:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_NPPolicyToken_$3483",
                        "typeString": "type(contract NPPolicyToken)"
                      }
                    },
                    "id": 3831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "7799:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7775:56:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3835,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3827,
                        "src": "8000:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3838,
                            "name": "_tokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3821,
                            "src": "8037:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 3839,
                            "name": "_tokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3821,
                            "src": "8049:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 3840,
                            "name": "policyCore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3514,
                            "src": "8061:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3836,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "8026:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8026:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8026:46:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3833,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "7966:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "7966:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 3842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7966:120:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 3825,
                  "id": 3843,
                  "nodeType": "Return",
                  "src": "7947:139:11"
                }
              ]
            },
            "documentation": {
              "id": 3819,
              "nodeType": "StructuredDocumentation",
              "src": "7518:119:11",
              "text": " @notice Get the policyToken bytecode (with parameters)\n @param _tokenName: Name of policyToken"
            },
            "id": 3845,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPolicyTokenBytecode",
            "nameLocation": "7651:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3821,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nameLocation": "7688:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3845,
                  "src": "7674:24:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3820,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7674:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7673:26:11"
            },
            "returnParameters": {
              "id": 3825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3824,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3845,
                  "src": "7747:12:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3823,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7747:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7746:14:11"
            },
            "scope": 3846,
            "src": "7642:451:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3847,
        "src": "634:7461:11",
        "usedErrors": []
      }
    ],
    "src": "32:8064:11"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/NaughtyFactory.sol",
    "exportedSymbols": {
      "Address": [
        1215
      ],
      "Context": [
        1237
      ],
      "ERC20": [
        591
      ],
      "IERC20": [
        669
      ],
      "IERC20Metadata": [
        694
      ],
      "INPPolicyToken": [
        7126
      ],
      "INaughtyFactory": [
        7173
      ],
      "INaughtyPair": [
        7281
      ],
      "IPolicyCore": [
        7576
      ],
      "NPPolicyToken": [
        3483
      ],
      "NaughtyFactory": [
        3846
      ],
      "NaughtyPair": [
        4546
      ],
      "PRBMath": [
        3334
      ],
      "PRBMathSD59x18__AbsInputTooSmall": [
        1465
      ],
      "PRBMathSD59x18__CeilOverflow": [
        1470
      ],
      "PRBMathSD59x18__DivInputTooSmall": [
        1473
      ],
      "PRBMathSD59x18__DivOverflow": [
        1478
      ],
      "PRBMathSD59x18__Exp2InputTooBig": [
        1488
      ],
      "PRBMathSD59x18__ExpInputTooBig": [
        1483
      ],
      "PRBMathSD59x18__FloorUnderflow": [
        1493
      ],
      "PRBMathSD59x18__FromIntOverflow": [
        1498
      ],
      "PRBMathSD59x18__FromIntUnderflow": [
        1503
      ],
      "PRBMathSD59x18__GmNegativeProduct": [
        1510
      ],
      "PRBMathSD59x18__GmOverflow": [
        1517
      ],
      "PRBMathSD59x18__LogInputTooSmall": [
        1522
      ],
      "PRBMathSD59x18__MulInputTooSmall": [
        1525
      ],
      "PRBMathSD59x18__MulOverflow": [
        1530
      ],
      "PRBMathSD59x18__PowuOverflow": [
        1535
      ],
      "PRBMathSD59x18__SqrtNegativeInput": [
        1540
      ],
      "PRBMathSD59x18__SqrtOverflow": [
        1545
      ],
      "PRBMathUD60x18__AddOverflow": [
        1552
      ],
      "PRBMathUD60x18__CeilOverflow": [
        1557
      ],
      "PRBMathUD60x18__Exp2InputTooBig": [
        1567
      ],
      "PRBMathUD60x18__ExpInputTooBig": [
        1562
      ],
      "PRBMathUD60x18__FromUintOverflow": [
        1572
      ],
      "PRBMathUD60x18__GmOverflow": [
        1579
      ],
      "PRBMathUD60x18__LogInputTooSmall": [
        1584
      ],
      "PRBMathUD60x18__SqrtOverflow": [
        1589
      ],
      "PRBMathUD60x18__SubUnderflow": [
        1596
      ],
      "PRBMath__MulDivFixedPointOverflow": [
        1447
      ],
      "PRBMath__MulDivOverflow": [
        1454
      ],
      "PRBMath__MulDivSignedInputTooSmall": [
        1457
      ],
      "PRBMath__MulDivSignedOverflow": [
        1462
      ],
      "PoolLPToken": [
        6751
      ],
      "SafeERC20": [
        918
      ],
      "Strings": [
        1440
      ]
    },
    "id": 3847,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3485,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:11"
      },
      {
        "absolutePath": "project:/contracts/NPPolicyToken.sol",
        "file": "./NPPolicyToken.sol",
        "id": 3486,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 3484,
        "src": "56:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NaughtyPair.sol",
        "file": "./NaughtyPair.sol",
        "id": 3487,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 4547,
        "src": "86:27:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3488,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 670,
        "src": "115:56:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/INaughtyPair.sol",
        "file": "./interfaces/INaughtyPair.sol",
        "id": 3489,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 7282,
        "src": "172:39:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/INaughtyFactory.sol",
        "file": "./interfaces/INaughtyFactory.sol",
        "id": 3490,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 7174,
        "src": "212:42:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IPolicyCore.sol",
        "file": "./interfaces/IPolicyCore.sol",
        "id": 3491,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 7577,
        "src": "255:38:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 3492,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3847,
        "sourceUnit": 1441,
        "src": "295:51:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3494,
              "name": "INaughtyFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7173,
              "src": "661:15:11"
            },
            "id": 3495,
            "nodeType": "InheritanceSpecifier",
            "src": "661:15:11"
          }
        ],
        "canonicalName": "NaughtyFactory",
        "contractDependencies": [
          3483,
          4546
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3493,
          "nodeType": "StructuredDocumentation",
          "src": "348:284:11",
          "text": " @title Naughty Factory\n @dev Factory contract to deploy new pools periodically\n      Each pool(product) will have a unique naughtyId\n      Each pool will have its pool token\n      PolicyToken - Stablecoin\n      Token 0 may change but Token 1 is always stablecoin."
        },
        "fullyImplemented": true,
        "id": 3846,
        "linearizedBaseContracts": [
          3846,
          7173
        ],
        "name": "NaughtyFactory",
        "nameLocation": "643:14:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3498,
            "libraryName": {
              "id": 3496,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1440,
              "src": "689:7:11"
            },
            "nodeType": "UsingForDirective",
            "src": "683:26:11",
            "typeName": {
              "id": 3497,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "701:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3504,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "828:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "780:55:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 3503,
              "keyType": {
                "id": 3499,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "788:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "780:47:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 3502,
                "keyType": {
                  "id": 3500,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "807:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "799:27:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 3501,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "818:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3507,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "890:8:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "880:18:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3505,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "880:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3506,
              "nodeType": "ArrayTypeName",
              "src": "880:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3510,
            "mutability": "mutable",
            "name": "allTokens",
            "nameLocation": "955:9:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "945:19:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3508,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "945:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3509,
              "nodeType": "ArrayTypeName",
              "src": "945:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f2f2fff5",
            "id": 3512,
            "mutability": "mutable",
            "name": "_nextId",
            "nameLocation": "986:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "971:22:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3511,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "971:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e30145e0",
            "id": 3514,
            "mutability": "mutable",
            "name": "policyCore",
            "nameLocation": "1044:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "1029:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3513,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1029:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7133
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 3516,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "1132:5:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "1117:20:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3515,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1117:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "094b7415",
            "id": 3518,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "1158:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "1143:26:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3517,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1143:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "257671f5",
            "id": 3529,
            "mutability": "constant",
            "name": "INIT_CODE_HASH",
            "nameLocation": "1257:14:11",
            "nodeType": "VariableDeclaration",
            "scope": 3846,
            "src": "1233:108:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3519,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1233:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 3524,
                            "name": "NaughtyPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4546,
                            "src": "1314:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4546_$",
                              "typeString": "type(contract NaughtyPair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4546_$",
                              "typeString": "type(contract NaughtyPair)"
                            }
                          ],
                          "id": 3523,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "1309:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 3525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1309:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_NaughtyPair_$4546",
                          "typeString": "type(contract NaughtyPair)"
                        }
                      },
                      "id": 3526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "1309:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 3521,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "1292:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 3522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "1292:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 3527,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1292:48:11",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 3520,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1282:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3528,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1282:59:11",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3538,
              "nodeType": "Block",
              "src": "1382:43:11",
              "statements": [
                {
                  "expression": {
                    "id": 3536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3534,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3518,
                      "src": "1392:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3535,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3531,
                      "src": "1406:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1392:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3537,
                  "nodeType": "ExpressionStatement",
                  "src": "1392:26:11"
                }
              ]
            },
            "id": 3539,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3531,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1368:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3539,
                  "src": "1360:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1359:22:11"
            },
            "returnParameters": {
              "id": 3533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:0:11"
            },
            "scope": 3846,
            "src": "1348:77:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3551,
              "nodeType": "Block",
              "src": "1828:139:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3543,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1859:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1859:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3545,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3518,
                          "src": "1873:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1859:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920666565546f5365747465722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 3547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1898:41:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84",
                          "typeString": "literal_string \"Only feeToSetter can call this function\""
                        },
                        "value": "Only feeToSetter can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84",
                          "typeString": "literal_string \"Only feeToSetter can call this function\""
                        }
                      ],
                      "id": 3542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1838:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1838:111:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3549,
                  "nodeType": "ExpressionStatement",
                  "src": "1838:111:11"
                },
                {
                  "id": 3550,
                  "nodeType": "PlaceholderStatement",
                  "src": "1959:1:11"
                }
              ]
            },
            "documentation": {
              "id": 3540,
              "nodeType": "StructuredDocumentation",
              "src": "1729:67:11",
              "text": " @notice Only feeToSetter can call some functions"
            },
            "id": 3552,
            "name": "onlyFeeToSetter",
            "nameLocation": "1810:15:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:2:11"
            },
            "src": "1801:166:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3568,
              "nodeType": "Block",
              "src": "2427:91:11",
              "statements": [
                {
                  "assignments": [
                    3559
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3559,
                      "mutability": "mutable",
                      "name": "currentToken",
                      "nameLocation": "2445:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3568,
                      "src": "2437:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3558,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2437:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3563,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3560,
                      "name": "_nextId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3512,
                      "src": "2460:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 3561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2470:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2460:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2437:34:11"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3564,
                      "name": "allTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3510,
                      "src": "2488:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 3566,
                    "indexExpression": {
                      "id": 3565,
                      "name": "currentToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3559,
                      "src": "2498:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2488:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3557,
                  "id": 3567,
                  "nodeType": "Return",
                  "src": "2481:30:11"
                }
              ]
            },
            "documentation": {
              "id": 3553,
              "nodeType": "StructuredDocumentation",
              "src": "2271:88:11",
              "text": " @notice Next token to be deployed\n @return Latest token address"
            },
            "functionSelector": "9fd2650e",
            "id": 3569,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestTokenAddress",
            "nameLocation": "2373:21:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2394:2:11"
            },
            "returnParameters": {
              "id": 3557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3556,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3569,
                  "src": "2418:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2418:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2417:9:11"
            },
            "scope": 3846,
            "src": "2364:154:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7145
            ],
            "body": {
              "id": 3578,
              "nodeType": "Block",
              "src": "2642:32:11",
              "statements": [
                {
                  "expression": {
                    "id": 3576,
                    "name": "allPairs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3507,
                    "src": "2659:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3575,
                  "id": 3577,
                  "nodeType": "Return",
                  "src": "2652:15:11"
                }
              ]
            },
            "documentation": {
              "id": 3570,
              "nodeType": "StructuredDocumentation",
              "src": "2524:49:11",
              "text": " @notice Get all pair addresses"
            },
            "functionSelector": "f800ece9",
            "id": 3579,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllPairs",
            "nameLocation": "2587:11:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2598:2:11"
            },
            "returnParameters": {
              "id": 3575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3574,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3579,
                  "src": "2624:16:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3572,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2624:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3573,
                    "nodeType": "ArrayTypeName",
                    "src": "2624:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2623:18:11"
            },
            "scope": 3846,
            "src": "2578:96:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7139
            ],
            "body": {
              "id": 3588,
              "nodeType": "Block",
              "src": "2800:33:11",
              "statements": [
                {
                  "expression": {
                    "id": 3586,
                    "name": "allTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3510,
                    "src": "2817:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3585,
                  "id": 3587,
                  "nodeType": "Return",
                  "src": "2810:16:11"
                }
              ]
            },
            "documentation": {
              "id": 3580,
              "nodeType": "StructuredDocumentation",
              "src": "2680:50:11",
              "text": " @notice Get all token addresses"
            },
            "functionSelector": "2a5c792a",
            "id": 3589,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTokens",
            "nameLocation": "2744:12:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2756:2:11"
            },
            "returnParameters": {
              "id": 3585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3584,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3589,
                  "src": "2782:16:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3582,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2782:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3583,
                    "nodeType": "ArrayTypeName",
                    "src": "2782:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2781:18:11"
            },
            "scope": 3846,
            "src": "2735:98:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7154
            ],
            "body": {
              "id": 3627,
              "nodeType": "Block",
              "src": "3329:356:11",
              "statements": [
                {
                  "assignments": [
                    3600,
                    3602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3600,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "3399:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3627,
                      "src": "3391:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3599,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3391:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3602,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "3415:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3627,
                      "src": "3407:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3601,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3407:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3616,
                  "initialValue": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 3607,
                          "name": "_tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3594,
                          "src": "3482:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3604,
                              "name": "policyCore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3514,
                              "src": "3437:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3603,
                            "name": "IPolicyCore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7576,
                            "src": "3425:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPolicyCore_$7576_$",
                              "typeString": "type(contract IPolicyCore)"
                            }
                          },
                          "id": 3605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3425:23:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPolicyCore_$7576",
                            "typeString": "contract IPolicyCore"
                          }
                        },
                        "id": 3606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isStablecoinAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7494,
                        "src": "3425:56:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 3608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3425:72:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 3612,
                          "name": "_tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3594,
                          "src": "3560:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3613,
                          "name": "_tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3592,
                          "src": "3576:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3614,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3559:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 3615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3425:166:11",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 3609,
                          "name": "_tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3592,
                          "src": "3513:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3610,
                          "name": "_tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3594,
                          "src": "3529:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3611,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3512:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3390:201:11"
                },
                {
                  "assignments": [
                    3618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3618,
                      "mutability": "mutable",
                      "name": "_pairAddress",
                      "nameLocation": "3610:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3627,
                      "src": "3602:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3617,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3602:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3624,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3619,
                        "name": "getPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3504,
                        "src": "3625:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                          "typeString": "mapping(address => mapping(address => address))"
                        }
                      },
                      "id": 3621,
                      "indexExpression": {
                        "id": 3620,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3600,
                        "src": "3633:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3625:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 3623,
                    "indexExpression": {
                      "id": 3622,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3602,
                      "src": "3641:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3625:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3602:46:11"
                },
                {
                  "expression": {
                    "id": 3625,
                    "name": "_pairAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3618,
                    "src": "3666:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3598,
                  "id": 3626,
                  "nodeType": "Return",
                  "src": "3659:19:11"
                }
              ]
            },
            "documentation": {
              "id": 3590,
              "nodeType": "StructuredDocumentation",
              "src": "2839:355:11",
              "text": " @notice Get the pair address deployed by the factory\n         PolicyToken address first, and then stablecoin address\n         The order of the tokens will be sorted inside the function\n @param _tokenAddress1 Address of token1\n @param _tokenAddress2 Address of toekn2\n @return Pool address of the two tokens"
            },
            "functionSelector": "b4f69a2f",
            "id": 3628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPairAddress",
            "nameLocation": "3208:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3592,
                  "mutability": "mutable",
                  "name": "_tokenAddress1",
                  "nameLocation": "3231:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3628,
                  "src": "3223:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3223:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3594,
                  "mutability": "mutable",
                  "name": "_tokenAddress2",
                  "nameLocation": "3255:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3628,
                  "src": "3247:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3247:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3222:48:11"
            },
            "returnParameters": {
              "id": 3598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3628,
                  "src": "3316:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3316:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3315:9:11"
            },
            "scope": 3846,
            "src": "3199:486:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3638,
              "nodeType": "Block",
              "src": "4264:41:11",
              "statements": [
                {
                  "expression": {
                    "id": 3636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3634,
                      "name": "policyCore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3514,
                      "src": "4274:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3635,
                      "name": "_policyCore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3631,
                      "src": "4287:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4274:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3637,
                  "nodeType": "ExpressionStatement",
                  "src": "4274:24:11"
                }
              ]
            },
            "documentation": {
              "id": 3629,
              "nodeType": "StructuredDocumentation",
              "src": "3989:210:11",
              "text": " @notice Remember to call this function to set the policyCore address\n         < PolicyCore should be the owner of policyToken >\n @param _policyCore: Address of policyCore contract"
            },
            "functionSelector": "61c8f99d",
            "id": 3639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPolicyCoreAddress",
            "nameLocation": "4213:20:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3631,
                  "mutability": "mutable",
                  "name": "_policyCore",
                  "nameLocation": "4242:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3639,
                  "src": "4234:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4234:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4233:21:11"
            },
            "returnParameters": {
              "id": 3633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4264:0:11"
            },
            "scope": 3846,
            "src": "4204:101:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3651,
              "nodeType": "Block",
              "src": "4467:31:11",
              "statements": [
                {
                  "expression": {
                    "id": 3649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3647,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3516,
                      "src": "4477:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3648,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3642,
                      "src": "4485:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4477:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3650,
                  "nodeType": "ExpressionStatement",
                  "src": "4477:14:11"
                }
              ]
            },
            "documentation": {
              "id": 3640,
              "nodeType": "StructuredDocumentation",
              "src": "4311:92:11",
              "text": " @notice Set feeTo address\n @param _feeTo Address to receive the fee"
            },
            "functionSelector": "f46901ed",
            "id": 3652,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3645,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3644,
                  "name": "onlyFeeToSetter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3552,
                  "src": "4451:15:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4451:15:11"
              }
            ],
            "name": "setFeeTo",
            "nameLocation": "4417:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3642,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "4434:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3652,
                  "src": "4426:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4426:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4425:16:11"
            },
            "returnParameters": {
              "id": 3646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4467:0:11"
            },
            "scope": 3846,
            "src": "4408:90:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3664,
              "nodeType": "Block",
              "src": "4686:43:11",
              "statements": [
                {
                  "expression": {
                    "id": 3662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3660,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3518,
                      "src": "4696:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3661,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3655,
                      "src": "4710:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4696:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3663,
                  "nodeType": "ExpressionStatement",
                  "src": "4696:26:11"
                }
              ]
            },
            "documentation": {
              "id": 3653,
              "nodeType": "StructuredDocumentation",
              "src": "4504:106:11",
              "text": " @notice Set feeToSetter address\n @param _feeToSetter Address to control the feeTo"
            },
            "functionSelector": "a2e74af6",
            "id": 3665,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3658,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3657,
                  "name": "onlyFeeToSetter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3552,
                  "src": "4670:15:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4670:15:11"
              }
            ],
            "name": "setFeeToSetter",
            "nameLocation": "4624:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3655,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "4647:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4639:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4639:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4638:22:11"
            },
            "returnParameters": {
              "id": 3659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4686:0:11"
            },
            "scope": 3846,
            "src": "4615:114:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7172
            ],
            "body": {
              "id": 3742,
              "nodeType": "Block",
              "src": "5474:767:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3682,
                              "name": "_stablecoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3670,
                              "src": "5549:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3679,
                                  "name": "policyCore",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3514,
                                  "src": "5517:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3678,
                                "name": "IPolicyCore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7576,
                                "src": "5505:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPolicyCore_$7576_$",
                                  "typeString": "type(contract IPolicyCore)"
                                }
                              },
                              "id": 3680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5505:23:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPolicyCore_$7576",
                                "typeString": "contract IPolicyCore"
                              }
                            },
                            "id": 3681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isStablecoinAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7494,
                            "src": "5505:43:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 3683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5505:56:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 3684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5565:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "5505:64:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752067697665207468652077726f6e67206f72646572206f6620706f6c696379546f6b656e20616e6420737461626c65636f696e",
                        "id": 3686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5583:56:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f",
                          "typeString": "literal_string \"You give the wrong order of policyToken and stablecoin\""
                        },
                        "value": "You give the wrong order of policyToken and stablecoin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f",
                          "typeString": "literal_string \"You give the wrong order of policyToken and stablecoin\""
                        }
                      ],
                      "id": 3677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5484:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5484:165:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3688,
                  "nodeType": "ExpressionStatement",
                  "src": "5484:165:11"
                },
                {
                  "assignments": [
                    3690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3690,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "5673:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3742,
                      "src": "5660:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3689,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5660:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3695,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3692,
                          "name": "NaughtyPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4546,
                          "src": "5689:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4546_$",
                            "typeString": "type(contract NaughtyPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4546_$",
                            "typeString": "type(contract NaughtyPair)"
                          }
                        ],
                        "id": 3691,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "5684:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5684:17:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_NaughtyPair_$4546",
                        "typeString": "type(contract NaughtyPair)"
                      }
                    },
                    "id": 3694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "5684:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5660:54:11"
                },
                {
                  "assignments": [
                    3697
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3697,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "5733:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3742,
                      "src": "5725:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3696,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5725:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3709,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 3702,
                                "name": "_policyTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3668,
                                "src": "5813:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3701,
                              "name": "addressToString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3818,
                              "src": "5797:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) pure returns (string memory)"
                              }
                            },
                            "id": 3703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5797:36:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3705,
                                "name": "_stablecoin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3670,
                                "src": "5867:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3704,
                              "name": "addressToString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3818,
                              "src": "5851:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) pure returns (string memory)"
                              }
                            },
                            "id": 3706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5851:28:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3699,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "5763:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5763:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5763:130:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3698,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "5740:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5740:163:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5725:178:11"
                },
                {
                  "assignments": [
                    3711
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3711,
                      "mutability": "mutable",
                      "name": "_poolAddress",
                      "nameLocation": "5922:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3742,
                      "src": "5914:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3710,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5914:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3716,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3713,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3690,
                        "src": "5945:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 3714,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3697,
                        "src": "5955:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3712,
                      "name": "_deploy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3797,
                      "src": "5937:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes memory,bytes32) returns (address)"
                      }
                    },
                    "id": 3715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5937:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5914:46:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3721,
                        "name": "_policyTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3668,
                        "src": "6022:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3722,
                        "name": "_stablecoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3670,
                        "src": "6055:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3723,
                        "name": "_deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3672,
                        "src": "6080:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3718,
                            "name": "_poolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3711,
                            "src": "5984:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3717,
                          "name": "INaughtyPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7281,
                          "src": "5971:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INaughtyPair_$7281_$",
                            "typeString": "type(contract INaughtyPair)"
                          }
                        },
                        "id": 3719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5971:26:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INaughtyPair_$7281",
                          "typeString": "contract INaughtyPair"
                        }
                      },
                      "id": 3720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7280,
                      "src": "5971:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5971:128:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3725,
                  "nodeType": "ExpressionStatement",
                  "src": "5971:128:11"
                },
                {
                  "expression": {
                    "id": 3732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3726,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3504,
                          "src": "6110:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 3729,
                        "indexExpression": {
                          "id": 3727,
                          "name": "_policyTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3668,
                          "src": "6118:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6110:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 3730,
                      "indexExpression": {
                        "id": 3728,
                        "name": "_stablecoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3670,
                        "src": "6139:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6110:41:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3731,
                      "name": "_poolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3711,
                      "src": "6154:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6110:56:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3733,
                  "nodeType": "ExpressionStatement",
                  "src": "6110:56:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3737,
                        "name": "_poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3711,
                        "src": "6191:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3734,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3507,
                        "src": "6177:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6177:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6177:27:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3739,
                  "nodeType": "ExpressionStatement",
                  "src": "6177:27:11"
                },
                {
                  "expression": {
                    "id": 3740,
                    "name": "_poolAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3711,
                    "src": "6222:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3676,
                  "id": 3741,
                  "nodeType": "Return",
                  "src": "6215:19:11"
                }
              ]
            },
            "documentation": {
              "id": 3666,
              "nodeType": "StructuredDocumentation",
              "src": "5033:292:11",
              "text": " @notice After deploy the policytoken and get the address,\n         we deploy the policyToken - stablecoin pool contract\n @param _policyTokenAddress: Address of policy token\n @param _stablecoin: Address of the stable coin\n @return Address of the pool"
            },
            "functionSelector": "a3232bf3",
            "id": 3743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployPool",
            "nameLocation": "5339:10:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3668,
                  "mutability": "mutable",
                  "name": "_policyTokenAddress",
                  "nameLocation": "5367:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3743,
                  "src": "5359:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5359:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3670,
                  "mutability": "mutable",
                  "name": "_stablecoin",
                  "nameLocation": "5404:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3743,
                  "src": "5396:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5396:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3672,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "5433:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3743,
                  "src": "5425:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5425:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5349:99:11"
            },
            "returnParameters": {
              "id": 3676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3675,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3743,
                  "src": "5465:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5465:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5464:9:11"
            },
            "scope": 3846,
            "src": "5330:911:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7161
            ],
            "body": {
              "id": 3784,
              "nodeType": "Block",
              "src": "6535:316:11",
              "statements": [
                {
                  "assignments": [
                    3752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3752,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "6553:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3784,
                      "src": "6545:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3751,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6545:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3759,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3756,
                            "name": "_policyTokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3746,
                            "src": "6587:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3754,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "6570:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6570:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6570:34:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3753,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "6560:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6560:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6545:60:11"
                },
                {
                  "assignments": [
                    3761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3761,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "6629:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3784,
                      "src": "6616:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3760,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6616:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3765,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3763,
                        "name": "_policyTokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3746,
                        "src": "6663:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3762,
                      "name": "getPolicyTokenBytecode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3845,
                      "src": "6640:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) view returns (bytes memory)"
                      }
                    },
                    "id": 3764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6640:40:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6616:64:11"
                },
                {
                  "assignments": [
                    3767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3767,
                      "mutability": "mutable",
                      "name": "_policTokenAddress",
                      "nameLocation": "6699:18:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3784,
                      "src": "6691:26:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3766,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6691:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3772,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3769,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3761,
                        "src": "6728:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 3770,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3752,
                        "src": "6738:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3768,
                      "name": "_deploy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3797,
                      "src": "6720:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes memory,bytes32) returns (address)"
                      }
                    },
                    "id": 3771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6720:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6691:52:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3776,
                        "name": "_policTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3767,
                        "src": "6769:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3773,
                        "name": "allTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3510,
                        "src": "6754:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6754:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6754:34:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3778,
                  "nodeType": "ExpressionStatement",
                  "src": "6754:34:11"
                },
                {
                  "expression": {
                    "id": 3780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6799:9:11",
                    "subExpression": {
                      "id": 3779,
                      "name": "_nextId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3512,
                      "src": "6799:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3781,
                  "nodeType": "ExpressionStatement",
                  "src": "6799:9:11"
                },
                {
                  "expression": {
                    "id": 3782,
                    "name": "_policTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3767,
                    "src": "6826:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3750,
                  "id": 3783,
                  "nodeType": "Return",
                  "src": "6819:25:11"
                }
              ]
            },
            "documentation": {
              "id": 3744,
              "nodeType": "StructuredDocumentation",
              "src": "6247:179:11",
              "text": " @notice For each round we need to first create the policytoken(ERC20)\n @param _policyTokenName: Name of the policyToken\n @return PolicyToken address"
            },
            "functionSelector": "f03c6132",
            "id": 3785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployPolicyToken",
            "nameLocation": "6440:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3746,
                  "mutability": "mutable",
                  "name": "_policyTokenName",
                  "nameLocation": "6472:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3785,
                  "src": "6458:30:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3745,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6458:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6457:32:11"
            },
            "returnParameters": {
              "id": 3750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3749,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3785,
                  "src": "6522:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6522:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6521:9:11"
            },
            "scope": 3846,
            "src": "6431:420:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3796,
              "nodeType": "Block",
              "src": "7019:189:11",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "7038:164:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7052:54:11",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7068:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "code",
                                  "nodeType": "YulIdentifier",
                                  "src": "7075:4:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7081:4:11",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7071:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7071:15:11"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "code",
                                  "nodeType": "YulIdentifier",
                                  "src": "7094:4:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7088:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7088:11:11"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "7101:4:11"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "7060:7:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7060:46:11"
                        },
                        "variableNames": [
                          {
                            "name": "addr",
                            "nodeType": "YulIdentifier",
                            "src": "7052:4:11"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7148:44:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7173:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7176:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7166:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7166:12:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7166:12:11"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7141:4:11"
                                }
                              ],
                              "functionName": {
                                "name": "extcodesize",
                                "nodeType": "YulIdentifier",
                                "src": "7129:11:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7129:17:11"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "7122:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7122:25:11"
                        },
                        "nodeType": "YulIf",
                        "src": "7119:73:11"
                      }
                    ]
                  },
                  "evmVersion": "constantinople",
                  "externalReferences": [
                    {
                      "declaration": 3793,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7052:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3793,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7141:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3788,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7075:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3788,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7094:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3790,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7101:4:11",
                      "valueSize": 1
                    }
                  ],
                  "id": 3795,
                  "nodeType": "InlineAssembly",
                  "src": "7029:173:11"
                }
              ]
            },
            "documentation": {
              "id": 3786,
              "nodeType": "StructuredDocumentation",
              "src": "6857:55:11",
              "text": " @notice Deploy function with create2"
            },
            "id": 3797,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deploy",
            "nameLocation": "6926:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3788,
                  "mutability": "mutable",
                  "name": "code",
                  "nameLocation": "6947:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3797,
                  "src": "6934:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3787,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6934:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3790,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "6961:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3797,
                  "src": "6953:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3789,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6953:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6933:33:11"
            },
            "returnParameters": {
              "id": 3794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3793,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "7009:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3797,
                  "src": "7001:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7001:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7000:14:11"
            },
            "scope": 3846,
            "src": "6917:291:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3817,
              "nodeType": "Block",
              "src": "7447:65:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3230",
                        "id": 3814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7502:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3809,
                                    "name": "_addr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3800,
                                    "src": "7481:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3808,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7473:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 3807,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7473:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7473:14:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 3806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7465:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 3805,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7465:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7465:23:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3812,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7464:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toHexString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1439,
                      "src": "7464:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (string memory)"
                      }
                    },
                    "id": 3815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7464:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3804,
                  "id": 3816,
                  "nodeType": "Return",
                  "src": "7457:48:11"
                }
              ]
            },
            "documentation": {
              "id": 3798,
              "nodeType": "StructuredDocumentation",
              "src": "7214:122:11",
              "text": " @notice Transfer address to string\n @param _addr: Input address\n @return Output string form"
            },
            "id": 3818,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addressToString",
            "nameLocation": "7350:15:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3800,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "7374:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3818,
                  "src": "7366:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7366:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7365:15:11"
            },
            "returnParameters": {
              "id": 3804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3803,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3818,
                  "src": "7428:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3802,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7428:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7427:15:11"
            },
            "scope": 3846,
            "src": "7341:171:11",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3844,
              "nodeType": "Block",
              "src": "7765:328:11",
              "statements": [
                {
                  "assignments": [
                    3827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3827,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "7788:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3844,
                      "src": "7775:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3826,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7775:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3832,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3829,
                          "name": "NPPolicyToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3483,
                          "src": "7804:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NPPolicyToken_$3483_$",
                            "typeString": "type(contract NPPolicyToken)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_NPPolicyToken_$3483_$",
                            "typeString": "type(contract NPPolicyToken)"
                          }
                        ],
                        "id": 3828,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "7799:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7799:19:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_NPPolicyToken_$3483",
                        "typeString": "type(contract NPPolicyToken)"
                      }
                    },
                    "id": 3831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "7799:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7775:56:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3835,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3827,
                        "src": "8000:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3838,
                            "name": "_tokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3821,
                            "src": "8037:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 3839,
                            "name": "_tokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3821,
                            "src": "8049:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 3840,
                            "name": "policyCore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3514,
                            "src": "8061:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3836,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "8026:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8026:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8026:46:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3833,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "7966:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "7966:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 3842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7966:120:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 3825,
                  "id": 3843,
                  "nodeType": "Return",
                  "src": "7947:139:11"
                }
              ]
            },
            "documentation": {
              "id": 3819,
              "nodeType": "StructuredDocumentation",
              "src": "7518:119:11",
              "text": " @notice Get the policyToken bytecode (with parameters)\n @param _tokenName: Name of policyToken"
            },
            "id": 3845,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPolicyTokenBytecode",
            "nameLocation": "7651:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3821,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nameLocation": "7688:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3845,
                  "src": "7674:24:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3820,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7674:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7673:26:11"
            },
            "returnParameters": {
              "id": 3825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3824,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3845,
                  "src": "7747:12:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3823,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7747:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7746:14:11"
            },
            "scope": 3846,
            "src": "7642:451:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3847,
        "src": "634:7461:11",
        "usedErrors": []
      }
    ],
    "src": "32:8064:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x5655dDf58776A7F3722c592b524558de55Cf2DAB",
      "transactionHash": "0x8f1396fae8aa21ac8077f3de5620d2d380840422235ee036467295a0a6f3c066"
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0xA1BE4Bd2DC828a17F77edde52c6d8bEC5B39e433",
      "transactionHash": "0x56b0c2c577ec034515e4c05919a4eb802faaa3d50ce15ced71f686b4e60e0a19"
    },
    "1639038893355": {
      "events": {},
      "links": {},
      "address": "0x03da74f13d388e887680E3CcF560FBf87f695fa9",
      "transactionHash": "0xc1477c76cf1e6675d55a7716aa148d6d0ba73ad5259804adc4669be289834a12"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-09T09:50:36.691Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Factory contract to deploy new pools periodically      Each pool(product) will have a unique naughtyId      Each pool will have its pool token      PolicyToken - Stablecoin      Token 0 may change but Token 1 is always stablecoin.",
    "kind": "dev",
    "methods": {
      "deployPolicyToken(string)": {
        "params": {
          "_policyTokenName": ": Name of the policyToken"
        },
        "returns": {
          "_0": "PolicyToken address"
        }
      },
      "deployPool(address,address,uint256)": {
        "params": {
          "_policyTokenAddress": ": Address of policy token",
          "_stablecoin": ": Address of the stable coin"
        },
        "returns": {
          "_0": "Address of the pool"
        }
      },
      "getLatestTokenAddress()": {
        "returns": {
          "_0": "Latest token address"
        }
      },
      "getPairAddress(address,address)": {
        "params": {
          "_tokenAddress1": "Address of token1",
          "_tokenAddress2": "Address of toekn2"
        },
        "returns": {
          "_0": "Pool address of the two tokens"
        }
      },
      "setFeeTo(address)": {
        "params": {
          "_feeTo": "Address to receive the fee"
        }
      },
      "setFeeToSetter(address)": {
        "params": {
          "_feeToSetter": "Address to control the feeTo"
        }
      },
      "setPolicyCoreAddress(address)": {
        "params": {
          "_policyCore": ": Address of policyCore contract"
        }
      }
    },
    "title": "Naughty Factory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deployPolicyToken(string)": {
        "notice": "For each round we need to first create the policytoken(ERC20)"
      },
      "deployPool(address,address,uint256)": {
        "notice": "After deploy the policytoken and get the address,         we deploy the policyToken - stablecoin pool contract"
      },
      "getAllPairs()": {
        "notice": "Get all pair addresses"
      },
      "getAllTokens()": {
        "notice": "Get all token addresses"
      },
      "getLatestTokenAddress()": {
        "notice": "Next token to be deployed"
      },
      "getPairAddress(address,address)": {
        "notice": "Get the pair address deployed by the factory         PolicyToken address first, and then stablecoin address         The order of the tokens will be sorted inside the function"
      },
      "setFeeTo(address)": {
        "notice": "Set feeTo address"
      },
      "setFeeToSetter(address)": {
        "notice": "Set feeToSetter address"
      },
      "setPolicyCoreAddress(address)": {
        "notice": "Remember to call this function to set the policyCore address         < PolicyCore should be the owner of policyToken >"
      }
    },
    "version": 1
  }
}