{
  "contractName": "NaughtyFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "_nextId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "policyCore",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getLatestTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress2",
          "type": "address"
        }
      ],
      "name": "getPairAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policyCore",
          "type": "address"
        }
      ],
      "name": "setPolicyCoreAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policyTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stablecoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "deployPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_policyTokenName",
          "type": "string"
        }
      ],
      "name": "deployPolicyToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_nextId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_policyTokenName\",\"type\":\"string\"}],\"name\":\"deployPolicyToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"deployPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress2\",\"type\":\"address\"}],\"name\":\"getPairAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policyCore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyCore\",\"type\":\"address\"}],\"name\":\"setPolicyCoreAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory contract to deploy new pools periodically      Each pool(product) will have a unique naughtyId      Each pool will have its pool token      PolicyToken - Stablecoin      Token 0 may change but Token 1 is always stablecoin.\",\"kind\":\"dev\",\"methods\":{\"deployPolicyToken(string)\":{\"params\":{\"_policyTokenName\":\": Name of the policyToken\"},\"returns\":{\"_0\":\"PolicyToken address\"}},\"deployPool(address,address,uint256)\":{\"params\":{\"_policyTokenAddress\":\": Address of policy token\",\"_stablecoin\":\": Address of the stable coin\"},\"returns\":{\"_0\":\"Address of the pool\"}},\"getLatestTokenAddress()\":{\"returns\":{\"_0\":\"Latest token address\"}},\"getPairAddress(address,address)\":{\"returns\":{\"_0\":\"Pool address of the two tokens\"}},\"setFeeTo(address)\":{\"params\":{\"_feeTo\":\"Address to receive the fee\"}},\"setFeeToSetter(address)\":{\"params\":{\"_feeToSetter\":\"Address to control the feeTo\"}},\"setPolicyCoreAddress(address)\":{\"params\":{\"_policyCore\":\": Address of policyCore contract\"}}},\"title\":\"Naughty Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deployPolicyToken(string)\":{\"notice\":\"For each round we need to first create the policytoken(ERC20)\"},\"deployPool(address,address,uint256)\":{\"notice\":\"After deploy the policytoken and get the address,         we deploy the policyToken - stablecoin pool contract\"},\"getLatestTokenAddress()\":{\"notice\":\"Next token to be deployed\"},\"getPairAddress(address,address)\":{\"notice\":\"Get the pair address deployed by the factory         PolicyToken address first, and then stablecoin address         The order of the token not matters\"},\"setFeeTo(address)\":{\"notice\":\"Set feeTo address\"},\"setFeeToSetter(address)\":{\"notice\":\"Set feeToSetter address\"},\"setPolicyCoreAddress(address)\":{\"notice\":\"Remember to call this function to set the policyCore address         < PolicyCore should be the owner of policyToken >\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NaughtyFactory.sol\":\"NaughtyFactory\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"prb-math/contracts/PRBMath.sol\":{\"keccak256\":\"0x62cbabae4910e168e99b9c2c3e3b5c9c7ad5e7abd961dcc63b7ea3d83d8ea87e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4b964fe2e49911c7b4b3c2ce230f606fd0ce8b7edc9dc7d0145ba2fb76bf2e71\",\"dweb:/ipfs/QmcEfVW9EfV3JCYavF1L3LxtqivHXWFTtWpkwNEsgzxG1r\"]},\"project:/contracts/NaughtyFactory.sol\":{\"keccak256\":\"0x56ba4c66c552631079ab214498bda749498ab771713c08345e6622448e5e8447\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b18687dda003f85806ca03b6002650560de4e6dc9373900d3065ceec09b1ef65\",\"dweb:/ipfs/QmRQtJEtXn1jtG6MRnNzPinEkRGuAd3DAVAzzwBqJyfzTZ\"]},\"project:/contracts/NaughtyPair.sol\":{\"keccak256\":\"0xb53418f1efc279d1a9e4d2bfc9589cb4ff87b1b27cf5fb02212bad8991af1a6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://805a195f729afe26db423d701a9c1a11e03f3ad8ad62a1ebb409ecb0c8a000be\",\"dweb:/ipfs/QmTvr3cpYBEwLhYLThroX9cVbwgSRxZZqzTxZeaJFrWY7X\"]},\"project:/contracts/PolicyToken.sol\":{\"keccak256\":\"0x49f251e127e101842a8bbf8ecdaa90728667f231ccd95390d16fc7ac8f9fe748\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d5fdfb2c12998137a9db67f6edcd779511dc44f068167968c35bcf297d57a5b\",\"dweb:/ipfs/QmU5zbnykk1CU9xpGEaYh96FhFwCWrmAj6hHReTmbkwSfA\"]},\"project:/contracts/PoolLPToken.sol\":{\"keccak256\":\"0xd82b81983292d398fb5e48a1c820e1e66fe6f92c6032d9e9e590c5d0d7cb5587\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e059bc862ee9d765b78148d047c4e56099d0afee7ccbd01f25b5956715392c5f\",\"dweb:/ipfs/QmXc2fpixNTyTQUC61K871VKGXBiTTmWWuhY2wMv9Q8VaJ\"]},\"project:/contracts/interfaces/INaughtyFactory.sol\":{\"keccak256\":\"0x22300ccfc1522eea03107917fa6ffa2513fe93d9f079c646152968a328b826b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e147946583ed683ea67ac7e7a1883eec837f3a59a5bea7440995b1a123b3d5b8\",\"dweb:/ipfs/QmQWepPjcPwotYeBDuTVFtDgLMJXyj3EcppS9P2jnpRH4T\"]},\"project:/contracts/interfaces/INaughtyPair.sol\":{\"keccak256\":\"0x17162361dda9660e07e2a4fb121dc1645373ba980b1fb0da45420bb9f7fa50ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0abd36985b201effbf459035a15d57646d8a2278a43d5aaf6090e7e702475a\",\"dweb:/ipfs/QmX7PrrW4m4CST2hE9QxAUALSUg8MQRQKHCuvGJzERMP9X\"]},\"project:/contracts/interfaces/IPolicyCore.sol\":{\"keccak256\":\"0x0e2bf09eba702214e0c007ad930d246820e6bd1d8237fa0413c5911fa15b61fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f54b17152d038ee9ce00eb5e6819ce5c6965d9fd73a427dd47e9d5fad3edd1\",\"dweb:/ipfs/QmW7SVo3PbVKJ2Ryq5VK1d53W5UXpvLK8e9eXphBkWY24M\"]},\"project:/contracts/interfaces/IPolicyToken.sol\":{\"keccak256\":\"0xbd272c9f6a2024dc41a21fa0dae28e2b9288c3431f2f0cb8bb59a4841f4f876f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ee5c16af597427e360762904547d5e91d35bcaaa5e206470cff3d6fcc98da69\",\"dweb:/ipfs/QmZN7d1oatiZ3HYXWCAnhddK1gtQRLfn59VuXgcqZ6agnL\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051613fba380380613fba83398101604081905261002f91610054565b600680546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b613f27806100936000396000f3fe60806040523480156200001157600080fd5b5060043610620000b75760003560e01c8063a3232bf3116200007a578063a3232bf31462000157578063b4f69a2f146200016e578063e30145e01462000185578063f03c61321462000199578063f2f2fff514620001b0578063f46901ed14620001c957600080fd5b8063017e7e5814620000bc578063094b741514620000ed57806361c8f99d14620001015780639fd2650e1462000136578063a2e74af61462000140575b600080fd5b600554620000d0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600654620000d0906001600160a01b031681565b620001346200011236600462000961565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b005b620000d0620001e0565b620001346200015136600462000961565b62000227565b620000d0620001683660046200097f565b6200027f565b620000d06200017f366004620009c0565b620004de565b600454620000d0906001600160a01b031681565b620000d0620001aa36600462000a0e565b620005a8565b620001ba60035481565b604051908152602001620000e4565b62000134620001da36600462000961565b6200065e565b6000806001600354620001f4919062000adf565b9050600281815481106200020c576200020c62000af9565b6000918252602090912001546001600160a01b031692915050565b6006546001600160a01b031633146200025d5760405162461bcd60e51b8152600401620002549062000b0f565b60405180910390fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6004805460405163237dd6ed60e11b81526001600160a01b0385811693820193909352600092909116906346fbadda9060240160206040518083038186803b158015620002cb57600080fd5b505afa158015620002e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000306919062000b56565b1515600114620003785760405162461bcd60e51b815260206004820152603660248201527f596f752067697665207468652077726f6e67206f72646572206f6620706f6c6960448201527531bcaa37b5b2b71030b7321039ba30b13632b1b7b4b760511b606482015260840162000254565b6000604051806020016200038c9062000928565b601f1982820381018352601f9091011660405290506000620003ae86620006ad565b620003b986620006ad565b604051602001620003cc92919062000bad565b6040516020818303038152906040528051906020012090506000620003f28383620006c5565b6040516305e52ecf60e21b81526001600160a01b03898116600483015288811660248301526044820188905291925090821690631794bb3c90606401600060405180830381600087803b1580156200044957600080fd5b505af11580156200045e573d6000803e3d6000fd5b5050506001600160a01b038089166000908152602081815260408083208b85168452909152812080549285166001600160a01b0319938416811790915560018054808201825592527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6909101805490921617905550925050509392505050565b6004805460405163237dd6ed60e11b81526001600160a01b0384811693820193909352600092839283929116906346fbadda9060240160206040518083038186803b1580156200052d57600080fd5b505afa15801562000542573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000568919062000b56565b6200057557838562000578565b84845b6001600160a01b039182166000908152602081815260408083209385168352929052205416925050505b92915050565b60008082604051602001620005be919062000be0565b6040516020818303038152906040528051906020012090506000620005e384620006df565b90506000620005f38284620006c5565b6002805460018101825560009182527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384161790556003805492935090620006508362000bfe565b909155509095945050505050565b6006546001600160a01b031633146200068b5760405162461bcd60e51b8152600401620002549062000b0f565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6060620005a26001600160a01b038316601462000767565b6000818351602085016000f59050803b620005a257600080fd5b6060600060405180602001620006f59062000936565b601f1982820381018352601f90910116604081905260045491925082916200073091869182916001600160a01b039091169060200162000c4a565b60408051601f198184030181529082905262000750929160200162000bad565b604051602081830303815290604052915050919050565b606060006200077883600262000c8c565b6200078590600262000cae565b67ffffffffffffffff811115620007a057620007a0620009f8565b6040519080825280601f01601f191660200182016040528015620007cb576020820181803683370190505b509050600360fc1b81600081518110620007e957620007e962000af9565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106200081b576200081b62000af9565b60200101906001600160f81b031916908160001a90535060006200084184600262000c8c565b6200084e90600162000cae565b90505b6001811115620008d0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811062000886576200088662000af9565b1a60f81b8282815181106200089f576200089f62000af9565b60200101906001600160f81b031916908160001a90535060049490941c93620008c88162000cc9565b905062000851565b508315620009215760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640162000254565b9392505050565b6121a98062000ce483390190565b6110658062002e8d83390190565b80356001600160a01b03811681146200095c57600080fd5b919050565b6000602082840312156200097457600080fd5b620009218262000944565b6000806000606084860312156200099557600080fd5b620009a08462000944565b9250620009b06020850162000944565b9150604084013590509250925092565b60008060408385031215620009d457600080fd5b620009df8362000944565b9150620009ef6020840162000944565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121562000a2157600080fd5b813567ffffffffffffffff8082111562000a3a57600080fd5b818401915084601f83011262000a4f57600080fd5b81358181111562000a645762000a64620009f8565b604051601f8201601f19908116603f0116810190838211818310171562000a8f5762000a8f620009f8565b8160405282815287602084870101111562000aa957600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052601160045260246000fd5b60008282101562000af45762000af462000ac9565b500390565b634e487b7160e01b600052603260045260246000fd5b60208082526027908201527f4f6e6c7920666565546f5365747465722063616e2063616c6c207468697320666040820152663ab731ba34b7b760c91b606082015260800190565b60006020828403121562000b6957600080fd5b815180151581146200092157600080fd5b60005b8381101562000b9757818101518382015260200162000b7d565b8381111562000ba7576000848401525b50505050565b6000835162000bc181846020880162000b7a565b83519083019062000bd781836020880162000b7a565b01949350505050565b6000825162000bf481846020870162000b7a565b9190910192915050565b600060001982141562000c155762000c1562000ac9565b5060010190565b6000815180845262000c3681602086016020860162000b7a565b601f01601f19169290920160200192915050565b60608152600062000c5f606083018662000c1c565b828103602084015262000c73818662000c1c565b91505060018060a01b0383166040830152949350505050565b600081600019048311821515161562000ca95762000ca962000ac9565b500290565b6000821982111562000cc45762000cc462000ac9565b500190565b60008162000cdb5762000cdb62000ac9565b50600019019056fe60806040526008805460ff60e01b19167c01000000000000000000000000000000000000000000000000000000001790553480156200003d57600080fd5b506040518060400160405280600f81526020017f4e61756768747920506f6f6c204c5000000000000000000000000000000000008152506040518060400160405280600381526020017f4e4c5000000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000c2929190620000f3565b508051620000d8906004906020840190620000f3565b5050600580546001600160a01b0319163317905550620001ef565b828054620001019062000199565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600181811c90821680620001ae57607f821691505b60208210811415620001e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b611faa80620001ff6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80636a627842116100de578063a9059cbb11610097578063d21220a711610071578063d21220a714610389578063dd62ed3e1461039c578063f952f01a146102ee578063fff6cae9146103d557600080fd5b8063a9059cbb1461035a578063ba9a7a561461036d578063c45a01551461037657600080fd5b80636a627842146102c85780636d9a640a146102db57806370a08231146102ee57806389afcb441461031757806395d89b411461033f578063a457c2d71461034757600080fd5b806323b872dd1161014b5780633950935111610125578063395093511461027b5780633c756e141461028e578063570c7c39146102a15780636a5e2650146102b457600080fd5b806323b872dd1461025057806329dcb0cf14610263578063313ce5671461026c57600080fd5b806306fdde03146101935780630902f1ac146101b1578063095ea7b3146101db5780630dfe1681146101fe5780631794bb3c1461022957806318160ddd1461023e575b600080fd5b61019b6103dd565b6040516101a89190611cee565b60405180910390f35b600854604080516001600160701b038084168252600160701b9093049092166020830152016101a8565b6101ee6101e9366004611d3d565b61046f565b60405190151581526020016101a8565b600654610211906001600160a01b031681565b6040516001600160a01b0390911681526020016101a8565b61023c610237366004611d67565b610485565b005b6002545b6040519081526020016101a8565b6101ee61025e366004611d67565b610531565b61024260095481565b604051601281526020016101a8565b6101ee610289366004611d3d565b6105dd565b61023c61029c366004611d3d565b610619565b61023c6102af366004611d3d565b610627565b6008546101ee90600160e01b900460ff1681565b6102426102d6366004611da3565b610631565b61023c6102e9366004611dbe565b6108bf565b6102426102fc366004611da3565b6001600160a01b031660009081526020819052604090205490565b61032a610325366004611da3565b610da5565b604080519283526020830191909152016101a8565b61019b611126565b6101ee610355366004611d3d565b611135565b6101ee610368366004611d3d565b6111ce565b6102426103e881565b600554610211906001600160a01b031681565b600754610211906001600160a01b031681565b6102426103aa366004611df3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61023c6111db565b6060600380546103ec90611e26565b80601f016020809104026020016040519081016040528092919081815260200182805461041890611e26565b80156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b600061047c338484611328565b50600192915050565b6005546001600160a01b031633146104fc5760405162461bcd60e51b815260206004820152602f60248201527f63616e206f6e6c7920626520696e697469616c697a656420627920746865206660448201526e1858dd1bdc9e4818dbdb9d1c9858dd608a1b60648201526084015b60405180910390fd5b600680546001600160a01b039485166001600160a01b0319918216179091556007805493909416921691909117909155600955565b600061053e84848461144d565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105c35760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084016104f3565b6105d08533858403611328565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161047c918590610614908690611e77565b611328565b610623828261161d565b5050565b6106238282611768565b60008060006106546008546001600160701b0380821692600160701b9092041690565b6006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156106a057600080fd5b505afa1580156106b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d89190611e8f565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561072157600080fd5b505afa158015610735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107599190611e8f565b905060006107706001600160701b03861684611ea8565b905060006107876001600160701b03861684611ea8565b9050600061079460025490565b9050806107cd576103e86107b06107ab8486611ebf565b611847565b6107ba9190611ea8565b97506107c8306103e8610627565b610814565b6108116001600160701b0388166107e48386611ebf565b6107ee9190611ef4565b6001600160701b0388166108028486611ebf565b61080c9190611ef4565b6119c2565b97505b600088116108645760405162461bcd60e51b815260206004820152601d60248201527f696e73756666696369656e74206c6971756964697479206d696e74656400000060448201526064016104f3565b61086e8989610627565b61087885856119d8565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250505050505050919050565b6009544211156109115760405162461bcd60e51b815260206004820152601b60248201527f43616e206e6f74207377617020616674657220646561646c696e65000000000060448201526064016104f3565b600854600160e01b900460ff16151560011461093f5760405162461bcd60e51b81526004016104f390611f16565b6008805460ff60e01b191690558215158061095a5750600082115b6109a65760405162461bcd60e51b815260206004820152601b60248201527f4f757470757420616d6f756e74206e65656420746f206265203e30000000000060448201526064016104f3565b6000806109c76008546001600160701b0380821692600160701b9092041690565b6001600160701b031691506001600160701b0316915081851080156109eb57508084105b610a2e5760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b60448201526064016104f3565b60065460075460009182916001600160a01b03918216919081169087168214801590610a6c5750806001600160a01b0316876001600160a01b031614155b610aa55760405162461bcd60e51b815260206004820152600a602482015269494e56414c49445f544f60b01b60448201526064016104f3565b8815610abf57610abf6001600160a01b038316888b611aaa565b8715610ad957610ad96001600160a01b038216888a611aaa565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015610b1857600080fd5b505afa158015610b2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b509190611e8f565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a082319060240160206040518083038186803b158015610b9257600080fd5b505afa158015610ba6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bca9190611e8f565b9250505060008785610bdc9190611ea8565b8311610be9576000610bfd565b610bf38886611ea8565b610bfd9084611ea8565b90506000610c0b8886611ea8565b8311610c18576000610c2c565b610c228886611ea8565b610c2c9084611ea8565b90506000821180610c3d5750600081115b610c895760405162461bcd60e51b815260206004820152601960248201527f494e53554646494349454e545f494e5055545f414d4f554e540000000000000060448201526064016104f3565b6000610c96836014611ebf565b610ca2866103e8611ebf565b610cac9190611ea8565b90506000610cbb836014611ebf565b610cc7866103e8611ebf565b610cd19190611ea8565b9050610cdd8789611ebf565b610cea90620f4240611ebf565b610cf48284611ebf565b1015610d265760405162461bcd60e51b81526020600482015260016024820152604b60f81b60448201526064016104f3565b5050610d3284846119d8565b60408051838152602081018390529081018a9052606081018990526001600160a01b0388169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506008805460ff60e01b1916600160e01b17905550505050505050565b6000806008601c9054906101000a900460ff1615156001151514610ddb5760405162461bcd60e51b81526004016104f390611f16565b6008805460ff60e01b191690556006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610e2c57600080fd5b505afa158015610e40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e649190611e8f565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610ead57600080fd5b505afa158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee59190611e8f565b306000908152602081905260409020546002549192509080610f078584611ebf565b610f119190611ef4565b955080610f1e8484611ebf565b610f289190611ef4565b9450600086118015610f3a5750600085115b610f865760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e74206c6971756964697479206275726e656400000060448201526064016104f3565b610f903083610619565b600654610fa7906001600160a01b03168888611aaa565b600754610fbe906001600160a01b03168887611aaa565b6006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561100157600080fd5b505afa158015611015573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110399190611e8f565b6007546040516370a0823160e01b81523060048201529195506001600160a01b0316906370a082319060240160206040518083038186803b15801561107d57600080fd5b505afa158015611091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b59190611e8f565b92506110c184846119d8565b60408051878152602081018790526001600160a01b0389169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a350506008805460ff60e01b1916600160e01b1790555091939092509050565b6060600480546103ec90611e26565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156111b75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104f3565b6111c43385858403611328565b5060019392505050565b600061047c33848461144d565b600854600160e01b900460ff1615156001146112095760405162461bcd60e51b81526004016104f390611f16565b6008805460ff60e01b191690556006546040516370a0823160e01b8152306004820152611313916001600160a01b0316906370a082319060240160206040518083038186803b15801561125b57600080fd5b505afa15801561126f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112939190611e8f565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156112d657600080fd5b505afa1580156112ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130e9190611e8f565b6119d8565b6008805460ff60e01b1916600160e01b179055565b6001600160a01b03831661138a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104f3565b6001600160a01b0382166113eb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104f3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166114b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104f3565b6001600160a01b0382166115135760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104f3565b6001600160a01b0383166000908152602081905260409020548181101561158b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104f3565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906115c2908490611e77565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161160e91815260200190565b60405180910390a35b50505050565b6001600160a01b03821661167d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104f3565b6001600160a01b038216600090815260208190526040902054818110156116f15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104f3565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611720908490611ea8565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611440565b505050565b6001600160a01b0382166117be5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104f3565b80600260008282546117d09190611e77565b90915550506001600160a01b038216600090815260208190526040812080548392906117fd908490611e77565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60008161185657506000919050565b50600181600160801b81106118705760409190911b9060801c5b68010000000000000000811061188b5760209190911b9060401c5b64010000000081106118a25760109190911b9060201c5b6201000081106118b75760089190911b9060101c5b61010081106118cb5760049190911b9060081c5b601081106118de5760029190911b9060041c5b600881106118ee57600182901b91505b60018284816118ff576118ff611ede565b048301901c9150600182848161191757611917611ede565b048301901c9150600182848161192f5761192f611ede565b048301901c9150600182848161194757611947611ede565b048301901c9150600182848161195f5761195f611ede565b048301901c9150600182848161197757611977611ede565b048301901c9150600182848161198f5761198f611ede565b048301901c915060008284816119a7576119a7611ede565b049050808310156119b857826119ba565b805b949350505050565b60008183106119d157816105d6565b5090919050565b6001600160701b038083118015906119f95750806001600160701b03168211155b611a385760405162461bcd60e51b815260206004820152601060248201526f55696e74313132204f564552464c4f5760801b60448201526064016104f3565b600880546001600160701b03848116600160701b9081026001600160e01b0319909316878316179290921792839055604080518483168152929093041660208201527f32dc813d3f262a05478ad1165d5701040e411d9a6e1684c8c2da1c8e6f3b8022910160405180910390a1505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261176392869291600091611b3a918516908490611bb7565b8051909150156117635780806020019051810190611b589190611f36565b6117635760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104f3565b60606119ba848460008585843b611c105760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f3565b600080866001600160a01b03168587604051611c2c9190611f58565b60006040518083038185875af1925050503d8060008114611c69576040519150601f19603f3d011682016040523d82523d6000602084013e611c6e565b606091505b5091509150611c7e828286611c89565b979650505050505050565b60608315611c985750816105d6565b825115611ca85782518084602001fd5b8160405162461bcd60e51b81526004016104f39190611cee565b60005b83811015611cdd578181015183820152602001611cc5565b838111156116175750506000910152565b6020815260008251806020840152611d0d816040850160208701611cc2565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611d3857600080fd5b919050565b60008060408385031215611d5057600080fd5b611d5983611d21565b946020939093013593505050565b600080600060608486031215611d7c57600080fd5b611d8584611d21565b9250611d9360208501611d21565b9150604084013590509250925092565b600060208284031215611db557600080fd5b6105d682611d21565b600080600060608486031215611dd357600080fd5b8335925060208401359150611dea60408501611d21565b90509250925092565b60008060408385031215611e0657600080fd5b611e0f83611d21565b9150611e1d60208401611d21565b90509250929050565b600181811c90821680611e3a57607f821691505b60208210811415611e5b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611e8a57611e8a611e61565b500190565b600060208284031215611ea157600080fd5b5051919050565b600082821015611eba57611eba611e61565b500390565b6000816000190483118215151615611ed957611ed9611e61565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611f1157634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600690820152651313d0d2d15160d21b604082015260600190565b600060208284031215611f4857600080fd5b815180151581146105d657600080fd5b60008251611f6a818460208701611cc2565b919091019291505056fea26469706673582212202887d1d1912c2d00c8a75484265e2d6b9ad4438189f71b452b46e94702ea0d6464736f6c6343000809003360806040523480156200001157600080fd5b506040516200106538038062001065833981016040819052620000349162000226565b8251839083906200004d9060039060208501906200009a565b508051620000639060049060208401906200009a565b5050600580546001600160a01b039093166001600160a01b0319938416811790915560068054909316179091555062000309915050565b828054620000a890620002b3565b90600052602060002090601f016020900481019282620000cc576000855562000117565b82601f10620000e757805160ff191683800117855562000117565b8280016001018555821562000117579182015b8281111562000117578251825591602001919060010190620000fa565b506200012592915062000129565b5090565b5b808211156200012557600081556001016200012a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126200018157600080fd5b81516001600160401b03808211156200019e576200019e62000140565b604051601f8301601f19908116603f01168101908282118183101715620001c957620001c962000140565b81604052838152602092508683858801011115620001e657600080fd5b600091505b838210156200020a5785820183015181830184015290820190620001eb565b838211156200021c5760008385830101525b9695505050505050565b6000806000606084860312156200023c57600080fd5b83516001600160401b03808211156200025457600080fd5b62000262878388016200016f565b945060208601519150808211156200027957600080fd5b5062000288868287016200016f565b604086015190935090506001600160a01b0381168114620002a857600080fd5b809150509250925092565b600181811c90821680620002c857607f821691505b6020821081141562000303577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b610d4c80620003196000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610224578063a9059cbb14610237578063d7fc5b151461024a578063dd62ed3e1461025d57600080fd5b806370a08231146101cd5780638da5cb5b146101f657806395d89b41146102095780639dc29fac1461021157600080fd5b806323b872dd116100d357806323b872dd14610183578063313ce5671461019657806339509351146101a557806340c10f19146101b857600080fd5b806306fdde03146101055780630754617214610123578063095ea7b31461014e57806318160ddd14610171575b600080fd5b61010d610296565b60405161011a9190610b28565b60405180910390f35b600654610136906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61016161015c366004610b99565b610328565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610161610191366004610bc3565b61033e565b6040516012815260200161011a565b6101616101b3366004610b99565b6103ed565b6101cb6101c6366004610b99565b610429565b005b6101756101db366004610bff565b6001600160a01b031660009081526020819052604090205490565b600554610136906001600160a01b031681565b61010d610461565b6101cb61021f366004610b99565b610470565b610161610232366004610b99565b6104a4565b610161610245366004610b99565b61053d565b6101cb610258366004610bff565b61054a565b61017561026b366004610c21565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102a590610c54565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190610c54565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050505050905090565b600061033533848461060f565b50600192915050565b600061034b848484610734565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103d55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103e2853385840361060f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610335918590610424908690610ca5565b61060f565b6006546001600160a01b031633146104535760405162461bcd60e51b81526004016103cc90610cbd565b61045d8282610903565b5050565b6060600480546102a590610c54565b6006546001600160a01b0316331461049a5760405162461bcd60e51b81526004016103cc90610cbd565b61045d82826109e2565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105265760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103cc565b610533338585840361060f565b5060019392505050565b6000610335338484610734565b6005546001600160a01b031633146105ae5760405162461bcd60e51b815260206004820152602160248201527f6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b60648201526084016103cc565b600680546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f7d18367aacbd671e57a27b568d6e1afbcc4c28b30a1b898aacf1e3a4b7d19cd1910160405180910390a15050565b6001600160a01b0383166106715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103cc565b6001600160a01b0382166106d25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103cc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166107985760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103cc565b6001600160a01b0382166107fa5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103cc565b6001600160a01b038316600090815260208190526040902054818110156108725760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103cc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108a9908490610ca5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108f591815260200190565b60405180910390a350505050565b6001600160a01b0382166109595760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103cc565b806002600082825461096b9190610ca5565b90915550506001600160a01b03821660009081526020819052604081208054839290610998908490610ca5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610a425760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103cc565b6001600160a01b03821660009081526020819052604090205481811015610ab65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103cc565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ae5908490610cff565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610727565b600060208083528351808285015260005b81811015610b5557858101830151858201604001528201610b39565b81811115610b67576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b9457600080fd5b919050565b60008060408385031215610bac57600080fd5b610bb583610b7d565b946020939093013593505050565b600080600060608486031215610bd857600080fd5b610be184610b7d565b9250610bef60208501610b7d565b9150604084013590509250925092565b600060208284031215610c1157600080fd5b610c1a82610b7d565b9392505050565b60008060408385031215610c3457600080fd5b610c3d83610b7d565b9150610c4b60208401610b7d565b90509250929050565b600181811c90821680610c6857607f821691505b60208210811415610c8957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610cb857610cb8610c8f565b500190565b60208082526022908201527f6f6e6c79206d696e7465722063616e2063616c6c20746869732066756e63746960408201526137b760f11b606082015260800190565b600082821015610d1157610d11610c8f565b50039056fea26469706673582212205f3c339cae5c66f6fbb7a19f873964ffa658c14b91ae392aa9f6836b7858224664736f6c63430008090033a2646970667358221220fbbdb041d1faf6b3ce33b62977f3160aa6e6ea5e959260bc75de27eaeb3eea5764736f6c63430008090033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:28",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:28",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:28"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:28"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:28"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:28"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:28"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:28"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:28"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:28"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:28",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:28"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:28",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:28",
                "type": ""
              }
            ],
            "src": "14:290:28"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 28,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7500:28",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:28",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:28",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:28"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:28"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:28"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:28",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:28",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:28"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:28"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:28",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:28",
                "type": ""
              }
            ],
            "src": "14:203:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "271:124:28",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "281:29:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "303:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "290:12:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "290:20:28"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "281:5:28"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "373:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "382:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "385:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "375:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "375:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "375:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "332:5:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "343:5:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "358:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "363:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "354:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "354:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "367:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "350:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "350:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "339:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "339:31:28"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "329:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "329:42:28"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "322:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "322:50:28"
                  },
                  "nodeType": "YulIf",
                  "src": "319:70:28"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "250:6:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "261:5:28",
                "type": ""
              }
            ],
            "src": "222:173:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:116:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "516:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "528:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "518:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "518:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "518:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "491:7:28"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "500:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "487:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "487:23:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "512:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "483:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:32:28"
                  },
                  "nodeType": "YulIf",
                  "src": "480:52:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "541:39:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "570:9:28"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "551:18:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:29:28"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "541:6:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "436:9:28",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "447:7:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "459:6:28",
                "type": ""
              }
            ],
            "src": "400:186:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "695:224:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "741:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "750:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "753:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "743:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "743:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "743:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "716:7:28"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "725:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "712:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "712:23:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "737:2:28",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "708:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "708:32:28"
                  },
                  "nodeType": "YulIf",
                  "src": "705:52:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "766:39:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "795:9:28"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "776:18:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:29:28"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "766:6:28"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "814:48:28",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "847:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "858:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "843:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "843:18:28"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "824:18:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:38:28"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "814:6:28"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "871:42:28",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "898:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "909:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "894:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "894:18:28"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "881:12:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "881:32:28"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "871:6:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "645:9:28",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "656:7:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "668:6:28",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "676:6:28",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "684:6:28",
                "type": ""
              }
            ],
            "src": "591:328:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1011:173:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1057:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1066:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1069:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1059:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1059:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1059:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1032:7:28"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1041:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1028:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1028:23:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1053:2:28",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1024:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1024:32:28"
                  },
                  "nodeType": "YulIf",
                  "src": "1021:52:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1082:39:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1111:9:28"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1092:18:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1092:29:28"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1082:6:28"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1130:48:28",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1163:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1174:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1159:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1159:18:28"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1140:18:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1140:38:28"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "969:9:28",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "980:7:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "992:6:28",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1000:6:28",
                "type": ""
              }
            ],
            "src": "924:260:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1221:95:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1238:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1245:3:28",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1250:10:28",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1241:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1241:20:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1231:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:31:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1231:31:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1278:1:28",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1281:4:28",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1271:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1271:15:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1271:15:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1302:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1305:4:28",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1295:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1295:15:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1295:15:28"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1189:127:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1401:842:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1447:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1456:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1459:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1449:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1449:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1449:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1422:7:28"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1431:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1418:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1418:23:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1443:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1414:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1414:32:28"
                  },
                  "nodeType": "YulIf",
                  "src": "1411:52:28"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1472:37:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1499:9:28"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1486:12:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1486:23:28"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1476:6:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1518:28:28",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1528:18:28",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1522:2:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1573:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1582:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1585:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1575:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1575:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1575:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1561:6:28"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1569:2:28"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1558:2:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1558:14:28"
                  },
                  "nodeType": "YulIf",
                  "src": "1555:34:28"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1598:32:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1612:9:28"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1623:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1608:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1608:22:28"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1602:2:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1678:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1687:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1690:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1680:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1680:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1680:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1657:2:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1661:4:28",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1653:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1653:13:28"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1668:7:28"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1649:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1649:27:28"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1642:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1642:35:28"
                  },
                  "nodeType": "YulIf",
                  "src": "1639:55:28"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1703:26:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1726:2:28"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1713:12:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1713:16:28"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1707:2:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1752:22:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1754:16:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1754:18:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1754:18:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1744:2:28"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1748:2:28"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1741:2:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1741:10:28"
                  },
                  "nodeType": "YulIf",
                  "src": "1738:36:28"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1783:17:28",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1797:2:28",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1793:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1793:7:28"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1787:2:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1809:23:28",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1829:2:28",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1823:5:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1823:9:28"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1813:6:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1841:71:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1863:6:28"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1887:2:28"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1891:4:28",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1883:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1883:13:28"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1898:2:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1879:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1879:22:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1903:2:28",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1875:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1875:31:28"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1908:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1871:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1871:40:28"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1859:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1859:53:28"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1845:10:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1971:22:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1973:16:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1973:18:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1973:18:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1930:10:28"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1942:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1927:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1927:18:28"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1950:10:28"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1962:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1947:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1947:22:28"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1924:2:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1924:46:28"
                  },
                  "nodeType": "YulIf",
                  "src": "1921:72:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2009:2:28",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2013:10:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2002:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2002:22:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2002:22:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2040:6:28"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2048:2:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2033:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2033:18:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2033:18:28"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2097:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2106:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2109:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2099:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2099:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2099:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2074:2:28"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2078:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2070:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2070:11:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2083:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2066:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2066:20:28"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2088:7:28"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2063:2:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2063:33:28"
                  },
                  "nodeType": "YulIf",
                  "src": "2060:53:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2139:6:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2147:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2135:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2135:15:28"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2156:2:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2160:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2152:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2152:11:28"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2165:2:28"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2122:12:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2122:46:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2122:46:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2192:6:28"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2200:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2188:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2188:15:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2205:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2184:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2184:24:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2210:1:28",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2177:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2177:35:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2177:35:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2221:16:28",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2231:6:28"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2221:6:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1367:9:28",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1378:7:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1390:6:28",
                "type": ""
              }
            ],
            "src": "1321:922:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2349:76:28",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2359:26:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2371:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2382:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2367:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:18:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2359:4:28"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2401:9:28"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2412:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2394:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2394:25:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2394:25:28"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2318:9:28",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2329:6:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2340:4:28",
                "type": ""
              }
            ],
            "src": "2248:177:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2462:95:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2479:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2486:3:28",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2491:10:28",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2482:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2482:20:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2472:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2472:31:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2472:31:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2519:1:28",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2522:4:28",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2512:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2512:15:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2512:15:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2543:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2546:4:28",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2536:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2536:15:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2536:15:28"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2430:127:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2611:76:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2633:22:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2635:16:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2635:18:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2635:18:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2627:1:28"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2630:1:28"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2624:2:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2624:8:28"
                  },
                  "nodeType": "YulIf",
                  "src": "2621:34:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2664:17:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2676:1:28"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2679:1:28"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2672:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2672:9:28"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "2664:4:28"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2593:1:28",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2596:1:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "2602:4:28",
                "type": ""
              }
            ],
            "src": "2562:125:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2724:95:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2741:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2748:3:28",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2753:10:28",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2744:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2744:20:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2734:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2734:31:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2734:31:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2781:1:28",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2784:4:28",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2774:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2774:15:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2774:15:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2805:1:28",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2808:4:28",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2798:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2798:15:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2798:15:28"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "2692:127:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2998:229:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3015:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3026:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3008:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3008:21:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3008:21:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3049:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3060:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3045:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3045:18:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3065:2:28",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3038:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3038:30:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3038:30:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3088:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3099:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3084:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3084:18:28"
                      },
                      {
                        "hexValue": "4f6e6c7920666565546f5365747465722063616e2063616c6c20746869732066",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3104:34:28",
                        "type": "",
                        "value": "Only feeToSetter can call this f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3077:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3077:62:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3077:62:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3159:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3170:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3155:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3155:18:28"
                      },
                      {
                        "hexValue": "756e6374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3175:9:28",
                        "type": "",
                        "value": "unction"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3148:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3148:37:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3148:37:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3194:27:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3206:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3217:3:28",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3202:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3202:19:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3194:4:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2975:9:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2989:4:28",
                "type": ""
              }
            ],
            "src": "2824:403:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3310:199:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3356:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3365:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3368:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3358:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3358:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3358:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3331:7:28"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3340:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3327:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3327:23:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3352:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3323:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3323:32:28"
                  },
                  "nodeType": "YulIf",
                  "src": "3320:52:28"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3381:29:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3400:9:28"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3394:5:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3394:16:28"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3385:5:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3463:16:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3472:1:28",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3475:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3465:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3465:12:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3465:12:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3432:5:28"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3453:5:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3446:6:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3446:13:28"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3439:6:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3439:21:28"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3429:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3429:32:28"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3422:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3422:40:28"
                  },
                  "nodeType": "YulIf",
                  "src": "3419:60:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3488:15:28",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3498:5:28"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3488:6:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3276:9:28",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3287:7:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3299:6:28",
                "type": ""
              }
            ],
            "src": "3232:277:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3688:244:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3705:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3716:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3698:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3698:21:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3698:21:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3739:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3750:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3735:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3735:18:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3755:2:28",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3728:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3728:30:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3728:30:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3778:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3789:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3774:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3774:18:28"
                      },
                      {
                        "hexValue": "596f752067697665207468652077726f6e67206f72646572206f6620706f6c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3794:34:28",
                        "type": "",
                        "value": "You give the wrong order of poli"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3767:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3767:62:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3767:62:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3849:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3860:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3845:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3845:18:28"
                      },
                      {
                        "hexValue": "6379546f6b656e20616e6420737461626c65636f696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3865:24:28",
                        "type": "",
                        "value": "cyToken and stablecoin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3838:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3838:52:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3838:52:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3899:27:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3911:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3922:3:28",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3907:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3907:19:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3899:4:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3665:9:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3679:4:28",
                "type": ""
              }
            ],
            "src": "3514:418:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3990:205:28",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4000:10:28",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4009:1:28",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4004:1:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4069:63:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4094:3:28"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "4099:1:28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4090:3:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4090:11:28"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "4113:3:28"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4118:1:28"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4109:3:28"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4109:11:28"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4103:5:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4103:18:28"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4083:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4083:39:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4083:39:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4030:1:28"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4033:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4027:2:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4027:13:28"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4041:19:28",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4043:15:28",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4052:1:28"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4055:2:28",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4048:3:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4048:10:28"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4043:1:28"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4023:3:28",
                    "statements": []
                  },
                  "src": "4019:113:28"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4158:31:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "4171:3:28"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4176:6:28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4167:3:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4167:16:28"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4185:1:28",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4160:6:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4160:27:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4160:27:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4147:1:28"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4150:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4144:2:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4144:13:28"
                  },
                  "nodeType": "YulIf",
                  "src": "4141:48:28"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3968:3:28",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3973:3:28",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3978:6:28",
                "type": ""
              }
            ],
            "src": "3937:258:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4387:283:28",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4397:27:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4417:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4411:5:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4411:13:28"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4401:6:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4459:6:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4467:4:28",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4455:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4455:17:28"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4474:3:28"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4479:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4433:21:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4433:53:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4433:53:28"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4495:29:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4512:3:28"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4517:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4508:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4508:16:28"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "4499:5:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4533:29:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4555:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4549:5:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4549:13:28"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "4537:8:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4597:6:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4605:4:28",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4593:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4593:17:28"
                      },
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "4612:5:28"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "4619:8:28"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4571:21:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4571:57:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4571:57:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4637:27:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "4648:5:28"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "4655:8:28"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4644:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4644:20:28"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4637:3:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4355:3:28",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4360:6:28",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4368:6:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4379:3:28",
                "type": ""
              }
            ],
            "src": "4200:470:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4832:218:28",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4842:26:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4854:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4865:2:28",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4850:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4850:18:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4842:4:28"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4877:29:28",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4895:3:28",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4900:1:28",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4891:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4891:11:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4904:1:28",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4887:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4887:19:28"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4881:2:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4922:9:28"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4937:6:28"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4945:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4933:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4933:15:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4915:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4915:34:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4915:34:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4969:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4980:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4965:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4965:18:28"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4989:6:28"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4997:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4985:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4985:15:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4958:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4958:43:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4958:43:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5021:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5032:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5017:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5017:18:28"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5037:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5010:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5010:34:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5010:34:28"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4785:9:28",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4796:6:28",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4804:6:28",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4812:6:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4823:4:28",
                "type": ""
              }
            ],
            "src": "4675:375:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5194:137:28",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5204:27:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5224:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5218:5:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5218:13:28"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5208:6:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5266:6:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5274:4:28",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5262:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5262:17:28"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5281:3:28"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5286:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5240:21:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5240:53:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5240:53:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5302:23:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5313:3:28"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5318:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5309:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5309:16:28"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5302:3:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5170:3:28",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5175:6:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5186:3:28",
                "type": ""
              }
            ],
            "src": "5055:276:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5383:88:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5414:22:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5416:16:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5416:18:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5416:18:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5399:5:28"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5410:1:28",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5406:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5406:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5396:2:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5396:17:28"
                  },
                  "nodeType": "YulIf",
                  "src": "5393:43:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5445:20:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5456:5:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5463:1:28",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5452:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5452:13:28"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "5445:3:28"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5365:5:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "5375:3:28",
                "type": ""
              }
            ],
            "src": "5336:135:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5526:208:28",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5536:26:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5556:5:28"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5550:5:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5550:12:28"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5540:6:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5578:3:28"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5583:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5571:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5571:19:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5571:19:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5625:5:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5632:4:28",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5621:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5621:16:28"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5643:3:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5648:4:28",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5639:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5639:14:28"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5655:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5599:21:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5599:63:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5599:63:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5671:57:28",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5686:3:28"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5699:6:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5707:2:28",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5695:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5695:15:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5716:2:28",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5712:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5712:7:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5691:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5691:29:28"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5682:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5682:39:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5723:4:28",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5678:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5678:50:28"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5671:3:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5503:5:28",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5510:3:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5518:3:28",
                "type": ""
              }
            ],
            "src": "5476:258:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5936:283:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5953:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5964:2:28",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5946:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5946:21:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5946:21:28"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5976:59:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6008:6:28"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6020:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6031:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6016:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6016:18:28"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "5990:17:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5990:45:28"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "5980:6:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6055:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6066:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6051:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6051:18:28"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "6075:6:28"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6083:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6071:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6071:22:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6044:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6044:50:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6044:50:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6103:41:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6129:6:28"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6137:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6111:17:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6111:33:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6103:4:28"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6164:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6175:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6160:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6160:18:28"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "6184:6:28"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6200:3:28",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6205:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6196:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6196:11:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6209:1:28",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6192:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6192:19:28"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6180:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6180:32:28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6153:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6153:60:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6153:60:28"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5889:9:28",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5900:6:28",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5908:6:28",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5916:6:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5927:4:28",
                "type": ""
              }
            ],
            "src": "5739:480:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6407:283:28",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6417:27:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6437:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6431:5:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6431:13:28"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6421:6:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6479:6:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6487:4:28",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6475:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6475:17:28"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6494:3:28"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6499:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6453:21:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6453:53:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6453:53:28"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6515:29:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6532:3:28"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6537:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6528:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6528:16:28"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "6519:5:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6553:29:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6575:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6569:5:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6569:13:28"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "6557:8:28",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6617:6:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6625:4:28",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6613:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6613:17:28"
                      },
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "6632:5:28"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "6639:8:28"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6591:21:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6591:57:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6591:57:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6657:27:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "6668:5:28"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "6675:8:28"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6664:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6664:20:28"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6657:3:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6375:3:28",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6380:6:28",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6388:6:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6399:3:28",
                "type": ""
              }
            ],
            "src": "6224:466:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6747:116:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6806:22:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6808:16:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6808:18:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6808:18:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6778:1:28"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6771:6:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6771:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6764:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6764:17:28"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6786:1:28"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6797:1:28",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6793:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6793:6:28"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6801:1:28"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "6789:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6789:14:28"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6783:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6783:21:28"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6760:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6760:45:28"
                  },
                  "nodeType": "YulIf",
                  "src": "6757:71:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6837:20:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6852:1:28"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6855:1:28"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6848:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6848:9:28"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6837:7:28"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6726:1:28",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6729:1:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6735:7:28",
                "type": ""
              }
            ],
            "src": "6695:168:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6916:80:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6943:22:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6945:16:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6945:18:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6945:18:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6932:1:28"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6939:1:28"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6935:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6935:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6929:2:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6929:13:28"
                  },
                  "nodeType": "YulIf",
                  "src": "6926:39:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6974:16:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6985:1:28"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6988:1:28"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6981:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6981:9:28"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6974:3:28"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6899:1:28",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6902:1:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6908:3:28",
                "type": ""
              }
            ],
            "src": "6868:128:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7048:89:28",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7075:22:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7077:16:28"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7077:18:28"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7077:18:28"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7068:5:28"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7061:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7061:13:28"
                  },
                  "nodeType": "YulIf",
                  "src": "7058:39:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7106:25:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7117:5:28"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7128:1:28",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7124:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7124:6:28"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7113:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7113:18:28"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7106:3:28"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7030:5:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7040:3:28",
                "type": ""
              }
            ],
            "src": "7001:136:28"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7316:182:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7333:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7344:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7326:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7326:21:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7326:21:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7367:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7378:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7363:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7363:18:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7383:2:28",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7356:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7356:30:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7356:30:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7406:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7417:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7402:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7402:18:28"
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7422:34:28",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7395:6:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7395:62:28"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7395:62:28"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7466:26:28",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7478:9:28"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7489:2:28",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7474:3:28"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7474:18:28"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7466:4:28"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7293:9:28",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7307:4:28",
                "type": ""
              }
            ],
            "src": "7142:356:28"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Only feeToSetter can call this f\")\n        mstore(add(headStart, 96), \"unction\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"You give the wrong order of poli\")\n        mstore(add(headStart, 96), \"cyToken and stablecoin\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 28,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "632:5498:11:-:0;;;1010:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1054:11;:26;;-1:-1:-1;;;;;;1054:26:11;-1:-1:-1;;;;;1054:26:11;;;;;;;;;;632:5498;;14:290:28;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:28;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:28:o;:::-;632:5498:11;;;;;;",
  "deployedSourceMap": "632:5498:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;951:20;;;;;-1:-1:-1;;;;;951:20:11;;;;;;-1:-1:-1;;;;;178:32:28;;;160:51;;148:2;133:18;951:20:11;;;;;;;;977:26;;;;;-1:-1:-1;;;;;977:26:11;;;2539:101;;;;;;:::i;:::-;2609:10;:24;;-1:-1:-1;;;;;;2609:24:11;-1:-1:-1;;;;;2609:24:11;;;;;;;;;;2539:101;;;1430:154;;;:::i;2950:114::-;;;;;;:::i;:::-;;:::i;3367:911::-;;;;;;:::i;:::-;;:::i;1832:486::-;;;;;;:::i;:::-;;:::i;919:25::-;;;;;-1:-1:-1;;;;;919:25:11;;;4468:420;;;;;;:::i;:::-;;:::i;890:22::-;;;;;;;;;2394:25:28;;;2382:2;2367:18;890:22:11;2248:177:28;2743:90:11;;;;;;:::i;:::-;;:::i;1430:154::-;1484:7;1503:20;1536:1;1526:7;;:11;;;;:::i;:::-;1503:34;;1554:9;1564:12;1554:23;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1554:23:11;;1430:154;-1:-1:-1;;1430:154:11:o;2950:114::-;1237:11;;-1:-1:-1;;;;;1237:11:11;1223:10;:25;1202:111;;;;-1:-1:-1;;;1202:111:11;;;;;;;:::i;:::-;;;;;;;;;3031:11:::1;:26:::0;;-1:-1:-1;;;;;;3031:26:11::1;-1:-1:-1::0;;;;;3031:26:11;;;::::1;::::0;;;::::1;::::0;;2950:114::o;3367:911::-;3554:10;;;3542:56;;-1:-1:-1;;;3542:56:11;;-1:-1:-1;;;;;178:32:28;;;3542:56:11;;;160:51:28;;;;3502:7:11;;3554:10;;;;3542:43;;133:18:28;;3542:56:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;3602:4;3542:64;3521:165;;;;-1:-1:-1;;;3521:165:11;;3716:2:28;3521:165:11;;;3698:21:28;3755:2;3735:18;;;3728:30;3794:34;3774:18;;;3767:62;-1:-1:-1;;;3845:18:28;;;3838:52;3907:19;;3521:165:11;3514:418:28;3521:165:11;3697:21;3721:30;;;;;;;;:::i;:::-;-1:-1:-1;;3721:30:11;;;;;;;;;;;;;;;-1:-1:-1;3762:12:11;3834:36;3850:19;3834:15;:36::i;:::-;3888:28;3904:11;3888:15;:28::i;:::-;3800:130;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3777:163;;;;;;3762:178;;3951:20;3974:23;3982:8;3992:4;3974:7;:23::i;:::-;4008:128;;-1:-1:-1;;;4008:128:11;;-1:-1:-1;;;;;4933:15:28;;;4008:128:11;;;4915:34:28;4985:15;;;4965:18;;;4958:43;5017:18;;;5010:34;;;3951:46:11;;-1:-1:-1;4008:37:11;;;;;;4850:18:28;;4008:128:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;4147:28:11;;;:7;:28;;;;;;;;;;;:41;;;;;;;;;;:56;;;;;-1:-1:-1;;;;;;4147:56:11;;;;;;;;;4214:27;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4191:12:11;-1:-1:-1;;;3367:911:11;;;;;:::o;1832:486::-;2070:10;;;2058:72;;-1:-1:-1;;;2058:72:11;;-1:-1:-1;;;;;178:32:28;;;2058:72:11;;;160:51:28;;;;1949:7:11;;;;;;2070:10;;;2058:56;;133:18:28;;2058:72:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:166;;2193:14;2209;2058:166;;;2146:14;2162;2058:166;-1:-1:-1;;;;;2258:15:11;;;2235:20;2258:15;;;;;;;;;;;:23;;;;;;;;;;;;-1:-1:-1;;;1832:486:11;;;;;:::o;4468:420::-;4559:7;4582:12;4624:16;4607:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;4597:45;;;;;;4582:60;;4653:21;4677:40;4700:16;4677:22;:40::i;:::-;4653:64;;4728:26;4757:23;4765:8;4775:4;4757:7;:23::i;:::-;4791:9;:34;;;;;;;-1:-1:-1;4791:34:11;;;;;;;-1:-1:-1;;;;;;4791:34:11;-1:-1:-1;;;;;4791:34:11;;;;;4836:7;:9;;4791:34;;-1:-1:-1;4836:7:11;:9;;;:::i;:::-;;;;-1:-1:-1;4863:18:11;;4468:420;-1:-1:-1;;;;;4468:420:11:o;2743:90::-;1237:11;;-1:-1:-1;;;;;1237:11:11;1223:10;:25;1202:111;;;;-1:-1:-1;;;1202:111:11;;;;;;;:::i;:::-;2812:5:::1;:14:::0;;-1:-1:-1;;;;;;2812:14:11::1;-1:-1:-1::0;;;;;2812:14:11;;;::::1;::::0;;;::::1;::::0;;2743:90::o;5378:171::-;5465:13;5501:41;-1:-1:-1;;;;;5502:23:11;;5539:2;5501:37;:41::i;4954:291::-;5038:12;5138:4;5131;5125:11;5118:4;5112;5108:15;5105:1;5097:46;5089:54;;5178:4;5166:17;5156:73;;5213:1;5210;5203:12;5679:449;5784:12;5812:21;5836:30;;;;;;;;:::i;:::-;-1:-1:-1;;5836:30:11;;;;;;;;;;;;;;;;6096:10;;5836:30;;-1:-1:-1;5836:30:11;;6061:46;;6072:10;;;;-1:-1:-1;;;;;6096:10:11;;;;5836:30;6061:46;;:::i;:::-;;;;-1:-1:-1;;6061:46:11;;;;;;;;;;6001:120;;;6061:46;6001:120;;:::i;:::-;;;;;;;;;;;;;5982:139;;;5679:449;;;:::o;1535:441:7:-;1610:13;1635:19;1667:10;1671:6;1667:1;:10;:::i;:::-;:14;;1680:1;1667:14;:::i;:::-;1657:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1657:25:7;;1635:47;;-1:-1:-1;;;1692:6:7;1699:1;1692:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1692:15:7;;;;;;;;;-1:-1:-1;;;1717:6:7;1724:1;1717:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1717:15:7;;;;;;;;-1:-1:-1;1747:9:7;1759:10;1763:6;1759:1;:10;:::i;:::-;:14;;1772:1;1759:14;:::i;:::-;1747:26;;1742:132;1779:1;1775;:5;1742:132;;;-1:-1:-1;;;1826:5:7;1834:3;1826:11;1813:25;;;;;;;:::i;:::-;;;;1801:6;1808:1;1801:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1801:37:7;;;;;;;;-1:-1:-1;1862:1:7;1852:11;;;;;1782:3;;;:::i;:::-;;;1742:132;;;-1:-1:-1;1891:10:7;;1883:55;;;;-1:-1:-1;;;1883:55:7;;7344:2:28;1883:55:7;;;7326:21:28;;;7363:18;;;7356:30;7422:34;7402:18;;;7395:62;7474:18;;1883:55:7;7142:356:28;1883:55:7;1962:6;1535:441;-1:-1:-1;;;1535:441:7:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;222:173:28:-;290:20;;-1:-1:-1;;;;;339:31:28;;329:42;;319:70;;385:1;382;375:12;319:70;222:173;;;:::o;400:186::-;459:6;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;591:328::-;668:6;676;684;737:2;725:9;716:7;712:23;708:32;705:52;;;753:1;750;743:12;705:52;776:29;795:9;776:29;:::i;:::-;766:39;;824:38;858:2;847:9;843:18;824:38;:::i;:::-;814:48;;909:2;898:9;894:18;881:32;871:42;;591:328;;;;;:::o;924:260::-;992:6;1000;1053:2;1041:9;1032:7;1028:23;1024:32;1021:52;;;1069:1;1066;1059:12;1021:52;1092:29;1111:9;1092:29;:::i;:::-;1082:39;;1140:38;1174:2;1163:9;1159:18;1140:38;:::i;:::-;1130:48;;924:260;;;;;:::o;1189:127::-;1250:10;1245:3;1241:20;1238:1;1231:31;1281:4;1278:1;1271:15;1305:4;1302:1;1295:15;1321:922;1390:6;1443:2;1431:9;1422:7;1418:23;1414:32;1411:52;;;1459:1;1456;1449:12;1411:52;1499:9;1486:23;1528:18;1569:2;1561:6;1558:14;1555:34;;;1585:1;1582;1575:12;1555:34;1623:6;1612:9;1608:22;1598:32;;1668:7;1661:4;1657:2;1653:13;1649:27;1639:55;;1690:1;1687;1680:12;1639:55;1726:2;1713:16;1748:2;1744;1741:10;1738:36;;;1754:18;;:::i;:::-;1829:2;1823:9;1797:2;1883:13;;-1:-1:-1;;1879:22:28;;;1903:2;1875:31;1871:40;1859:53;;;1927:18;;;1947:22;;;1924:46;1921:72;;;1973:18;;:::i;:::-;2013:10;2009:2;2002:22;2048:2;2040:6;2033:18;2088:7;2083:2;2078;2074;2070:11;2066:20;2063:33;2060:53;;;2109:1;2106;2099:12;2060:53;2165:2;2160;2156;2152:11;2147:2;2139:6;2135:15;2122:46;2210:1;2188:15;;;2205:2;2184:24;2177:35;;;;-1:-1:-1;2192:6:28;1321:922;-1:-1:-1;;;;;1321:922:28:o;2430:127::-;2491:10;2486:3;2482:20;2479:1;2472:31;2522:4;2519:1;2512:15;2546:4;2543:1;2536:15;2562:125;2602:4;2630:1;2627;2624:8;2621:34;;;2635:18;;:::i;:::-;-1:-1:-1;2672:9:28;;2562:125::o;2692:127::-;2753:10;2748:3;2744:20;2741:1;2734:31;2784:4;2781:1;2774:15;2808:4;2805:1;2798:15;2824:403;3026:2;3008:21;;;3065:2;3045:18;;;3038:30;3104:34;3099:2;3084:18;;3077:62;-1:-1:-1;;;3170:2:28;3155:18;;3148:37;3217:3;3202:19;;2824:403::o;3232:277::-;3299:6;3352:2;3340:9;3331:7;3327:23;3323:32;3320:52;;;3368:1;3365;3358:12;3320:52;3400:9;3394:16;3453:5;3446:13;3439:21;3432:5;3429:32;3419:60;;3475:1;3472;3465:12;3937:258;4009:1;4019:113;4033:6;4030:1;4027:13;4019:113;;;4109:11;;;4103:18;4090:11;;;4083:39;4055:2;4048:10;4019:113;;;4150:6;4147:1;4144:13;4141:48;;;4185:1;4176:6;4171:3;4167:16;4160:27;4141:48;;3937:258;;;:::o;4200:470::-;4379:3;4417:6;4411:13;4433:53;4479:6;4474:3;4467:4;4459:6;4455:17;4433:53;:::i;:::-;4549:13;;4508:16;;;;4571:57;4549:13;4508:16;4605:4;4593:17;;4571:57;:::i;:::-;4644:20;;4200:470;-1:-1:-1;;;;4200:470:28:o;5055:276::-;5186:3;5224:6;5218:13;5240:53;5286:6;5281:3;5274:4;5266:6;5262:17;5240:53;:::i;:::-;5309:16;;;;;5055:276;-1:-1:-1;;5055:276:28:o;5336:135::-;5375:3;-1:-1:-1;;5396:17:28;;5393:43;;;5416:18;;:::i;:::-;-1:-1:-1;5463:1:28;5452:13;;5336:135::o;5476:258::-;5518:3;5556:5;5550:12;5583:6;5578:3;5571:19;5599:63;5655:6;5648:4;5643:3;5639:14;5632:4;5625:5;5621:16;5599:63;:::i;:::-;5716:2;5695:15;-1:-1:-1;;5691:29:28;5682:39;;;;5723:4;5678:50;;5476:258;-1:-1:-1;;5476:258:28:o;5739:480::-;5964:2;5953:9;5946:21;5927:4;5990:45;6031:2;6020:9;6016:18;6008:6;5990:45;:::i;:::-;6083:9;6075:6;6071:22;6066:2;6055:9;6051:18;6044:50;6111:33;6137:6;6129;6111:33;:::i;:::-;6103:41;;;6209:1;6205;6200:3;6196:11;6192:19;6184:6;6180:32;6175:2;6164:9;6160:18;6153:60;5739:480;;;;;;:::o;6695:168::-;6735:7;6801:1;6797;6793:6;6789:14;6786:1;6783:21;6778:1;6771:9;6764:17;6760:45;6757:71;;;6808:18;;:::i;:::-;-1:-1:-1;6848:9:28;;6695:168::o;6868:128::-;6908:3;6939:1;6935:6;6932:1;6929:13;6926:39;;;6945:18;;:::i;:::-;-1:-1:-1;6981:9:28;;6868:128::o;7001:136::-;7040:3;7068:5;7058:39;;7077:18;;:::i;:::-;-1:-1:-1;;;7113:18:28;;7001:136::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\nimport \"./PolicyToken.sol\";\nimport \"./NaughtyPair.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./interfaces/INaughtyPair.sol\";\nimport \"./interfaces/INaughtyFactory.sol\";\nimport \"./interfaces/IPolicyCore.sol\";\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/**\n * @title Naughty Factory\n * @dev Factory contract to deploy new pools periodically\n *      Each pool(product) will have a unique naughtyId\n *      Each pool will have its pool token\n *      PolicyToken - Stablecoin\n *      Token 0 may change but Token 1 is always stablecoin.\n */\n\ncontract NaughtyFactory is INaughtyFactory {\n    using Strings for uint256;\n\n    // PolicyToken Address => StableCoin Address => Pool Address\n    mapping(address => mapping(address => address)) getPair;\n\n    address[] allPairs;\n    address[] allTokens;\n\n    uint256 public _nextId;\n\n    address public policyCore;\n\n    address public feeTo;\n    address public feeToSetter;\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    /**\n     * @notice Only feeToSetter can call some functions\n     */\n    modifier onlyFeeToSetter() {\n        require(\n            msg.sender == feeToSetter,\n            \"Only feeToSetter can call this function\"\n        );\n        _;\n    }\n\n    /**\n     * @notice Next token to be deployed\n     * @return Latest token address\n     */\n    function getLatestTokenAddress() public view returns (address) {\n        uint256 currentToken = _nextId - 1;\n        return allTokens[currentToken];\n    }\n\n    /**\n     * @notice Get the pair address deployed by the factory\n     *         PolicyToken address first, and then stablecoin address\n     *         The order of the token not matters\n     * @return Pool address of the two tokens\n     */\n    function getPairAddress(address _tokenAddress1, address _tokenAddress2)\n        public\n        view\n        returns (address)\n    {\n        // Policy token address at the first place\n        (address token0, address token1) = IPolicyCore(policyCore)\n            .isStablecoinAddress(_tokenAddress2)\n            ? (_tokenAddress1, _tokenAddress2)\n            : (_tokenAddress2, _tokenAddress1);\n\n        address _pairAddress = getPair[token0][token1];\n\n        return _pairAddress;\n    }\n\n    /**\n     * @notice Remember to call this function to set the policyCore address\n     *         < PolicyCore should be the owner of policyToken >\n     * @param _policyCore: Address of policyCore contract\n     */\n    function setPolicyCoreAddress(address _policyCore) external {\n        policyCore = _policyCore;\n    }\n\n    /**\n     * @notice Set feeTo address\n     * @param _feeTo Address to receive the fee\n     */\n    function setFeeTo(address _feeTo) external onlyFeeToSetter {\n        feeTo = _feeTo;\n    }\n\n    /**\n     * @notice Set feeToSetter address\n     * @param _feeToSetter Address to control the feeTo\n     */\n    function setFeeToSetter(address _feeToSetter) external onlyFeeToSetter {\n        feeToSetter = _feeToSetter;\n    }\n\n    /**\n     * @notice After deploy the policytoken and get the address,\n     *         we deploy the policyToken - stablecoin pool contract\n     * @param _policyTokenAddress: Address of policy token\n     * @param _stablecoin: Address of the stable coin\n     * @return Address of the pool\n     */\n    function deployPool(\n        address _policyTokenAddress,\n        address _stablecoin,\n        uint256 _deadline\n    ) public returns (address) {\n        require(\n            IPolicyCore(policyCore).isStablecoinAddress(_stablecoin) == true,\n            \"You give the wrong order of policyToken and stablecoin\"\n        );\n\n        bytes memory bytecode = type(NaughtyPair).creationCode;\n\n        bytes32 salt = keccak256(\n            abi.encodePacked(\n                addressToString(_policyTokenAddress),\n                addressToString(_stablecoin)\n            )\n        );\n\n        address _poolAddress = _deploy(bytecode, salt);\n\n        INaughtyPair(_poolAddress).initialize(\n            _policyTokenAddress,\n            _stablecoin,\n            _deadline\n        );\n\n        getPair[_policyTokenAddress][_stablecoin] = _poolAddress;\n\n        allPairs.push(_poolAddress);\n\n        return _poolAddress;\n    }\n\n    /**\n     * @notice For each round we need to first create the policytoken(ERC20)\n     * @param _policyTokenName: Name of the policyToken\n     * @return PolicyToken address\n     */\n    function deployPolicyToken(string memory _policyTokenName)\n        public\n        returns (address)\n    {\n        bytes32 salt = keccak256(abi.encodePacked(_policyTokenName));\n\n        bytes memory bytecode = getPolicyTokenBytecode(_policyTokenName);\n\n        address _policTokenAddress = _deploy(bytecode, salt);\n\n        allTokens.push(_policTokenAddress);\n\n        _nextId++;\n\n        return _policTokenAddress;\n    }\n\n    /**\n     * @notice Deploy function with create2\n     */\n    function _deploy(bytes memory code, bytes32 salt)\n        internal\n        returns (address addr)\n    {\n        assembly {\n            addr := create2(0, add(code, 0x20), mload(code), salt)\n            if iszero(extcodesize(addr)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    /**\n     * @notice Transfer address to string\n     * @param _addr: Input address\n     * @return Output string form\n     */\n    function addressToString(address _addr)\n        internal\n        pure\n        returns (string memory)\n    {\n        return (uint256(uint160(_addr))).toHexString(20);\n    }\n\n    /**\n     * @notice Get the policyToken bytecode (with parameters)\n     * @param _tokenName: Name of policyToken\n     */\n    function getPolicyTokenBytecode(string memory _tokenName)\n        internal\n        view\n        returns (bytes memory)\n    {\n        bytes memory bytecode = type(PolicyToken).creationCode;\n\n        // Encodepacked the parameters\n        // The owner & minter is set to be the policyCore address\n        return\n            abi.encodePacked(\n                bytecode,\n                abi.encode(_tokenName, _tokenName, policyCore)\n            );\n    }\n}\n",
  "sourcePath": "/Volumes/Store/src/naughty-price/contracts/NaughtyFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/NaughtyFactory.sol",
    "exportedSymbols": {
      "Address": [
        1215
      ],
      "Context": [
        1237
      ],
      "ERC20": [
        591
      ],
      "IERC20": [
        669
      ],
      "IERC20Metadata": [
        694
      ],
      "INaughtyFactory": [
        7057
      ],
      "INaughtyPair": [
        7160
      ],
      "IPolicyCore": [
        7445
      ],
      "IPolicyToken": [
        7476
      ],
      "NaughtyFactory": [
        3702
      ],
      "NaughtyPair": [
        4400
      ],
      "PRBMath": [
        3334
      ],
      "PRBMathSD59x18__AbsInputTooSmall": [
        1465
      ],
      "PRBMathSD59x18__CeilOverflow": [
        1470
      ],
      "PRBMathSD59x18__DivInputTooSmall": [
        1473
      ],
      "PRBMathSD59x18__DivOverflow": [
        1478
      ],
      "PRBMathSD59x18__Exp2InputTooBig": [
        1488
      ],
      "PRBMathSD59x18__ExpInputTooBig": [
        1483
      ],
      "PRBMathSD59x18__FloorUnderflow": [
        1493
      ],
      "PRBMathSD59x18__FromIntOverflow": [
        1498
      ],
      "PRBMathSD59x18__FromIntUnderflow": [
        1503
      ],
      "PRBMathSD59x18__GmNegativeProduct": [
        1510
      ],
      "PRBMathSD59x18__GmOverflow": [
        1517
      ],
      "PRBMathSD59x18__LogInputTooSmall": [
        1522
      ],
      "PRBMathSD59x18__MulInputTooSmall": [
        1525
      ],
      "PRBMathSD59x18__MulOverflow": [
        1530
      ],
      "PRBMathSD59x18__PowuOverflow": [
        1535
      ],
      "PRBMathSD59x18__SqrtNegativeInput": [
        1540
      ],
      "PRBMathSD59x18__SqrtOverflow": [
        1545
      ],
      "PRBMathUD60x18__AddOverflow": [
        1552
      ],
      "PRBMathUD60x18__CeilOverflow": [
        1557
      ],
      "PRBMathUD60x18__Exp2InputTooBig": [
        1567
      ],
      "PRBMathUD60x18__ExpInputTooBig": [
        1562
      ],
      "PRBMathUD60x18__FromUintOverflow": [
        1572
      ],
      "PRBMathUD60x18__GmOverflow": [
        1579
      ],
      "PRBMathUD60x18__LogInputTooSmall": [
        1584
      ],
      "PRBMathUD60x18__SqrtOverflow": [
        1589
      ],
      "PRBMathUD60x18__SubUnderflow": [
        1596
      ],
      "PRBMath__MulDivFixedPointOverflow": [
        1447
      ],
      "PRBMath__MulDivOverflow": [
        1454
      ],
      "PRBMath__MulDivSignedInputTooSmall": [
        1457
      ],
      "PRBMath__MulDivSignedOverflow": [
        1462
      ],
      "PolicyToken": [
        6627
      ],
      "PoolLPToken": [
        6674
      ],
      "SafeERC20": [
        918
      ],
      "Strings": [
        1440
      ]
    },
    "id": 3703,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3372,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:11"
      },
      {
        "absolutePath": "project:/contracts/PolicyToken.sol",
        "file": "./PolicyToken.sol",
        "id": 3373,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 6628,
        "src": "56:27:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NaughtyPair.sol",
        "file": "./NaughtyPair.sol",
        "id": 3374,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 4401,
        "src": "84:27:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3375,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 670,
        "src": "113:56:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/INaughtyPair.sol",
        "file": "./interfaces/INaughtyPair.sol",
        "id": 3376,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 7161,
        "src": "170:39:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/INaughtyFactory.sol",
        "file": "./interfaces/INaughtyFactory.sol",
        "id": 3377,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 7058,
        "src": "210:42:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IPolicyCore.sol",
        "file": "./interfaces/IPolicyCore.sol",
        "id": 3378,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 7446,
        "src": "253:38:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 3379,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 1441,
        "src": "293:51:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3381,
              "name": "INaughtyFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7057,
              "src": "659:15:11"
            },
            "id": 3382,
            "nodeType": "InheritanceSpecifier",
            "src": "659:15:11"
          }
        ],
        "canonicalName": "NaughtyFactory",
        "contractDependencies": [
          4400,
          6627
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3380,
          "nodeType": "StructuredDocumentation",
          "src": "346:284:11",
          "text": " @title Naughty Factory\n @dev Factory contract to deploy new pools periodically\n      Each pool(product) will have a unique naughtyId\n      Each pool will have its pool token\n      PolicyToken - Stablecoin\n      Token 0 may change but Token 1 is always stablecoin."
        },
        "fullyImplemented": true,
        "id": 3702,
        "linearizedBaseContracts": [
          3702,
          7057
        ],
        "name": "NaughtyFactory",
        "nameLocation": "641:14:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3385,
            "libraryName": {
              "id": 3383,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1440,
              "src": "687:7:11"
            },
            "nodeType": "UsingForDirective",
            "src": "681:26:11",
            "typeName": {
              "id": 3384,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "699:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3391,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "826:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "778:55:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 3390,
              "keyType": {
                "id": 3386,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "786:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "778:47:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 3389,
                "keyType": {
                  "id": 3387,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "805:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "797:27:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 3388,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "816:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3394,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "850:8:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "840:18:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3392,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "840:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3393,
              "nodeType": "ArrayTypeName",
              "src": "840:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3397,
            "mutability": "mutable",
            "name": "allTokens",
            "nameLocation": "874:9:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "864:19:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3395,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "864:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3396,
              "nodeType": "ArrayTypeName",
              "src": "864:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f2f2fff5",
            "id": 3399,
            "mutability": "mutable",
            "name": "_nextId",
            "nameLocation": "905:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "890:22:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3398,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "890:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e30145e0",
            "id": 3401,
            "mutability": "mutable",
            "name": "policyCore",
            "nameLocation": "934:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "919:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3400,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "919:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7029
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 3403,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "966:5:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "951:20:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3402,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "951:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "094b7415",
            "id": 3405,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "992:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "977:26:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3404,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "977:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3414,
              "nodeType": "Block",
              "src": "1044:43:11",
              "statements": [
                {
                  "expression": {
                    "id": 3412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3410,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3405,
                      "src": "1054:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3411,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3407,
                      "src": "1068:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1054:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3413,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:26:11"
                }
              ]
            },
            "id": 3415,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3407,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1030:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3415,
                  "src": "1022:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1021:22:11"
            },
            "returnParameters": {
              "id": 3409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1044:0:11"
            },
            "scope": 3702,
            "src": "1010:77:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3427,
              "nodeType": "Block",
              "src": "1192:139:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3419,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1223:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1223:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3421,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3405,
                          "src": "1237:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1223:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920666565546f5365747465722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 3423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1262:41:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84",
                          "typeString": "literal_string \"Only feeToSetter can call this function\""
                        },
                        "value": "Only feeToSetter can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84",
                          "typeString": "literal_string \"Only feeToSetter can call this function\""
                        }
                      ],
                      "id": 3418,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1202:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1202:111:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3425,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:111:11"
                },
                {
                  "id": 3426,
                  "nodeType": "PlaceholderStatement",
                  "src": "1323:1:11"
                }
              ]
            },
            "documentation": {
              "id": 3416,
              "nodeType": "StructuredDocumentation",
              "src": "1093:67:11",
              "text": " @notice Only feeToSetter can call some functions"
            },
            "id": 3428,
            "name": "onlyFeeToSetter",
            "nameLocation": "1174:15:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1189:2:11"
            },
            "src": "1165:166:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3444,
              "nodeType": "Block",
              "src": "1493:91:11",
              "statements": [
                {
                  "assignments": [
                    3435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3435,
                      "mutability": "mutable",
                      "name": "currentToken",
                      "nameLocation": "1511:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3444,
                      "src": "1503:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3434,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1503:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3439,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3436,
                      "name": "_nextId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3399,
                      "src": "1526:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 3437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1536:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1526:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1503:34:11"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3440,
                      "name": "allTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3397,
                      "src": "1554:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 3442,
                    "indexExpression": {
                      "id": 3441,
                      "name": "currentToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3435,
                      "src": "1564:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1554:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3433,
                  "id": 3443,
                  "nodeType": "Return",
                  "src": "1547:30:11"
                }
              ]
            },
            "documentation": {
              "id": 3429,
              "nodeType": "StructuredDocumentation",
              "src": "1337:88:11",
              "text": " @notice Next token to be deployed\n @return Latest token address"
            },
            "functionSelector": "9fd2650e",
            "id": 3445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestTokenAddress",
            "nameLocation": "1439:21:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1460:2:11"
            },
            "returnParameters": {
              "id": 3433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3445,
                  "src": "1484:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1484:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1483:9:11"
            },
            "scope": 3702,
            "src": "1430:154:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7038
            ],
            "body": {
              "id": 3483,
              "nodeType": "Block",
              "src": "1962:356:11",
              "statements": [
                {
                  "assignments": [
                    3456,
                    3458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3456,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "2032:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3483,
                      "src": "2024:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3455,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2024:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3458,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "2048:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3483,
                      "src": "2040:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3457,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2040:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3472,
                  "initialValue": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 3463,
                          "name": "_tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3450,
                          "src": "2115:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3460,
                              "name": "policyCore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3401,
                              "src": "2070:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3459,
                            "name": "IPolicyCore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7445,
                            "src": "2058:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPolicyCore_$7445_$",
                              "typeString": "type(contract IPolicyCore)"
                            }
                          },
                          "id": 3461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2058:23:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPolicyCore_$7445",
                            "typeString": "contract IPolicyCore"
                          }
                        },
                        "id": 3462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isStablecoinAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7373,
                        "src": "2058:56:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 3464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2058:72:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 3468,
                          "name": "_tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3450,
                          "src": "2193:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3469,
                          "name": "_tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3448,
                          "src": "2209:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3470,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2192:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 3471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2058:166:11",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 3465,
                          "name": "_tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3448,
                          "src": "2146:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3466,
                          "name": "_tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3450,
                          "src": "2162:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3467,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2145:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2023:201:11"
                },
                {
                  "assignments": [
                    3474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3474,
                      "mutability": "mutable",
                      "name": "_pairAddress",
                      "nameLocation": "2243:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3483,
                      "src": "2235:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3473,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2235:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3480,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3475,
                        "name": "getPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3391,
                        "src": "2258:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                          "typeString": "mapping(address => mapping(address => address))"
                        }
                      },
                      "id": 3477,
                      "indexExpression": {
                        "id": 3476,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3456,
                        "src": "2266:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2258:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 3479,
                    "indexExpression": {
                      "id": 3478,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3458,
                      "src": "2274:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2258:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2235:46:11"
                },
                {
                  "expression": {
                    "id": 3481,
                    "name": "_pairAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3474,
                    "src": "2299:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3454,
                  "id": 3482,
                  "nodeType": "Return",
                  "src": "2292:19:11"
                }
              ]
            },
            "documentation": {
              "id": 3446,
              "nodeType": "StructuredDocumentation",
              "src": "1590:237:11",
              "text": " @notice Get the pair address deployed by the factory\n         PolicyToken address first, and then stablecoin address\n         The order of the token not matters\n @return Pool address of the two tokens"
            },
            "functionSelector": "b4f69a2f",
            "id": 3484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPairAddress",
            "nameLocation": "1841:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3448,
                  "mutability": "mutable",
                  "name": "_tokenAddress1",
                  "nameLocation": "1864:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "1856:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1856:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3450,
                  "mutability": "mutable",
                  "name": "_tokenAddress2",
                  "nameLocation": "1888:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "1880:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1855:48:11"
            },
            "returnParameters": {
              "id": 3454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3453,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "1949:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1948:9:11"
            },
            "scope": 3702,
            "src": "1832:486:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3494,
              "nodeType": "Block",
              "src": "2599:41:11",
              "statements": [
                {
                  "expression": {
                    "id": 3492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3490,
                      "name": "policyCore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3401,
                      "src": "2609:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3491,
                      "name": "_policyCore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3487,
                      "src": "2622:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2609:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3493,
                  "nodeType": "ExpressionStatement",
                  "src": "2609:24:11"
                }
              ]
            },
            "documentation": {
              "id": 3485,
              "nodeType": "StructuredDocumentation",
              "src": "2324:210:11",
              "text": " @notice Remember to call this function to set the policyCore address\n         < PolicyCore should be the owner of policyToken >\n @param _policyCore: Address of policyCore contract"
            },
            "functionSelector": "61c8f99d",
            "id": 3495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPolicyCoreAddress",
            "nameLocation": "2548:20:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3487,
                  "mutability": "mutable",
                  "name": "_policyCore",
                  "nameLocation": "2577:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3495,
                  "src": "2569:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2569:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2568:21:11"
            },
            "returnParameters": {
              "id": 3489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2599:0:11"
            },
            "scope": 3702,
            "src": "2539:101:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3507,
              "nodeType": "Block",
              "src": "2802:31:11",
              "statements": [
                {
                  "expression": {
                    "id": 3505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3503,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3403,
                      "src": "2812:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3504,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3498,
                      "src": "2820:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2812:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3506,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:14:11"
                }
              ]
            },
            "documentation": {
              "id": 3496,
              "nodeType": "StructuredDocumentation",
              "src": "2646:92:11",
              "text": " @notice Set feeTo address\n @param _feeTo Address to receive the fee"
            },
            "functionSelector": "f46901ed",
            "id": 3508,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3501,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3500,
                  "name": "onlyFeeToSetter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3428,
                  "src": "2786:15:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "2786:15:11"
              }
            ],
            "name": "setFeeTo",
            "nameLocation": "2752:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3498,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "2769:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3508,
                  "src": "2761:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2760:16:11"
            },
            "returnParameters": {
              "id": 3502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2802:0:11"
            },
            "scope": 3702,
            "src": "2743:90:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3520,
              "nodeType": "Block",
              "src": "3021:43:11",
              "statements": [
                {
                  "expression": {
                    "id": 3518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3516,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3405,
                      "src": "3031:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3517,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3511,
                      "src": "3045:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3031:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3519,
                  "nodeType": "ExpressionStatement",
                  "src": "3031:26:11"
                }
              ]
            },
            "documentation": {
              "id": 3509,
              "nodeType": "StructuredDocumentation",
              "src": "2839:106:11",
              "text": " @notice Set feeToSetter address\n @param _feeToSetter Address to control the feeTo"
            },
            "functionSelector": "a2e74af6",
            "id": 3521,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3514,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3513,
                  "name": "onlyFeeToSetter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3428,
                  "src": "3005:15:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3005:15:11"
              }
            ],
            "name": "setFeeToSetter",
            "nameLocation": "2959:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3511,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "2982:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3521,
                  "src": "2974:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2973:22:11"
            },
            "returnParameters": {
              "id": 3515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3021:0:11"
            },
            "scope": 3702,
            "src": "2950:114:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7056
            ],
            "body": {
              "id": 3598,
              "nodeType": "Block",
              "src": "3511:767:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3538,
                              "name": "_stablecoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3526,
                              "src": "3586:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3535,
                                  "name": "policyCore",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3401,
                                  "src": "3554:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3534,
                                "name": "IPolicyCore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7445,
                                "src": "3542:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPolicyCore_$7445_$",
                                  "typeString": "type(contract IPolicyCore)"
                                }
                              },
                              "id": 3536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3542:23:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPolicyCore_$7445",
                                "typeString": "contract IPolicyCore"
                              }
                            },
                            "id": 3537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isStablecoinAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7373,
                            "src": "3542:43:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 3539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3542:56:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 3540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3602:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3542:64:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752067697665207468652077726f6e67206f72646572206f6620706f6c696379546f6b656e20616e6420737461626c65636f696e",
                        "id": 3542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3620:56:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f",
                          "typeString": "literal_string \"You give the wrong order of policyToken and stablecoin\""
                        },
                        "value": "You give the wrong order of policyToken and stablecoin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f",
                          "typeString": "literal_string \"You give the wrong order of policyToken and stablecoin\""
                        }
                      ],
                      "id": 3533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3521:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3521:165:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3544,
                  "nodeType": "ExpressionStatement",
                  "src": "3521:165:11"
                },
                {
                  "assignments": [
                    3546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3546,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "3710:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3598,
                      "src": "3697:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3545,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3697:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3551,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3548,
                          "name": "NaughtyPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4400,
                          "src": "3726:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4400_$",
                            "typeString": "type(contract NaughtyPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4400_$",
                            "typeString": "type(contract NaughtyPair)"
                          }
                        ],
                        "id": 3547,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "3721:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3721:17:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_NaughtyPair_$4400",
                        "typeString": "type(contract NaughtyPair)"
                      }
                    },
                    "id": 3550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "3721:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3697:54:11"
                },
                {
                  "assignments": [
                    3553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3553,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "3770:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3598,
                      "src": "3762:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3552,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3762:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3565,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 3558,
                                "name": "_policyTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3524,
                                "src": "3850:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3557,
                              "name": "addressToString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3674,
                              "src": "3834:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) pure returns (string memory)"
                              }
                            },
                            "id": 3559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3834:36:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3561,
                                "name": "_stablecoin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3526,
                                "src": "3904:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3560,
                              "name": "addressToString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3674,
                              "src": "3888:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) pure returns (string memory)"
                              }
                            },
                            "id": 3562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3888:28:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3555,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "3800:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3800:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3800:130:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3554,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "3777:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3777:163:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3762:178:11"
                },
                {
                  "assignments": [
                    3567
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3567,
                      "mutability": "mutable",
                      "name": "_poolAddress",
                      "nameLocation": "3959:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3598,
                      "src": "3951:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3566,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3951:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3572,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3569,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3546,
                        "src": "3982:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 3570,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3553,
                        "src": "3992:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3568,
                      "name": "_deploy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "3974:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes memory,bytes32) returns (address)"
                      }
                    },
                    "id": 3571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3974:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3951:46:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3577,
                        "name": "_policyTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3524,
                        "src": "4059:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3578,
                        "name": "_stablecoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3526,
                        "src": "4092:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3579,
                        "name": "_deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3528,
                        "src": "4117:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3574,
                            "name": "_poolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3567,
                            "src": "4021:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3573,
                          "name": "INaughtyPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7160,
                          "src": "4008:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INaughtyPair_$7160_$",
                            "typeString": "type(contract INaughtyPair)"
                          }
                        },
                        "id": 3575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4008:26:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INaughtyPair_$7160",
                          "typeString": "contract INaughtyPair"
                        }
                      },
                      "id": 3576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7159,
                      "src": "4008:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4008:128:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3581,
                  "nodeType": "ExpressionStatement",
                  "src": "4008:128:11"
                },
                {
                  "expression": {
                    "id": 3588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3582,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3391,
                          "src": "4147:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 3585,
                        "indexExpression": {
                          "id": 3583,
                          "name": "_policyTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3524,
                          "src": "4155:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4147:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 3586,
                      "indexExpression": {
                        "id": 3584,
                        "name": "_stablecoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3526,
                        "src": "4176:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4147:41:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3587,
                      "name": "_poolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3567,
                      "src": "4191:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4147:56:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3589,
                  "nodeType": "ExpressionStatement",
                  "src": "4147:56:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3593,
                        "name": "_poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3567,
                        "src": "4228:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3590,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3394,
                        "src": "4214:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4214:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4214:27:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3595,
                  "nodeType": "ExpressionStatement",
                  "src": "4214:27:11"
                },
                {
                  "expression": {
                    "id": 3596,
                    "name": "_poolAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3567,
                    "src": "4259:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3532,
                  "id": 3597,
                  "nodeType": "Return",
                  "src": "4252:19:11"
                }
              ]
            },
            "documentation": {
              "id": 3522,
              "nodeType": "StructuredDocumentation",
              "src": "3070:292:11",
              "text": " @notice After deploy the policytoken and get the address,\n         we deploy the policyToken - stablecoin pool contract\n @param _policyTokenAddress: Address of policy token\n @param _stablecoin: Address of the stable coin\n @return Address of the pool"
            },
            "functionSelector": "a3232bf3",
            "id": 3599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployPool",
            "nameLocation": "3376:10:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3524,
                  "mutability": "mutable",
                  "name": "_policyTokenAddress",
                  "nameLocation": "3404:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "3396:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3526,
                  "mutability": "mutable",
                  "name": "_stablecoin",
                  "nameLocation": "3441:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "3433:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3433:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3528,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "3470:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "3462:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3386:99:11"
            },
            "returnParameters": {
              "id": 3532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "3502:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3502:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3501:9:11"
            },
            "scope": 3702,
            "src": "3367:911:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7045
            ],
            "body": {
              "id": 3640,
              "nodeType": "Block",
              "src": "4572:316:11",
              "statements": [
                {
                  "assignments": [
                    3608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3608,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "4590:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3640,
                      "src": "4582:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3607,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4582:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3615,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3612,
                            "name": "_policyTokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3602,
                            "src": "4624:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3610,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "4607:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4607:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4607:34:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3609,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "4597:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4597:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4582:60:11"
                },
                {
                  "assignments": [
                    3617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3617,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "4666:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3640,
                      "src": "4653:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3616,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4653:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3621,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3619,
                        "name": "_policyTokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3602,
                        "src": "4700:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3618,
                      "name": "getPolicyTokenBytecode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3701,
                      "src": "4677:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) view returns (bytes memory)"
                      }
                    },
                    "id": 3620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4677:40:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4653:64:11"
                },
                {
                  "assignments": [
                    3623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3623,
                      "mutability": "mutable",
                      "name": "_policTokenAddress",
                      "nameLocation": "4736:18:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3640,
                      "src": "4728:26:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3622,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4728:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3628,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3625,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3617,
                        "src": "4765:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 3626,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3608,
                        "src": "4775:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3624,
                      "name": "_deploy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "4757:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes memory,bytes32) returns (address)"
                      }
                    },
                    "id": 3627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4757:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4728:52:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3632,
                        "name": "_policTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3623,
                        "src": "4806:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3629,
                        "name": "allTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3397,
                        "src": "4791:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4791:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4791:34:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3634,
                  "nodeType": "ExpressionStatement",
                  "src": "4791:34:11"
                },
                {
                  "expression": {
                    "id": 3636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4836:9:11",
                    "subExpression": {
                      "id": 3635,
                      "name": "_nextId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3399,
                      "src": "4836:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3637,
                  "nodeType": "ExpressionStatement",
                  "src": "4836:9:11"
                },
                {
                  "expression": {
                    "id": 3638,
                    "name": "_policTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3623,
                    "src": "4863:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3606,
                  "id": 3639,
                  "nodeType": "Return",
                  "src": "4856:25:11"
                }
              ]
            },
            "documentation": {
              "id": 3600,
              "nodeType": "StructuredDocumentation",
              "src": "4284:179:11",
              "text": " @notice For each round we need to first create the policytoken(ERC20)\n @param _policyTokenName: Name of the policyToken\n @return PolicyToken address"
            },
            "functionSelector": "f03c6132",
            "id": 3641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployPolicyToken",
            "nameLocation": "4477:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3602,
                  "mutability": "mutable",
                  "name": "_policyTokenName",
                  "nameLocation": "4509:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3641,
                  "src": "4495:30:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3601,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4495:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4494:32:11"
            },
            "returnParameters": {
              "id": 3606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3605,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3641,
                  "src": "4559:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4559:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4558:9:11"
            },
            "scope": 3702,
            "src": "4468:420:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3652,
              "nodeType": "Block",
              "src": "5056:189:11",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5075:164:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5089:54:11",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5105:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "code",
                                  "nodeType": "YulIdentifier",
                                  "src": "5112:4:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5118:4:11",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5108:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5108:15:11"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "code",
                                  "nodeType": "YulIdentifier",
                                  "src": "5131:4:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5125:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5125:11:11"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "5138:4:11"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "5097:7:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5097:46:11"
                        },
                        "variableNames": [
                          {
                            "name": "addr",
                            "nodeType": "YulIdentifier",
                            "src": "5089:4:11"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5185:44:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5210:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5213:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5203:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5203:12:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5203:12:11"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5178:4:11"
                                }
                              ],
                              "functionName": {
                                "name": "extcodesize",
                                "nodeType": "YulIdentifier",
                                "src": "5166:11:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5166:17:11"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5159:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5159:25:11"
                        },
                        "nodeType": "YulIf",
                        "src": "5156:73:11"
                      }
                    ]
                  },
                  "evmVersion": "constantinople",
                  "externalReferences": [
                    {
                      "declaration": 3649,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5089:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3649,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5178:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3644,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5112:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3644,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5131:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3646,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5138:4:11",
                      "valueSize": 1
                    }
                  ],
                  "id": 3651,
                  "nodeType": "InlineAssembly",
                  "src": "5066:173:11"
                }
              ]
            },
            "documentation": {
              "id": 3642,
              "nodeType": "StructuredDocumentation",
              "src": "4894:55:11",
              "text": " @notice Deploy function with create2"
            },
            "id": 3653,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deploy",
            "nameLocation": "4963:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3644,
                  "mutability": "mutable",
                  "name": "code",
                  "nameLocation": "4984:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3653,
                  "src": "4971:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3643,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4971:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3646,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "4998:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3653,
                  "src": "4990:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3645,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4990:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4970:33:11"
            },
            "returnParameters": {
              "id": 3650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3649,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "5046:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3653,
                  "src": "5038:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5038:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5037:14:11"
            },
            "scope": 3702,
            "src": "4954:291:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3673,
              "nodeType": "Block",
              "src": "5484:65:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3230",
                        "id": 3670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5539:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3665,
                                    "name": "_addr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3656,
                                    "src": "5518:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3664,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5510:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 3663,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5510:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5510:14:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 3662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5502:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 3661,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5502:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5502:23:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3668,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5501:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toHexString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1439,
                      "src": "5501:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (string memory)"
                      }
                    },
                    "id": 3671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5501:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3660,
                  "id": 3672,
                  "nodeType": "Return",
                  "src": "5494:48:11"
                }
              ]
            },
            "documentation": {
              "id": 3654,
              "nodeType": "StructuredDocumentation",
              "src": "5251:122:11",
              "text": " @notice Transfer address to string\n @param _addr: Input address\n @return Output string form"
            },
            "id": 3674,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addressToString",
            "nameLocation": "5387:15:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3656,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "5411:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3674,
                  "src": "5403:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5403:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5402:15:11"
            },
            "returnParameters": {
              "id": 3660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3659,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3674,
                  "src": "5465:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3658,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5465:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5464:15:11"
            },
            "scope": 3702,
            "src": "5378:171:11",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3700,
              "nodeType": "Block",
              "src": "5802:326:11",
              "statements": [
                {
                  "assignments": [
                    3683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3683,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "5825:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3700,
                      "src": "5812:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3682,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5812:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3688,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3685,
                          "name": "PolicyToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6627,
                          "src": "5841:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PolicyToken_$6627_$",
                            "typeString": "type(contract PolicyToken)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PolicyToken_$6627_$",
                            "typeString": "type(contract PolicyToken)"
                          }
                        ],
                        "id": 3684,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "5836:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5836:17:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PolicyToken_$6627",
                        "typeString": "type(contract PolicyToken)"
                      }
                    },
                    "id": 3687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "5836:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5812:54:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3691,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3683,
                        "src": "6035:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3694,
                            "name": "_tokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3677,
                            "src": "6072:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 3695,
                            "name": "_tokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3677,
                            "src": "6084:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 3696,
                            "name": "policyCore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3401,
                            "src": "6096:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3692,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "6061:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6061:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6061:46:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3689,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "6001:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "6001:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 3698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6001:120:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 3681,
                  "id": 3699,
                  "nodeType": "Return",
                  "src": "5982:139:11"
                }
              ]
            },
            "documentation": {
              "id": 3675,
              "nodeType": "StructuredDocumentation",
              "src": "5555:119:11",
              "text": " @notice Get the policyToken bytecode (with parameters)\n @param _tokenName: Name of policyToken"
            },
            "id": 3701,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPolicyTokenBytecode",
            "nameLocation": "5688:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3677,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nameLocation": "5725:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3701,
                  "src": "5711:24:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3676,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5711:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5710:26:11"
            },
            "returnParameters": {
              "id": 3681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3680,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3701,
                  "src": "5784:12:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3679,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5784:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5783:14:11"
            },
            "scope": 3702,
            "src": "5679:449:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3703,
        "src": "632:5498:11",
        "usedErrors": []
      }
    ],
    "src": "32:6099:11"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/NaughtyFactory.sol",
    "exportedSymbols": {
      "Address": [
        1215
      ],
      "Context": [
        1237
      ],
      "ERC20": [
        591
      ],
      "IERC20": [
        669
      ],
      "IERC20Metadata": [
        694
      ],
      "INaughtyFactory": [
        7057
      ],
      "INaughtyPair": [
        7160
      ],
      "IPolicyCore": [
        7445
      ],
      "IPolicyToken": [
        7476
      ],
      "NaughtyFactory": [
        3702
      ],
      "NaughtyPair": [
        4400
      ],
      "PRBMath": [
        3334
      ],
      "PRBMathSD59x18__AbsInputTooSmall": [
        1465
      ],
      "PRBMathSD59x18__CeilOverflow": [
        1470
      ],
      "PRBMathSD59x18__DivInputTooSmall": [
        1473
      ],
      "PRBMathSD59x18__DivOverflow": [
        1478
      ],
      "PRBMathSD59x18__Exp2InputTooBig": [
        1488
      ],
      "PRBMathSD59x18__ExpInputTooBig": [
        1483
      ],
      "PRBMathSD59x18__FloorUnderflow": [
        1493
      ],
      "PRBMathSD59x18__FromIntOverflow": [
        1498
      ],
      "PRBMathSD59x18__FromIntUnderflow": [
        1503
      ],
      "PRBMathSD59x18__GmNegativeProduct": [
        1510
      ],
      "PRBMathSD59x18__GmOverflow": [
        1517
      ],
      "PRBMathSD59x18__LogInputTooSmall": [
        1522
      ],
      "PRBMathSD59x18__MulInputTooSmall": [
        1525
      ],
      "PRBMathSD59x18__MulOverflow": [
        1530
      ],
      "PRBMathSD59x18__PowuOverflow": [
        1535
      ],
      "PRBMathSD59x18__SqrtNegativeInput": [
        1540
      ],
      "PRBMathSD59x18__SqrtOverflow": [
        1545
      ],
      "PRBMathUD60x18__AddOverflow": [
        1552
      ],
      "PRBMathUD60x18__CeilOverflow": [
        1557
      ],
      "PRBMathUD60x18__Exp2InputTooBig": [
        1567
      ],
      "PRBMathUD60x18__ExpInputTooBig": [
        1562
      ],
      "PRBMathUD60x18__FromUintOverflow": [
        1572
      ],
      "PRBMathUD60x18__GmOverflow": [
        1579
      ],
      "PRBMathUD60x18__LogInputTooSmall": [
        1584
      ],
      "PRBMathUD60x18__SqrtOverflow": [
        1589
      ],
      "PRBMathUD60x18__SubUnderflow": [
        1596
      ],
      "PRBMath__MulDivFixedPointOverflow": [
        1447
      ],
      "PRBMath__MulDivOverflow": [
        1454
      ],
      "PRBMath__MulDivSignedInputTooSmall": [
        1457
      ],
      "PRBMath__MulDivSignedOverflow": [
        1462
      ],
      "PolicyToken": [
        6627
      ],
      "PoolLPToken": [
        6674
      ],
      "SafeERC20": [
        918
      ],
      "Strings": [
        1440
      ]
    },
    "id": 3703,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3372,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:11"
      },
      {
        "absolutePath": "project:/contracts/PolicyToken.sol",
        "file": "./PolicyToken.sol",
        "id": 3373,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 6628,
        "src": "56:27:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/NaughtyPair.sol",
        "file": "./NaughtyPair.sol",
        "id": 3374,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 4401,
        "src": "84:27:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3375,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 670,
        "src": "113:56:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/INaughtyPair.sol",
        "file": "./interfaces/INaughtyPair.sol",
        "id": 3376,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 7161,
        "src": "170:39:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/INaughtyFactory.sol",
        "file": "./interfaces/INaughtyFactory.sol",
        "id": 3377,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 7058,
        "src": "210:42:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IPolicyCore.sol",
        "file": "./interfaces/IPolicyCore.sol",
        "id": 3378,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 7446,
        "src": "253:38:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 3379,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3703,
        "sourceUnit": 1441,
        "src": "293:51:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3381,
              "name": "INaughtyFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7057,
              "src": "659:15:11"
            },
            "id": 3382,
            "nodeType": "InheritanceSpecifier",
            "src": "659:15:11"
          }
        ],
        "canonicalName": "NaughtyFactory",
        "contractDependencies": [
          4400,
          6627
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3380,
          "nodeType": "StructuredDocumentation",
          "src": "346:284:11",
          "text": " @title Naughty Factory\n @dev Factory contract to deploy new pools periodically\n      Each pool(product) will have a unique naughtyId\n      Each pool will have its pool token\n      PolicyToken - Stablecoin\n      Token 0 may change but Token 1 is always stablecoin."
        },
        "fullyImplemented": true,
        "id": 3702,
        "linearizedBaseContracts": [
          3702,
          7057
        ],
        "name": "NaughtyFactory",
        "nameLocation": "641:14:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3385,
            "libraryName": {
              "id": 3383,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1440,
              "src": "687:7:11"
            },
            "nodeType": "UsingForDirective",
            "src": "681:26:11",
            "typeName": {
              "id": 3384,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "699:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3391,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "826:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "778:55:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 3390,
              "keyType": {
                "id": 3386,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "786:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "778:47:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 3389,
                "keyType": {
                  "id": 3387,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "805:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "797:27:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 3388,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "816:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3394,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "850:8:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "840:18:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3392,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "840:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3393,
              "nodeType": "ArrayTypeName",
              "src": "840:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3397,
            "mutability": "mutable",
            "name": "allTokens",
            "nameLocation": "874:9:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "864:19:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3395,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "864:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3396,
              "nodeType": "ArrayTypeName",
              "src": "864:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f2f2fff5",
            "id": 3399,
            "mutability": "mutable",
            "name": "_nextId",
            "nameLocation": "905:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "890:22:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3398,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "890:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e30145e0",
            "id": 3401,
            "mutability": "mutable",
            "name": "policyCore",
            "nameLocation": "934:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "919:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3400,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "919:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7029
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 3403,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "966:5:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "951:20:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3402,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "951:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "094b7415",
            "id": 3405,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "992:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 3702,
            "src": "977:26:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3404,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "977:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3414,
              "nodeType": "Block",
              "src": "1044:43:11",
              "statements": [
                {
                  "expression": {
                    "id": 3412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3410,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3405,
                      "src": "1054:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3411,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3407,
                      "src": "1068:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1054:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3413,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:26:11"
                }
              ]
            },
            "id": 3415,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3407,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1030:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3415,
                  "src": "1022:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1021:22:11"
            },
            "returnParameters": {
              "id": 3409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1044:0:11"
            },
            "scope": 3702,
            "src": "1010:77:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3427,
              "nodeType": "Block",
              "src": "1192:139:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3419,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1223:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1223:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3421,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3405,
                          "src": "1237:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1223:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920666565546f5365747465722063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 3423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1262:41:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84",
                          "typeString": "literal_string \"Only feeToSetter can call this function\""
                        },
                        "value": "Only feeToSetter can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96a8017335ac2343b8d73943f4aa9c26656cb47588a48a32ebfedba671a2eb84",
                          "typeString": "literal_string \"Only feeToSetter can call this function\""
                        }
                      ],
                      "id": 3418,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1202:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1202:111:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3425,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:111:11"
                },
                {
                  "id": 3426,
                  "nodeType": "PlaceholderStatement",
                  "src": "1323:1:11"
                }
              ]
            },
            "documentation": {
              "id": 3416,
              "nodeType": "StructuredDocumentation",
              "src": "1093:67:11",
              "text": " @notice Only feeToSetter can call some functions"
            },
            "id": 3428,
            "name": "onlyFeeToSetter",
            "nameLocation": "1174:15:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1189:2:11"
            },
            "src": "1165:166:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3444,
              "nodeType": "Block",
              "src": "1493:91:11",
              "statements": [
                {
                  "assignments": [
                    3435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3435,
                      "mutability": "mutable",
                      "name": "currentToken",
                      "nameLocation": "1511:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3444,
                      "src": "1503:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3434,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1503:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3439,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3436,
                      "name": "_nextId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3399,
                      "src": "1526:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 3437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1536:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1526:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1503:34:11"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3440,
                      "name": "allTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3397,
                      "src": "1554:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 3442,
                    "indexExpression": {
                      "id": 3441,
                      "name": "currentToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3435,
                      "src": "1564:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1554:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3433,
                  "id": 3443,
                  "nodeType": "Return",
                  "src": "1547:30:11"
                }
              ]
            },
            "documentation": {
              "id": 3429,
              "nodeType": "StructuredDocumentation",
              "src": "1337:88:11",
              "text": " @notice Next token to be deployed\n @return Latest token address"
            },
            "functionSelector": "9fd2650e",
            "id": 3445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestTokenAddress",
            "nameLocation": "1439:21:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1460:2:11"
            },
            "returnParameters": {
              "id": 3433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3445,
                  "src": "1484:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1484:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1483:9:11"
            },
            "scope": 3702,
            "src": "1430:154:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7038
            ],
            "body": {
              "id": 3483,
              "nodeType": "Block",
              "src": "1962:356:11",
              "statements": [
                {
                  "assignments": [
                    3456,
                    3458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3456,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "2032:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3483,
                      "src": "2024:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3455,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2024:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3458,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "2048:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3483,
                      "src": "2040:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3457,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2040:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3472,
                  "initialValue": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 3463,
                          "name": "_tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3450,
                          "src": "2115:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3460,
                              "name": "policyCore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3401,
                              "src": "2070:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3459,
                            "name": "IPolicyCore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7445,
                            "src": "2058:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPolicyCore_$7445_$",
                              "typeString": "type(contract IPolicyCore)"
                            }
                          },
                          "id": 3461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2058:23:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPolicyCore_$7445",
                            "typeString": "contract IPolicyCore"
                          }
                        },
                        "id": 3462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isStablecoinAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7373,
                        "src": "2058:56:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 3464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2058:72:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 3468,
                          "name": "_tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3450,
                          "src": "2193:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3469,
                          "name": "_tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3448,
                          "src": "2209:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3470,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2192:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 3471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2058:166:11",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 3465,
                          "name": "_tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3448,
                          "src": "2146:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3466,
                          "name": "_tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3450,
                          "src": "2162:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3467,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2145:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2023:201:11"
                },
                {
                  "assignments": [
                    3474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3474,
                      "mutability": "mutable",
                      "name": "_pairAddress",
                      "nameLocation": "2243:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3483,
                      "src": "2235:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3473,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2235:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3480,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3475,
                        "name": "getPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3391,
                        "src": "2258:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                          "typeString": "mapping(address => mapping(address => address))"
                        }
                      },
                      "id": 3477,
                      "indexExpression": {
                        "id": 3476,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3456,
                        "src": "2266:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2258:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 3479,
                    "indexExpression": {
                      "id": 3478,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3458,
                      "src": "2274:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2258:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2235:46:11"
                },
                {
                  "expression": {
                    "id": 3481,
                    "name": "_pairAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3474,
                    "src": "2299:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3454,
                  "id": 3482,
                  "nodeType": "Return",
                  "src": "2292:19:11"
                }
              ]
            },
            "documentation": {
              "id": 3446,
              "nodeType": "StructuredDocumentation",
              "src": "1590:237:11",
              "text": " @notice Get the pair address deployed by the factory\n         PolicyToken address first, and then stablecoin address\n         The order of the token not matters\n @return Pool address of the two tokens"
            },
            "functionSelector": "b4f69a2f",
            "id": 3484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPairAddress",
            "nameLocation": "1841:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3448,
                  "mutability": "mutable",
                  "name": "_tokenAddress1",
                  "nameLocation": "1864:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "1856:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1856:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3450,
                  "mutability": "mutable",
                  "name": "_tokenAddress2",
                  "nameLocation": "1888:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "1880:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1855:48:11"
            },
            "returnParameters": {
              "id": 3454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3453,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "1949:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1948:9:11"
            },
            "scope": 3702,
            "src": "1832:486:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3494,
              "nodeType": "Block",
              "src": "2599:41:11",
              "statements": [
                {
                  "expression": {
                    "id": 3492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3490,
                      "name": "policyCore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3401,
                      "src": "2609:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3491,
                      "name": "_policyCore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3487,
                      "src": "2622:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2609:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3493,
                  "nodeType": "ExpressionStatement",
                  "src": "2609:24:11"
                }
              ]
            },
            "documentation": {
              "id": 3485,
              "nodeType": "StructuredDocumentation",
              "src": "2324:210:11",
              "text": " @notice Remember to call this function to set the policyCore address\n         < PolicyCore should be the owner of policyToken >\n @param _policyCore: Address of policyCore contract"
            },
            "functionSelector": "61c8f99d",
            "id": 3495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPolicyCoreAddress",
            "nameLocation": "2548:20:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3487,
                  "mutability": "mutable",
                  "name": "_policyCore",
                  "nameLocation": "2577:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3495,
                  "src": "2569:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2569:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2568:21:11"
            },
            "returnParameters": {
              "id": 3489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2599:0:11"
            },
            "scope": 3702,
            "src": "2539:101:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3507,
              "nodeType": "Block",
              "src": "2802:31:11",
              "statements": [
                {
                  "expression": {
                    "id": 3505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3503,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3403,
                      "src": "2812:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3504,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3498,
                      "src": "2820:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2812:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3506,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:14:11"
                }
              ]
            },
            "documentation": {
              "id": 3496,
              "nodeType": "StructuredDocumentation",
              "src": "2646:92:11",
              "text": " @notice Set feeTo address\n @param _feeTo Address to receive the fee"
            },
            "functionSelector": "f46901ed",
            "id": 3508,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3501,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3500,
                  "name": "onlyFeeToSetter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3428,
                  "src": "2786:15:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "2786:15:11"
              }
            ],
            "name": "setFeeTo",
            "nameLocation": "2752:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3498,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "2769:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3508,
                  "src": "2761:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2760:16:11"
            },
            "returnParameters": {
              "id": 3502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2802:0:11"
            },
            "scope": 3702,
            "src": "2743:90:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3520,
              "nodeType": "Block",
              "src": "3021:43:11",
              "statements": [
                {
                  "expression": {
                    "id": 3518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3516,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3405,
                      "src": "3031:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3517,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3511,
                      "src": "3045:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3031:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3519,
                  "nodeType": "ExpressionStatement",
                  "src": "3031:26:11"
                }
              ]
            },
            "documentation": {
              "id": 3509,
              "nodeType": "StructuredDocumentation",
              "src": "2839:106:11",
              "text": " @notice Set feeToSetter address\n @param _feeToSetter Address to control the feeTo"
            },
            "functionSelector": "a2e74af6",
            "id": 3521,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3514,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3513,
                  "name": "onlyFeeToSetter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3428,
                  "src": "3005:15:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3005:15:11"
              }
            ],
            "name": "setFeeToSetter",
            "nameLocation": "2959:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3511,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "2982:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3521,
                  "src": "2974:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2973:22:11"
            },
            "returnParameters": {
              "id": 3515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3021:0:11"
            },
            "scope": 3702,
            "src": "2950:114:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7056
            ],
            "body": {
              "id": 3598,
              "nodeType": "Block",
              "src": "3511:767:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3538,
                              "name": "_stablecoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3526,
                              "src": "3586:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3535,
                                  "name": "policyCore",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3401,
                                  "src": "3554:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3534,
                                "name": "IPolicyCore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7445,
                                "src": "3542:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPolicyCore_$7445_$",
                                  "typeString": "type(contract IPolicyCore)"
                                }
                              },
                              "id": 3536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3542:23:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPolicyCore_$7445",
                                "typeString": "contract IPolicyCore"
                              }
                            },
                            "id": 3537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isStablecoinAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7373,
                            "src": "3542:43:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 3539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3542:56:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 3540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3602:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3542:64:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752067697665207468652077726f6e67206f72646572206f6620706f6c696379546f6b656e20616e6420737461626c65636f696e",
                        "id": 3542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3620:56:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f",
                          "typeString": "literal_string \"You give the wrong order of policyToken and stablecoin\""
                        },
                        "value": "You give the wrong order of policyToken and stablecoin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77f24797704bc77ee31d9c6a8d9e62ca6224df2af6f0342fa17c5d4289f9689f",
                          "typeString": "literal_string \"You give the wrong order of policyToken and stablecoin\""
                        }
                      ],
                      "id": 3533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3521:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3521:165:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3544,
                  "nodeType": "ExpressionStatement",
                  "src": "3521:165:11"
                },
                {
                  "assignments": [
                    3546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3546,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "3710:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3598,
                      "src": "3697:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3545,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3697:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3551,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3548,
                          "name": "NaughtyPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4400,
                          "src": "3726:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4400_$",
                            "typeString": "type(contract NaughtyPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_NaughtyPair_$4400_$",
                            "typeString": "type(contract NaughtyPair)"
                          }
                        ],
                        "id": 3547,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "3721:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3721:17:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_NaughtyPair_$4400",
                        "typeString": "type(contract NaughtyPair)"
                      }
                    },
                    "id": 3550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "3721:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3697:54:11"
                },
                {
                  "assignments": [
                    3553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3553,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "3770:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3598,
                      "src": "3762:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3552,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3762:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3565,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 3558,
                                "name": "_policyTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3524,
                                "src": "3850:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3557,
                              "name": "addressToString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3674,
                              "src": "3834:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) pure returns (string memory)"
                              }
                            },
                            "id": 3559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3834:36:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3561,
                                "name": "_stablecoin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3526,
                                "src": "3904:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3560,
                              "name": "addressToString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3674,
                              "src": "3888:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) pure returns (string memory)"
                              }
                            },
                            "id": 3562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3888:28:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3555,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "3800:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3800:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3800:130:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3554,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "3777:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3777:163:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3762:178:11"
                },
                {
                  "assignments": [
                    3567
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3567,
                      "mutability": "mutable",
                      "name": "_poolAddress",
                      "nameLocation": "3959:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3598,
                      "src": "3951:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3566,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3951:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3572,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3569,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3546,
                        "src": "3982:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 3570,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3553,
                        "src": "3992:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3568,
                      "name": "_deploy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "3974:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes memory,bytes32) returns (address)"
                      }
                    },
                    "id": 3571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3974:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3951:46:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3577,
                        "name": "_policyTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3524,
                        "src": "4059:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3578,
                        "name": "_stablecoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3526,
                        "src": "4092:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3579,
                        "name": "_deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3528,
                        "src": "4117:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3574,
                            "name": "_poolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3567,
                            "src": "4021:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3573,
                          "name": "INaughtyPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7160,
                          "src": "4008:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INaughtyPair_$7160_$",
                            "typeString": "type(contract INaughtyPair)"
                          }
                        },
                        "id": 3575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4008:26:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INaughtyPair_$7160",
                          "typeString": "contract INaughtyPair"
                        }
                      },
                      "id": 3576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7159,
                      "src": "4008:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4008:128:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3581,
                  "nodeType": "ExpressionStatement",
                  "src": "4008:128:11"
                },
                {
                  "expression": {
                    "id": 3588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3582,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3391,
                          "src": "4147:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 3585,
                        "indexExpression": {
                          "id": 3583,
                          "name": "_policyTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3524,
                          "src": "4155:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4147:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 3586,
                      "indexExpression": {
                        "id": 3584,
                        "name": "_stablecoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3526,
                        "src": "4176:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4147:41:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3587,
                      "name": "_poolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3567,
                      "src": "4191:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4147:56:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3589,
                  "nodeType": "ExpressionStatement",
                  "src": "4147:56:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3593,
                        "name": "_poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3567,
                        "src": "4228:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3590,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3394,
                        "src": "4214:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4214:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4214:27:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3595,
                  "nodeType": "ExpressionStatement",
                  "src": "4214:27:11"
                },
                {
                  "expression": {
                    "id": 3596,
                    "name": "_poolAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3567,
                    "src": "4259:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3532,
                  "id": 3597,
                  "nodeType": "Return",
                  "src": "4252:19:11"
                }
              ]
            },
            "documentation": {
              "id": 3522,
              "nodeType": "StructuredDocumentation",
              "src": "3070:292:11",
              "text": " @notice After deploy the policytoken and get the address,\n         we deploy the policyToken - stablecoin pool contract\n @param _policyTokenAddress: Address of policy token\n @param _stablecoin: Address of the stable coin\n @return Address of the pool"
            },
            "functionSelector": "a3232bf3",
            "id": 3599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployPool",
            "nameLocation": "3376:10:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3524,
                  "mutability": "mutable",
                  "name": "_policyTokenAddress",
                  "nameLocation": "3404:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "3396:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3526,
                  "mutability": "mutable",
                  "name": "_stablecoin",
                  "nameLocation": "3441:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "3433:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3433:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3528,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "3470:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "3462:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3386:99:11"
            },
            "returnParameters": {
              "id": 3532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "3502:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3502:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3501:9:11"
            },
            "scope": 3702,
            "src": "3367:911:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7045
            ],
            "body": {
              "id": 3640,
              "nodeType": "Block",
              "src": "4572:316:11",
              "statements": [
                {
                  "assignments": [
                    3608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3608,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "4590:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3640,
                      "src": "4582:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3607,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4582:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3615,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3612,
                            "name": "_policyTokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3602,
                            "src": "4624:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3610,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "4607:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4607:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4607:34:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3609,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "4597:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4597:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4582:60:11"
                },
                {
                  "assignments": [
                    3617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3617,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "4666:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3640,
                      "src": "4653:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3616,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4653:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3621,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3619,
                        "name": "_policyTokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3602,
                        "src": "4700:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3618,
                      "name": "getPolicyTokenBytecode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3701,
                      "src": "4677:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) view returns (bytes memory)"
                      }
                    },
                    "id": 3620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4677:40:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4653:64:11"
                },
                {
                  "assignments": [
                    3623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3623,
                      "mutability": "mutable",
                      "name": "_policTokenAddress",
                      "nameLocation": "4736:18:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3640,
                      "src": "4728:26:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3622,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4728:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3628,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3625,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3617,
                        "src": "4765:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 3626,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3608,
                        "src": "4775:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3624,
                      "name": "_deploy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3653,
                      "src": "4757:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes memory,bytes32) returns (address)"
                      }
                    },
                    "id": 3627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4757:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4728:52:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3632,
                        "name": "_policTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3623,
                        "src": "4806:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3629,
                        "name": "allTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3397,
                        "src": "4791:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4791:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4791:34:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3634,
                  "nodeType": "ExpressionStatement",
                  "src": "4791:34:11"
                },
                {
                  "expression": {
                    "id": 3636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4836:9:11",
                    "subExpression": {
                      "id": 3635,
                      "name": "_nextId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3399,
                      "src": "4836:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3637,
                  "nodeType": "ExpressionStatement",
                  "src": "4836:9:11"
                },
                {
                  "expression": {
                    "id": 3638,
                    "name": "_policTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3623,
                    "src": "4863:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3606,
                  "id": 3639,
                  "nodeType": "Return",
                  "src": "4856:25:11"
                }
              ]
            },
            "documentation": {
              "id": 3600,
              "nodeType": "StructuredDocumentation",
              "src": "4284:179:11",
              "text": " @notice For each round we need to first create the policytoken(ERC20)\n @param _policyTokenName: Name of the policyToken\n @return PolicyToken address"
            },
            "functionSelector": "f03c6132",
            "id": 3641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployPolicyToken",
            "nameLocation": "4477:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3602,
                  "mutability": "mutable",
                  "name": "_policyTokenName",
                  "nameLocation": "4509:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3641,
                  "src": "4495:30:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3601,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4495:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4494:32:11"
            },
            "returnParameters": {
              "id": 3606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3605,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3641,
                  "src": "4559:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4559:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4558:9:11"
            },
            "scope": 3702,
            "src": "4468:420:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3652,
              "nodeType": "Block",
              "src": "5056:189:11",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5075:164:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5089:54:11",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5105:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "code",
                                  "nodeType": "YulIdentifier",
                                  "src": "5112:4:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5118:4:11",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5108:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5108:15:11"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "code",
                                  "nodeType": "YulIdentifier",
                                  "src": "5131:4:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5125:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5125:11:11"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "5138:4:11"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "5097:7:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5097:46:11"
                        },
                        "variableNames": [
                          {
                            "name": "addr",
                            "nodeType": "YulIdentifier",
                            "src": "5089:4:11"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5185:44:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5210:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5213:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5203:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5203:12:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5203:12:11"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5178:4:11"
                                }
                              ],
                              "functionName": {
                                "name": "extcodesize",
                                "nodeType": "YulIdentifier",
                                "src": "5166:11:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5166:17:11"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5159:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5159:25:11"
                        },
                        "nodeType": "YulIf",
                        "src": "5156:73:11"
                      }
                    ]
                  },
                  "evmVersion": "constantinople",
                  "externalReferences": [
                    {
                      "declaration": 3649,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5089:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3649,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5178:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3644,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5112:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3644,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5131:4:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3646,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5138:4:11",
                      "valueSize": 1
                    }
                  ],
                  "id": 3651,
                  "nodeType": "InlineAssembly",
                  "src": "5066:173:11"
                }
              ]
            },
            "documentation": {
              "id": 3642,
              "nodeType": "StructuredDocumentation",
              "src": "4894:55:11",
              "text": " @notice Deploy function with create2"
            },
            "id": 3653,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deploy",
            "nameLocation": "4963:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3644,
                  "mutability": "mutable",
                  "name": "code",
                  "nameLocation": "4984:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3653,
                  "src": "4971:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3643,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4971:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3646,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "4998:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3653,
                  "src": "4990:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3645,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4990:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4970:33:11"
            },
            "returnParameters": {
              "id": 3650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3649,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "5046:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3653,
                  "src": "5038:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5038:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5037:14:11"
            },
            "scope": 3702,
            "src": "4954:291:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3673,
              "nodeType": "Block",
              "src": "5484:65:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3230",
                        "id": 3670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5539:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3665,
                                    "name": "_addr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3656,
                                    "src": "5518:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3664,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5510:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 3663,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5510:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5510:14:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 3662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5502:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 3661,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5502:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5502:23:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3668,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5501:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toHexString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1439,
                      "src": "5501:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (string memory)"
                      }
                    },
                    "id": 3671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5501:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3660,
                  "id": 3672,
                  "nodeType": "Return",
                  "src": "5494:48:11"
                }
              ]
            },
            "documentation": {
              "id": 3654,
              "nodeType": "StructuredDocumentation",
              "src": "5251:122:11",
              "text": " @notice Transfer address to string\n @param _addr: Input address\n @return Output string form"
            },
            "id": 3674,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addressToString",
            "nameLocation": "5387:15:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3656,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "5411:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3674,
                  "src": "5403:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5403:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5402:15:11"
            },
            "returnParameters": {
              "id": 3660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3659,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3674,
                  "src": "5465:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3658,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5465:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5464:15:11"
            },
            "scope": 3702,
            "src": "5378:171:11",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3700,
              "nodeType": "Block",
              "src": "5802:326:11",
              "statements": [
                {
                  "assignments": [
                    3683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3683,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "5825:8:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3700,
                      "src": "5812:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3682,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5812:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3688,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3685,
                          "name": "PolicyToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6627,
                          "src": "5841:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PolicyToken_$6627_$",
                            "typeString": "type(contract PolicyToken)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PolicyToken_$6627_$",
                            "typeString": "type(contract PolicyToken)"
                          }
                        ],
                        "id": 3684,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "5836:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5836:17:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PolicyToken_$6627",
                        "typeString": "type(contract PolicyToken)"
                      }
                    },
                    "id": 3687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "5836:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5812:54:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3691,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3683,
                        "src": "6035:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3694,
                            "name": "_tokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3677,
                            "src": "6072:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 3695,
                            "name": "_tokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3677,
                            "src": "6084:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 3696,
                            "name": "policyCore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3401,
                            "src": "6096:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3692,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "6061:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6061:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6061:46:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3689,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "6001:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 3690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "6001:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 3698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6001:120:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 3681,
                  "id": 3699,
                  "nodeType": "Return",
                  "src": "5982:139:11"
                }
              ]
            },
            "documentation": {
              "id": 3675,
              "nodeType": "StructuredDocumentation",
              "src": "5555:119:11",
              "text": " @notice Get the policyToken bytecode (with parameters)\n @param _tokenName: Name of policyToken"
            },
            "id": 3701,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPolicyTokenBytecode",
            "nameLocation": "5688:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3677,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nameLocation": "5725:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3701,
                  "src": "5711:24:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3676,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5711:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5710:26:11"
            },
            "returnParameters": {
              "id": 3681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3680,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3701,
                  "src": "5784:12:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3679,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5784:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5783:14:11"
            },
            "scope": 3702,
            "src": "5679:449:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3703,
        "src": "632:5498:11",
        "usedErrors": []
      }
    ],
    "src": "32:6099:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x9A4d3F73E313AbFDFDbD89C0f87FDe0e6f711292",
      "transactionHash": "0x454e61bc7fd18e2f4a5cb617cda9419da966567dcf4f13ba909d0ba5c62a2f05"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x91AF89a6451e93373C0E86d6A1172A2b59E4A524",
      "transactionHash": "0x0de429f8bf675555f788a975dc90e9fbfaf1a300d056f6cccd2009d66e1f9914"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-26T13:08:13.724Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Factory contract to deploy new pools periodically      Each pool(product) will have a unique naughtyId      Each pool will have its pool token      PolicyToken - Stablecoin      Token 0 may change but Token 1 is always stablecoin.",
    "kind": "dev",
    "methods": {
      "deployPolicyToken(string)": {
        "params": {
          "_policyTokenName": ": Name of the policyToken"
        },
        "returns": {
          "_0": "PolicyToken address"
        }
      },
      "deployPool(address,address,uint256)": {
        "params": {
          "_policyTokenAddress": ": Address of policy token",
          "_stablecoin": ": Address of the stable coin"
        },
        "returns": {
          "_0": "Address of the pool"
        }
      },
      "getLatestTokenAddress()": {
        "returns": {
          "_0": "Latest token address"
        }
      },
      "getPairAddress(address,address)": {
        "returns": {
          "_0": "Pool address of the two tokens"
        }
      },
      "setFeeTo(address)": {
        "params": {
          "_feeTo": "Address to receive the fee"
        }
      },
      "setFeeToSetter(address)": {
        "params": {
          "_feeToSetter": "Address to control the feeTo"
        }
      },
      "setPolicyCoreAddress(address)": {
        "params": {
          "_policyCore": ": Address of policyCore contract"
        }
      }
    },
    "title": "Naughty Factory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deployPolicyToken(string)": {
        "notice": "For each round we need to first create the policytoken(ERC20)"
      },
      "deployPool(address,address,uint256)": {
        "notice": "After deploy the policytoken and get the address,         we deploy the policyToken - stablecoin pool contract"
      },
      "getLatestTokenAddress()": {
        "notice": "Next token to be deployed"
      },
      "getPairAddress(address,address)": {
        "notice": "Get the pair address deployed by the factory         PolicyToken address first, and then stablecoin address         The order of the token not matters"
      },
      "setFeeTo(address)": {
        "notice": "Set feeTo address"
      },
      "setFeeToSetter(address)": {
        "notice": "Set feeToSetter address"
      },
      "setPolicyCoreAddress(address)": {
        "notice": "Remember to call this function to set the policyCore address         < PolicyCore should be the owner of policyToken >"
      }
    },
    "version": 1
  }
}